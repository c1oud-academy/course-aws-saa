 Добрый день, уважаемые студенты! Мы с вами начинаем разбор вопросов практик тестов. Согласно вопросу, компания хостит свое приложение в нескольких availability зонах в регионе US West 1. Используются все три availability зоны. Также используется авто скейлинг группа в связке с application load balancer. На текущий момент в availability зонах A, B и C соответственно 10, 8 и 7 запущенных инстанций. Так как трафик на приложение потихоньку уменьшается, то планируется запустить scaling операцию. В этом месте вопрос, каким образом авто скейлинг группа будет определять, какой из инстанцев нужно терминейтнуть в первую очередь. Нам необходимо из предложенных вариантов выбрать 3 правильных. На этом слайде вы видите варианты ответов. Также видите, что второй, четвертый и шестой являются верными. Здесь я бы хотел обратить ваше внимание, что все варианты ответов содержат противоположный вариант. То есть они парные. Это первый и четвертый. Далее это второй и пятый и третий с шестым. Таким образом мы можем понять, что как минимум один из каждой из пар является верным ответом. Для того, чтобы ответить на вопрос, давайте посмотрим на объяснение. В вопросе говорится, что стоит default termination policy. Идея ее в том, что авто скейлинг группа стремится распределить количество инстанцев равномерно по всем availability зонам. Исходя из этого, она старается ответить на 4 вопроса и соответственно принимает решение по отключению того или иного инстанца. Давайте посмотрим, что же это за критерии. Самым первым делом оно смотрит на количество инстанцев в каждой availability зоне. Если в какой-то из availability зон больше всего инстанцев, то она идет туда и смотрит в какой, в каком из инстанцев в конкретной availability зоне самый старый launch configuration. Если такое находится, то она отключается. Если же у нас несколько availability зон с одинаковым количеством инстанцев, то в этом случае и находится несколько инстанцев с старым launch configuration, то в этом случае она начинает сверять, какой из инстанцев ближе к завершению billing hour. То есть оплата за issue instance происходит по часу, она округляется до часа, если меньше часа вы использовали issue instance. Поэтому для того, чтобы максимально использовать issue instance и сократить ваши расходы, она старается определить тот instance, который большую часть часа она работала и с округлением вы потеряете минимальное количество минут в рамках этого часа. Если из двух или нескольких инстанцев находится та, которая ближе всего, то она отключается. Если же таких инстанцев по следующим критериям находится несколько, то autoscaling группа terminated instance в случайном порядке. Также вы можете видеть логику работы default termination policy autoscaling группы на этой диаграмме. На этом мы разобрали вопрос practice теста. Спасибо за внимание.

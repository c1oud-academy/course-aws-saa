WEBVTT

00:00:00.000 --> 00:00:06.000
Добрый день, уважаемые студенты! Мы с вами 
начинаем разбор вопроса Practice Test-а.

00:00:08.000 --> 00:00:17.000
Что дано? Компания планирует хранить некоторые
конфиденциальные данные по налогам в AWS.

00:00:18.000 --> 00:00:22.000
Эти данные не должны
быть доступны публично.

00:00:22.000 --> 00:00:29.000
Более того, доступ к этим данным должен
быть доступным только для определенного VPC.

00:00:31.000 --> 00:00:37.488
Второе требование. Нам необходимо
 обеспечить, что объекты в

00:00:37.512 --> 00:00:44.000
этом хранилище должны быть
защищены от удаления и перезаписи.

00:00:44.000 --> 00:00:53.000
Таким образом, должно сохраняться регуляторное
требование WORM, то есть write-once-read-many.

00:00:54.000 --> 00:00:57.988
Идея в том, что записывается
один раз и может считываться

00:00:58.012 --> 00:01:02.000
много раз. Перезаписываться 
эти объекты тоже не могут.

00:01:02.000 --> 00:01:07.488
Нам необходимо из предложенных
вариантов ответа выбрать два

00:01:07.512 --> 00:01:13.000
варианта ответа, которые помогают
это требование реализовать.

00:01:15.000 --> 00:01:19.000
Давайте посмотрим, какие
варианты ответов нам даны.

00:01:20.000 --> 00:01:25.000
Мы видим, что первый и четвертый
варианты ответов являются правильными.

00:01:25.000 --> 00:01:32.000
Более того, мы видим, что ни один
из вариантов не похож на другой.

00:01:33.000 --> 00:01:41.000
Таким образом, этот вопрос является достаточно
сложным, требует знания нескольких особенностей AWS.

00:01:42.000 --> 00:01:49.000
Давайте попробуем разобрать каждый из вариантов
ответа и дать ответ, почему оно верное или неверное.

00:01:49.000 --> 00:01:56.000
Давайте вспомним теорию, а именно
функционал Access Points сервиса Amazon S3.

00:01:57.000 --> 00:02:02.727
Это тот функционал, который
позволяет ограничить доступ к S3 Bucket

00:02:02.751 --> 00:02:09.000
на операции с объектами, такие как
чтение объекта либо запись объекта.

00:02:09.000 --> 00:02:14.684
Вы можете видеть на картинке, в левом
навигационном меню было выбрано Access

00:02:14.708 --> 00:02:21.000
Points сервиса Amazon S3 и указываются
некоторые входные данные, а именно Bucket.

00:02:22.000 --> 00:02:31.000
Далее указывается список VPC,
на которые ставится ограничение.

00:02:31.000 --> 00:02:39.000
Из всех других не указанных VPC к
этому S3 обратиться будет невозможно.

00:02:39.000 --> 00:02:48.000
Другой момент это то, что Access Points
хорош тем, что не требует выхода в интернет.

00:02:48.000 --> 00:02:54.000
Все операции обмена данными происходят
внутри глобальной инфраструктуры AWS.

00:02:54.000 --> 00:02:58.698
Это все дает дополнительные
возможности, а именно то, что мы можем

00:02:58.722 --> 00:03:04.000
настроить cross-regional доступ к
вашему S3 Bucket через Access Points.

00:03:04.000 --> 00:03:09.164
Это также возможно.
В этом случае используется AWS Global

00:03:09.188 --> 00:03:15.000
Accelerator, который помогает
быстрее передавать ваши данные.

00:03:15.000 --> 00:03:24.000
Другой функционал, который важен для
решения конкретной задачи, это S3 Object Lock.

00:03:24.000 --> 00:03:31.626
Идея в том, что этот функционал запрещает
запись и перезапись объектов внутри нашего

00:03:31.650 --> 00:03:39.000
S3 Bucket и дает возможность бесконечное
количество раз эти объекты считывать.

00:03:39.000 --> 00:03:48.000
Есть определенные нюансы. Object Lock
настраивается в момент создания S3 Bucket.

00:03:48.000 --> 00:03:53.123
Таким образом, в момент
создания вам необходимо в Advanced

00:03:53.147 --> 00:03:58.000
Settings для опции Object
Lock выбрать опцию Enable.

00:03:58.000 --> 00:04:04.000
Обратите внимание, что когда вы включаете
Object Lock, его после отключить будет невозможно.

00:04:05.000 --> 00:04:10.000
Более того, он автоматически
включает Bucket Versioning.

00:04:11.000 --> 00:04:17.000
Когда у нас включенный Object Lock, Bucket
Versioning отключен или остановлен быть не может.

00:04:17.000 --> 00:04:23.675
Таким образом, правильными
ответами являются использование Amazon

00:04:23.699 --> 00:04:31.000
S3 Access Point для того, чтобы
ограничить доступ на конкретный VPC.

00:04:32.000 --> 00:04:37.528
И второй вариант ответа - это
использовать функционал Object

00:04:37.552 --> 00:04:43.080
Lock во время создания S3
Bucket, для того, чтобы учитывалось

00:04:43.104 --> 00:04:48.540
регуляторное требование
записывать файлы один раз и иметь

00:04:48.564 --> 00:04:54.000
возможность считывать эти
файлы необходимое количество раз.

00:04:56.000 --> 00:05:01.000
Давайте теперь подробнее остановимся на
вариантах ответов, которые являются неверными.

00:05:01.000 --> 00:05:05.488
В первом случае говорится
про AWS Network Firewall.

00:05:05.512 --> 00:05:10.000
Network Firewall настраивается на
уровне VPC, не на уровне S3 Bucket.

00:05:11.000 --> 00:05:16.488
Таким образом, даже если мы можем настроить
поток данных для VPC, ограничить доступ к

00:05:16.512 --> 00:05:22.000
S3 Bucket через Network Firewall мы не можем.
Поэтому этот вариант является неверным.

00:05:22.000 --> 00:05:28.783
Если мы говорим про вариант S3 Glacier, он
также не подходит, потому что Glacier используется

00:05:28.807 --> 00:05:35.000
для хранения архивных данных и извлечения
данных не сразу, а через какое-то время.

00:05:36.000 --> 00:05:46.000
Нам же сказано, что мы должны иметь возможность при
необходимости в ту же секунду извлекать эти данные.

00:05:46.000 --> 00:05:54.000
Другой момент это то, что Glacier не запрещает
перезаписывать или создавать новые файлы.

00:05:55.000 --> 00:06:02.000
Таким образом, требование WORM, то
есть write-once-read-many не выполняется.

00:06:02.000 --> 00:06:07.482
Если мы говорим про последний
вариант с включением опции

00:06:07.506 --> 00:06:12.988
Object Lock при этом отключить
Object Versioning, он сам

00:06:13.012 --> 00:06:18.494
себя исключает, потому что
в момент, когда вы включаете

00:06:18.518 --> 00:06:24.000
Object Lock, автоматически
включается Object Versioning.

00:06:25.000 --> 00:06:30.000
Его вы отключить или даже остановить
после включения опции Object Lock не можете.

00:06:30.000 --> 00:06:33.000
Поэтому этот вариант
является неверным.

00:06:33.000 --> 00:06:39.000
На этом мы разобрали вопрос Practice 
Test-а. Спасибо за внимание.
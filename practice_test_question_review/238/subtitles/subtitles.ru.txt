Добрый день, уважаемые студенты. Мы начинаем с вами разбор вопроса Practice Test-а. Согласно вопросу, компания генерирует некоторое количество конфиденциальных данных, которые хранит на локальном дата-центре. Как бэкап решение, компания хочет также хранить эти данные в Amazon S3 Bucket. Согласно некоторым требованиям безопасности внутри компании, шифрование должно происходить перед тем, как данные будут отправлены в S3. Более того, компания должна самостоятельно заниматься управлением и обновлением ключей шифрования. Также эти ключи должны быть под контролем компании. Какие из предложенных методов помогают этого достичь? На этом слайде вы видите предложенные варианты ответов. Также видите, что 3 и 5 являются верными. Перед тем, как мы начнем разбирать вопросы, давайте вспомним теорию. Зная теорию, легче будет ответить на любой вопрос, связанный с шифрованием в S3. Как мы знаем, есть два различных вида шифрования. Это шифрование in-transit, когда данные из одного места передаются в другое, и at rest, когда данные хранятся. Касательно S3, in-transit подразумевается процесс передачи в и загрузки данных из S3. В случае, когда мы говорим at rest, имеется в виду шифрование, когда данные фактически находятся на S3 в дата-центрах AWS. Когда мы говорим шифрование in-transit, подразумевается использование SSL ключа или шифрование на стороне клиента. Самый популярный и явный пример это в браузере, когда вы открываете некоторый сайт, если видите, что подключение идет через HTTPS, то это защищенное подключение. Так вот, в этом случае был подключен специальный SSL сертификат, который помогает шифровать передачу данных от вас до веб-сайта, то есть in-transit. Когда мы говорим at rest касательно сервиса S3, есть два принципиально отличающихся группы, это Server-Side Encryption и Client-Side Encryption. Когда мы говорим Server-Side Encryption, идея в том, что мы передаем данные к S3, далее S3 шифрует данные у себя на стороне и сохраняет на жесткие диски. Когда мы говорим Client-Side Encryption, подразумевается, что данные перед передачей в S3 уже были зашифрованы некоторыми ключами, и S3 уже получает зашифрованный файл, ему нет смысла еще раз его шифровать, а оно в таком же виде сохраняет этот файл на жесткие диски. Про обратный процесс, в случае Server-Side Encryption, S3 извлекает файлы из жестких дисков, у себя на стороне, используя ключи шифрования, расшифровывает эти файлы и передает данные вам. Если же мы говорим Client-Side Encryption, при загрузке файла из S3 происходит следующее: S3 извлекает данные из жестких дисков, и не расшифровывая ее, передает в таком же виде вам. Вы уже получаете зашифрованный файл в таком же виде, как вы передавали ее ранее, и используя ключи шифрования, этот файл расшифровываете и дальше используете. Сам процесс расшифровки происходит уже на вашей стороне. Таким образом мы говорим правильными ответами является использование Client-Side Encryption с сервисом AWS KMS, и второй вариант также Client-Side Encryption, в котором используется мастер ключ, хранящийся на стороне клиента, то есть на нашей стороне. Если же мы говорим про оставшиеся варианты, они неверные, так как есть Server-Side Encryption в обоих неправильных вариантах, что противоречит самому требованию вопроса. И также есть еще вариант Set-up Client-Side encryption with Amazon S3 managed encryption keys. Этот вариант теоретически невозможен. Здесь имеется в виду managed encryption key, который недоступен для нас как для клиента, он управляется S3, используется для шифрования наших данных, и мы до него добраться, как-то менять его, обновлять его не можем. И когда говорим Client-Side encryption with S3 managed encryption key, она сама по себе нелогичная, то есть мы не добравшись, нет возможности эти ключи извлечь, чтобы зашифровать, а здесь говорится Client-Side encryption. Поэтому этот вариант сам по себе является некорректным. Таким образом мы разобрали вопрос Practice Test-а. Спасибо за внимание.
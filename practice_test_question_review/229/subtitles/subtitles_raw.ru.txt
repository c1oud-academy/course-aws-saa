 Добрый день уважаемые студенты, мы с вами начинаем разбор вопроса practice test. Согласно вопросу, компания обслуживает клиентов по всему миру. Эти клиенты обращаются к данным компании, хранящейся на нескольких S3 bucket. У каждого S3 bucket настроен cloud front web дистрибьюшены и на текущий момент необходимо доставлять контент для специфичного клиента, чтобы только этот клиент мог добираться до данных компаний. На текущий момент все клиенты могут обращаться к данным через S3 URL, а также через cloud front distribution. То есть два различных отдельных URL ссылки по которым они могут обращаться и загружать данные. Вам необходимо как solution с архитекту настроить следующую архитектуру. Данные должны передавать, приватные данные должны передаваться только через cloud front, так чтобы защитить распространение ваших файлов. С учетом этих ограничений вам нужно из предложенных вариантов выбрать два варианта, которые помогают это все имплементировать. На этом слайде вы видите варианты ответов, также видите что второй и третий являются верными. Давайте посмотрим на объяснения. Вы видите на картинке что есть у нас с одной стороны наши пользователи, есть у нас данные в S3 bucket и есть промежуточный cloud front. Это наш CDN Content Delivery Network, который позволяет доставлять ваши данные из S3 bucket до ваших клиентов по всему миру с меньшими задержками. Таким образом у пользователей есть возможность обращаться напрямую к S3, это будет медленнее, но есть такая возможность, а также есть возможность обращаться через cloud front, это будет быстрее и что необходимо вам сделать в рамках задания это дать возможность только специфичному клиенту обращаться через cloud front к вашим данным в S3 и запретить пользователям обращаться к данным в S3 напрямую. Для этого существует два отдельных функционала. Для того чтобы запретить доступ, прямой доступ к S3 необходимо настроить Origin Access Identity OIE, так чтобы только у cloud front distribution была возможность обращаться к данным в S3. Для всех остальных внешних обращений к S3 данным доступ будет запрещен. Это первый вариант, правильный вариант ответа. Если мы говорим про второй, необходимо на уровне cloud front настроить так называемые Signed URLs или Signed Cookies, которые предоставляют выборочный доступ для клиентов, пользователей вашего приложения и в первом случае, когда мы говорим про Signed URL, генерируется специальная ссылка, у нее есть время жизни, есть полиси, к которым прописано кому и как вы предоставляете доступ. Передав эту ссылку, все ваши клиенты и пользователи с этой ссылкой могут без каких-либо препятствий обращаться к вашим данным. У всех других, у которых есть старая ссылка, но при этом не прописаны некоторые данные касающиеся Signed URL, доступ будет запрещен. То же самое относится к Signed Cookies, работает немного по-другому. Идея в том, что вы при обращении к странице для ваших пользователей, в их браузерах для вашего сайта прописываете некоторые Cookies. И в момент обращения, проверяйте есть ли нужные вам Cookies и есть ли необходимые правильные значения у этих Cookies. Если все совпадает, все отлично, доступ предоставляется и по прямой ссылке пользователи могут дальше также продолжать обращаться к вашим данным. Для всех других пользователей, у которых нет необходимых Cookie-файлов, они получат сообщение об ошибке, что доступ запрещен. Давайте теперь подробнее остановимся на неверных вариантах. Первый неверный вариант упоминает сервис AWS App Mesh. В этом случае он нам не подходит, так как App Mesh это тот сервис, который предоставляет нам возможность удобного нетверкинга на уровне наших приложений. Когда мы говорим про AWS Cloud Map, аналогичный сервис. Идея в том, что в Cloud Map мы храним название и расположение наших приложений, ресурсов, компонентов и таким образом это центральное место, куда другие ваши приложения, компоненты могут обращаться для поиска других частей вашей IT-инфраструктуры. Если мы говорим про третий неверный вариант, он в теории мог бы быть верным, если бы не ограничение в вопросе. В вопросе сказано, что мы должны передавать приватный контент через Cloud Front, для того чтобы обезопасить распространение наших данных. Поэтому этот вариант не подходит. Давайте подробнее расскажу о нем. Здесь упоминается, что мы могли бы настроить S3 пресайдент URL и через нее предоставлять доступ клиентам, а также для S3 запретить доступ ко всем остальным источникам. В этом случае запрещается в том числе доступ для Cloud Front и через Cloud Front уже обслуживать трафик к S3 не получится. Более того, у вас может начать путаница, что здесь пресайдент URL чуть выше мы говорили пресайдент URL на уровне Cloud Front. Да, так и есть. Пресайдент URL он доступен как для S3, так и для Cloud Front. На стороне Cloud Front это более продвинутые решения. Более того, на стороне Cloud Front можно настроить sign-in cookies и в целом функционал при работе с Cloud Front он на много продвинутый. Исходя из ограничений вопроса, таким образом мы говорим этот вариант ответа является неверным. На этом мы разобрали вопрос практистеста. Спасибо за внимание.

WEBVTT

00:00:00.000 --> 00:00:07.400
Добрый день, уважаемые студенты. Мы с вами
начинаем разбор вопроса Practice Test-а.

00:00:07.400 --> 00:00:12.200
Согласно вопросу, компания
обслуживает клиентов по всему миру.

00:00:12.200 --> 00:00:20.680
Эти клиенты обращаются к данным компании,
хранящиеся на нескольких S3 bucket-ах.

00:00:20.680 --> 00:00:31.711
У каждого S3 bucket-а настроен CloudFront web
distributionб на текущий момент необходимо доставлять

00:00:31.735 --> 00:00:42.320
контент для специфичного клиента, чтобы только
этот клиент мог добираться до данных компаний.

00:00:42.320 --> 00:00:47.988
На текущий момент все клиенты
могут обращаться к данным

00:00:48.012 --> 00:00:53.680
через S3 URL, а также
через CloudFront distribution.

00:00:53.680 --> 00:01:01.480
Два различных отдельных URL ссылки, по
которым они могут обращаться и загружать данные.

00:01:01.480 --> 00:01:07.000
Вам необходимо как Solutions Architect
настроить следующую архитектуру.

00:01:07.000 --> 00:01:12.364
Приватные данные должны
передаваться только через

00:01:12.388 --> 00:01:19.320
CloudFront, так чтобы защитить
распространение ваших файлов.

00:01:19.320 --> 00:01:25.088
С учетом этих ограничений, вам
нужно из предложенных вариантов

00:01:25.112 --> 00:01:30.880
выбрать два варианта, которые
помогают это все имплементировать.

00:01:30.880 --> 00:01:36.720
На этом слайде вы видите варианты ответов, также
видите, что второй и третий являются верными.

00:01:36.720 --> 00:01:44.112
Давайте посмотрим на объяснение. Вы видите
на картинке, что есть у нас с одной стороны

00:01:44.136 --> 00:01:51.440
наши пользователи, есть у нас данные в
S3 bucket-е и есть промежуточный CloudFront.

00:01:51.440 --> 00:01:56.574
Это наш CDN, Content Delivery Network,
который позволяет доставлять ваши

00:01:56.598 --> 00:02:02.240
данные из S3 bucket-а до ваших клиентов
по всему миру с меньшими задержками.

00:02:02.240 --> 00:02:09.328
Таким образом, у пользователей есть возможность
обращаться напрямую к S3, это будет медленнее, но

00:02:09.352 --> 00:02:16.440
есть такая возможность, а также есть возможность
обращаться через CloudFront, это будет быстрее.

00:02:16.440 --> 00:02:27.866
В рамках задания необходимо дать возможность
только специфичному клиенту обращаться

00:02:27.890 --> 00:02:38.760
через CloudFront к вашим данным в S3 и запретить
пользователю обращаться к данным в S3 напрямую.

00:02:38.760 --> 00:02:49.080
Для этого существует два
отдельных функционала.

00:02:49.080 --> 00:02:54.681
Для того, чтобы запретить прямой
доступ к S3, необходимо настроить

00:02:54.705 --> 00:02:59.788
Origin Access Identity, OAI,
так чтобы только у CloudFront

00:02:59.812 --> 00:03:05.154
Distribution была возможность
обращаться к данным в S3, для всех

00:03:05.178 --> 00:03:10.520
остальных внешних обращений к
S3 данным доступ будет запрещен.

00:03:10.520 --> 00:03:14.320
Это первый вариант,
правильный вариант ответа.

00:03:14.320 --> 00:03:21.042
Если мы говорим про второй, необходимо на уровне
CloudFront настроить так называемые Signed URL или

00:03:21.066 --> 00:03:28.200
Signed Cookies, которые предоставляют выборочный
доступ для клиентов, пользователей вашего приложения.

00:03:28.200 --> 00:03:36.268
В первом случае, когда мы говорим про Signed
URL, генерируется специальная ссылка, у нее

00:03:36.292 --> 00:03:44.360
есть время жизни, есть policy, в котором
прописано кому и как вы предоставляете доступ.

00:03:44.360 --> 00:03:49.610
Передав эту ссылку, все ваши
клиенты и пользователи с этой ссылкой

00:03:49.634 --> 00:03:54.560
могут без каких-либо препятствий
обращаться к вашим данным.

00:03:54.560 --> 00:04:00.070
У всех других, у которых есть старая
ссылка, но при этом не прописаны

00:04:00.094 --> 00:04:05.360
некоторые данные, касающиеся
Signed URL, доступ будет запрещен.

00:04:05.360 --> 00:04:09.840
То же самое относится к Signed
Cookies, работает немного по-другому.

00:04:09.840 --> 00:04:16.248
Идея в том, что вы при обращении
к странице для ваших пользователей

00:04:16.272 --> 00:04:21.708
в их браузерах для вашего
сайта, прописываете некоторые

00:04:21.732 --> 00:04:27.220
cookies и в момент обращения
проверяете есть ли нужные вам

00:04:27.244 --> 00:04:33.600
cookies и есть ли необходимые
правильные значения у этих cookies.

00:04:33.600 --> 00:04:38.122
Если все совпадает, все отлично,
доступ предоставляется и по прямой

00:04:38.146 --> 00:04:43.080
ссылке пользователи могут дальше
продолжать обращаться к вашим данным.

00:04:43.080 --> 00:04:47.508
Для всех других пользователей, у
которых нет необходимых cookies

00:04:47.532 --> 00:04:51.960
файлов, они получат сообщение
об ошибке, что доступ запрещен.

00:04:51.960 --> 00:04:59.560
Давайте теперь подробнее
остановимся на неверных вариантах.

00:04:59.560 --> 00:05:03.280
Первый неверный вариант
упоминает сервис AWS App Mesh.

00:05:03.280 --> 00:05:10.227
В этом случае он нам не подходит,
так как App Mesh это тот сервис, который

00:05:10.251 --> 00:05:17.960
предоставляет нам возможность удобного
networking-а на уровне наших приложений.

00:05:17.960 --> 00:05:22.120
Когда мы говорим про
AWS Cloud Map, аналогичный сервис.

00:05:22.120 --> 00:05:30.800
Идея в том, что в Cloud Map храним название и
расположение приложений, ресурсов, компонентов.

00:05:30.800 --> 00:05:34.976
И таким образом это центральное
место, куда другие ваши приложения,

00:05:35.000 --> 00:05:40.000
компоненты могут обращаться для поиска
других частей вашей IT инфраструктуры.

00:05:40.000 --> 00:05:43.768
Если мы говорим про третий
неверный вариант, он в теории

00:05:43.792 --> 00:05:47.560
мог бы быть верным, если
бы не ограничение в вопросе.

00:05:47.560 --> 00:05:52.528
В вопросе сказано, что мы должны
передавать приватный контент через

00:05:52.552 --> 00:05:57.520
CloudFront для того, чтобы обезопасить
распространение наших данных.

00:05:57.520 --> 00:06:02.080
Поэтому этот вариант не подходит.
Давайте подробнее расскажу о нем.

00:06:02.080 --> 00:06:09.903
Здесь упоминается, что мы могли бы настроить
S3 Pre-signed URL и через нее предоставлять

00:06:09.927 --> 00:06:17.120
доступ клиентам, а также для S3 запретить
доступ ко всем остальным источникам.

00:06:17.120 --> 00:06:21.148
В этом случае запрещается в
том числе доступ для CloudFront

00:06:21.172 --> 00:06:25.200
и через CloudFront уже обслуживать
трафик к S3 не получится.

00:06:25.200 --> 00:06:31.861
Более того, у вас может начаться
путаница, что здесь Pre-signed URL, чуть

00:06:31.885 --> 00:06:38.360
выше мы говорили про signed URL 
на уровне CloudFront. Да, так и есть.

00:06:38.360 --> 00:06:43.480
Pre-signed URL доступен как
для S3, так и для CloudFront.

00:06:43.480 --> 00:06:46.120
На стороне CloudFront это
более продвинутое решение.

00:06:46.120 --> 00:06:52.868
Более того, на стороне CloudFront
можно настроить Signed Cookies

00:06:52.892 --> 00:06:59.640
и в целом функционал при работе
с CloudFront намного продвинутый.

00:06:59.640 --> 00:07:13.200
Исходя из ограничений вопроса, мы говорим,
что этот вариант ответа является неверным.

00:07:13.200 --> 00:07:16.720
На этом мы разобрали вопрос 
Practice Test-а. Спасибо за внимание.
Добрый день, уважаемые студенты. Мы с вами начинаем разбор вопроса Practice Test-а. Согласно вопросу, компания обслуживает клиентов по всему миру. Эти клиенты обращаются к данным компании, хранящиеся на нескольких S3 bucket-ах. У каждого S3 bucket-а настроен CloudFront web distributionб на текущий момент необходимо доставлять контент для специфичного клиента, чтобы только этот клиент мог добираться до данных компаний. На текущий момент все клиенты могут обращаться к данным через S3 URL, а также через CloudFront distribution. Два различных отдельных URL ссылки, по которым они могут обращаться и загружать данные. Вам необходимо как Solutions Architect настроить следующую архитектуру. Приватные данные должны передаваться только через CloudFront, так чтобы защитить распространение ваших файлов. С учетом этих ограничений, вам нужно из предложенных вариантов выбрать два варианта, которые помогают это все имплементировать. На этом слайде вы видите варианты ответов, также видите, что второй и третий являются верными. Давайте посмотрим на объяснение. Вы видите на картинке, что есть у нас с одной стороны наши пользователи, есть у нас данные в S3 bucket-е и есть промежуточный CloudFront. Это наш CDN, Content Delivery Network, который позволяет доставлять ваши данные из S3 bucket-а до ваших клиентов по всему миру с меньшими задержками. Таким образом, у пользователей есть возможность обращаться напрямую к S3, это будет медленнее, но есть такая возможность, а также есть возможность обращаться через CloudFront, это будет быстрее. В рамках задания необходимо дать возможность только специфичному клиенту обращаться через CloudFront к вашим данным в S3 и запретить пользователю обращаться к данным в S3 напрямую. Для этого существует два отдельных функционала. Для того, чтобы запретить прямой доступ к S3, необходимо настроить Origin Access Identity, OAI, так чтобы только у CloudFront Distribution была возможность обращаться к данным в S3, для всех остальных внешних обращений к S3 данным доступ будет запрещен. Это первый вариант, правильный вариант ответа. Если мы говорим про второй, необходимо на уровне CloudFront настроить так называемые Signed URL или Signed Cookies, которые предоставляют выборочный доступ для клиентов, пользователей вашего приложения. В первом случае, когда мы говорим про Signed URL, генерируется специальная ссылка, у нее есть время жизни, есть policy, в котором прописано кому и как вы предоставляете доступ. Передав эту ссылку, все ваши клиенты и пользователи с этой ссылкой могут без каких-либо препятствий обращаться к вашим данным. У всех других, у которых есть старая ссылка, но при этом не прописаны некоторые данные, касающиеся Signed URL, доступ будет запрещен. То же самое относится к Signed Cookies, работает немного по-другому. Идея в том, что вы при обращении к странице для ваших пользователей в их браузерах для вашего сайта, прописываете некоторые cookies и в момент обращения проверяете есть ли нужные вам cookies и есть ли необходимые правильные значения у этих cookies. Если все совпадает, все отлично, доступ предоставляется и по прямой ссылке пользователи могут дальше продолжать обращаться к вашим данным. Для всех других пользователей, у которых нет необходимых cookies файлов, они получат сообщение об ошибке, что доступ запрещен. Давайте теперь подробнее остановимся на неверных вариантах. Первый неверный вариант упоминает сервис AWS App Mesh. В этом случае он нам не подходит, так как App Mesh это тот сервис, который предоставляет нам возможность удобного networking-а на уровне наших приложений. Когда мы говорим про AWS Cloud Map, аналогичный сервис. Идея в том, что в Cloud Map храним название и расположение приложений, ресурсов, компонентов. И таким образом это центральное место, куда другие ваши приложения, компоненты могут обращаться для поиска других частей вашей IT инфраструктуры. Если мы говорим про третий неверный вариант, он в теории мог бы быть верным, если бы не ограничение в вопросе. В вопросе сказано, что мы должны передавать приватный контент через CloudFront для того, чтобы обезопасить распространение наших данных. Поэтому этот вариант не подходит. Давайте подробнее расскажу о нем. Здесь упоминается, что мы могли бы настроить S3 Pre-signed URL и через нее предоставлять доступ клиентам, а также для S3 запретить доступ ко всем остальным источникам. В этом случае запрещается в том числе доступ для CloudFront и через CloudFront уже обслуживать трафик к S3 не получится. Более того, у вас может начаться путаница, что здесь Pre-signed URL, чуть выше мы говорили про signed URL на уровне CloudFront. Да, так и есть. Pre-signed URL доступен как для S3, так и для CloudFront. На стороне CloudFront это более продвинутое решение. Более того, на стороне CloudFront можно настроить Signed Cookies и в целом функционал при работе с CloudFront намного продвинутый. Исходя из ограничений вопроса, мы говорим, что этот вариант ответа является неверным. На этом мы разобрали вопрос Practice Test-а. Спасибо за внимание.
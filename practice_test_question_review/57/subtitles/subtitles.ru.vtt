WEBVTT

00:00:00.000 --> 00:00:06.000
Добрый день, уважаемые студенты! Мы с вами 
начинаем разбор вопроса Practice Test-а.

00:00:06.000 --> 00:00:12.000
Согласно вопросу, мы являемся
компанией по онлайн обучению.

00:00:12.000 --> 00:00:20.000
Наше приложение написано на Microsoft.NET, хостится
на Windows Server машинах на локальном дата-центре.

00:00:20.000 --> 00:00:24.000
Мы используем стандартную
версию Oracle баз данных.

00:00:24.000 --> 00:00:36.000
Руководство решило мигрировать IT инфраструктуру
в облако AWS для того, чтобы стать высокодоступным.

00:00:36.000 --> 00:00:46.988
В процессе миграции необходимо
минимизировать изменения кода, а также необходимо

00:00:47.012 --> 00:00:58.000
предоставить возможность легкого управления
вашей средой инфраструктуры в облаке.

00:00:58.000 --> 00:01:08.000
Необходимо из предложенных вариантов выбрать
два варианта, которые позволяют это все реализовать.

00:01:08.000 --> 00:01:15.000
Вы видите пять предложенных вариантов ответа. Второй
и третий являются правильными вариантами ответов.

00:01:15.000 --> 00:01:21.581
Обратите внимание, что варианты
ответов сильно отличаются друг от друга,

00:01:21.605 --> 00:01:28.000
поэтому можно отнести этот вопрос
к уровню сложности выше среднего.

00:01:28.000 --> 00:01:33.538
И так, давайте попробуем
разобрать каждый вариант ответа

00:01:33.562 --> 00:01:39.000
и убедиться, почему оно
правильное или неправильное.

00:01:39.000 --> 00:01:48.000
Нам необходимо вспомнить о двух сервисах. Первый
- AWS Database Migration Service, вкратце AWS DMS.

00:01:48.000 --> 00:01:54.000
Это тот сервис, который позволяет мигрировать 
локальную базу данных в облако AWS.

00:01:54.000 --> 00:01:58.655
У него очень много полезного
функционала, один из которых

00:01:58.679 --> 00:02:03.000
называется AWS Schema
Conversion Tool или AWS SCT.

00:02:03.000 --> 00:02:08.558
Благодаря этому функционалу есть
возможность сменить движок базы данных.

00:02:08.582 --> 00:02:14.141
Например, если у вас локальная база
данных Oracle, то вы можете, используя

00:02:14.165 --> 00:02:19.687
этот инструмент, создать аналогичную
схему для другого движка, например,

00:02:19.711 --> 00:02:25.000
MySQL, и уже в облаке AWS продолжать
работать с MySQL базой данных.

00:02:25.000 --> 00:02:30.707
Другой сервис - AWS Elastic Beanstalk.
Это тот сервис, который

00:02:30.731 --> 00:02:37.000
позволяет вам упростить управление
вашей инфраструктуры в облаке.

00:02:37.000 --> 00:02:47.988
Вам необходимо лишь загрузить код
вашей программы, вашего приложения, а

00:02:48.012 --> 00:02:59.000
также на вход подать файл конфигурации
будущей инфраструктуры в облаке.

00:02:59.000 --> 00:03:04.000
Давайте остановимся на вариантах
ответов, которые являются неверными.

00:03:04.000 --> 00:03:12.000
Два варианта ответа, которые содержат контейнеры,
это Amazon EKS и Amazon ECS, являются неверными.

00:03:12.000 --> 00:03:18.000
Согласно вопросу, нам нужно было выбрать опцию,
где минимально задействована команда разработки.

00:03:18.000 --> 00:03:23.651
Здесь же, когда мы говорим про контейнеры,
переход на контейнеры требует значительную

00:03:23.675 --> 00:03:30.000
доработку приложения, поэтому оба эти варианта
в рамках этой вопроса являются неправильными.

00:03:30.000 --> 00:03:34.988
Третий неправильный вариант,
связанный с AWS Application

00:03:35.012 --> 00:03:40.000
Migration Service, также
является не совсем подходящим.

00:03:40.000 --> 00:03:44.988
По той простой причине, у нас есть
Oracle баз данных, которую нужно отдельно

00:03:45.012 --> 00:03:50.000
перенести, и приложение, которое
также нужно отдельно перенести в облако.

00:03:50.000 --> 00:03:55.988
В случае с приложением хорошо подходит
Elastic Beanstalk, а в случае с Oracle лучше

00:03:56.012 --> 00:04:02.000
подойдет приложение, которое специализируется
на миграции баз данных, это - AWS DMS.

00:04:02.000 --> 00:04:08.000
Поэтому вариант с AWS Application
Migration Service является неверным.

00:04:08.000 --> 00:04:16.000
На этом мы разобрали вопрос 
Practice Test-а. Спасибо за внимание.
WEBVTT

00:00:00.000 --> 00:00:07.000
Добрый день, уважаемые студенты. Мы с вами 
начинаем разбор вопроса Practice Test-а.

00:00:07.000 --> 00:00:14.000
Согласно вопросу, есть некоторая компания, занимается
разработкой приложения для онлайн-отчетности.

00:00:14.000 --> 00:00:19.000
В какой-то момент нагрузка сильно возросла
и все приложение начало медленно работать.

00:00:19.000 --> 00:00:26.000
Вы, как Solutions Architect, предлагаете компании
использовать функционал Amazon RDS Read Replica.

00:00:26.000 --> 00:00:33.000
Со стороны компании настаивают на том,
что нужно настроить Multi-AZ Deployment.

00:00:33.000 --> 00:00:42.651
Согласно вопросу, вам, как Solutions Architect,
нужно выбрать из предложенных вариантов

00:00:42.675 --> 00:00:53.000
те преимущества Read Replica над Multi-AZ,
которые относятся к указанному кейсу в вопросе.

00:00:53.000 --> 00:00:56.988
На этом слайде вы видите все
предложенные варианты ответов,

00:00:57.012 --> 00:01:01.000
также видите, что 3 и 4 варианты
ответов являются верными.

00:01:01.000 --> 00:01:05.000
Давайте пройдемся по каждому из
вариантов и попробуем его разобрать.

00:01:05.000 --> 00:01:15.586
В первом варианте говорится о том, что Read Replica
поможет разгрузить, как read, так и write операции

00:01:15.610 --> 00:01:26.000
с основной базы данных, что является не правдой, Read
Replica дает возможность только для read операции.

00:01:26.000 --> 00:01:32.000
Что-то записывать через Read Replica невозможно,
 поэтому этот вариант можем исключить.

00:01:32.000 --> 00:01:40.488
Если мы говорим про второй вариант,
здесь утверждается, что настройка

00:01:40.512 --> 00:01:50.000
Read Replica увеличит возможности
чтения операции на основной базе данных.

00:01:50.000 --> 00:01:59.574
Это неверный вариант ответа, так как при настройке
Read Replica поднимается другая база данных, на нее

00:01:59.598 --> 00:02:09.000
асинхронно реплицируется изменения из основной
базы данных, и используете для операции чтения.

00:02:09.000 --> 00:02:16.735
Тогда как с основной базой данных никакие
изменения не происходят, она лишь разгружается

00:02:16.759 --> 00:02:24.000
от определенной части операции чтения,
таким образом второй вариант тоже исключаем.

00:02:24.000 --> 00:02:30.051
Если мы говорим про пятый вариант,
здесь утверждается, что настройка

00:02:30.075 --> 00:02:36.126
Read Replica даст возможность
синхронной репликации между основной

00:02:36.150 --> 00:02:42.702
базы данных и Read Replica, а также
даст возможность automatic failover,

00:02:42.726 --> 00:02:49.000
в случае, если возникнет какие-то
проблемы с основной базой данных.

00:02:49.000 --> 00:02:55.000
Это также является неверным,
это больше относится к Multi-AZ.

00:02:55.000 --> 00:03:01.040
Multi-AZ, если появляются
проблемы с основной базой данных,

00:03:01.064 --> 00:03:07.000
то происходит automatic
failover и standby базы данных.

00:03:07.000 --> 00:03:11.488
Вторая, она становится основной
и весь трафик перенаправляется на

00:03:11.512 --> 00:03:16.000
нее до того момента, как основная
база данных не вернется в строй.

00:03:16.000 --> 00:03:23.000
Еще один момент, который не является верным в рамках
пятого варианта ответа, это synchronous replication.

00:03:23.000 --> 00:03:32.000
На самом деле при настройке Read Replica
синхронизация - асинхронная, несинхронная.

00:03:32.000 --> 00:03:36.000
Поэтому этот вариант
мы исключаем.

00:03:36.000 --> 00:03:41.653
Таким образом, если бы этот вопрос
пришел на реальном экзамене, зная основные

00:03:41.677 --> 00:03:48.000
моменты, связанные с RDS, мы могли бы
исключить заведомо неверные варианты ответов.

00:03:48.000 --> 00:03:54.000
Тем не менее, давайте посмотрим, что
же говорится на верных вариантах ответов.

00:03:54.000 --> 00:04:07.521
В первом утверждается, что добавление Read
Replica дает возможность основной базе данных

00:04:07.545 --> 00:04:22.000
разгрузиться и read-heavy нагрузки, то есть
нагрузки, связанные с чтением, заберет на себя.

00:04:22.000 --> 00:04:30.000
И более того, она автоматически масштабируется
в зависимости от объема этих нагрузок.

00:04:30.000 --> 00:04:35.000
То есть поднимается дополнительная
Read Replica, если есть необходимость в этом.

00:04:35.000 --> 00:04:39.488
Если мы говорим про четвертый
вариант ответа, здесь утверждается, что

00:04:39.512 --> 00:04:44.000
в случае настройки Read Replica мы
получаем асинхронную репликацию.

00:04:44.000 --> 00:04:50.232
Это верно. Также она улучшает 
работу основной базы данных за

00:04:50.256 --> 00:04:56.488
счет того, что забирает на
себя read-heavy нагрузки, то есть

00:04:56.512 --> 00:05:02.850
достаточно сложные запросы,
извлекающие большие объемы данных

00:05:02.874 --> 00:05:09.000
и относящиеся только к чтению.
Это также является верным.

00:05:09.000 --> 00:05:19.000
На следующих слайдах вы можете
посмотреть более подробное объяснение.

00:05:19.000 --> 00:05:22.000
Я сейчас пройдусь по
каждому из этих слайдов.

00:05:22.000 --> 00:05:26.000
На этом слайде я бы хотел особо 
отметить. Это очень важно.

00:05:26.000 --> 00:05:33.000
У нас есть три вида настройки
работы с базами данных.

00:05:33.000 --> 00:05:40.448
Это Multi-AZ Deployments, когда мы
в рамках одного региона настраиваем

00:05:40.472 --> 00:05:47.055
два или более базы данных, в
случае проблем на основной, оно

00:05:47.079 --> 00:05:54.804
отдаёт свой статус основного другой
второстепенной базе данных, которая

00:05:54.828 --> 00:06:02.000
становится главной. Таким образом
 происходит automatic failover.

00:06:02.000 --> 00:06:09.000
Multi-AZ настраивается в том случае,
когда мы хотим получить High Availability.

00:06:09.000 --> 00:06:13.000
Есть другой вариант deployment,
это Multi-Region deployments.

00:06:13.000 --> 00:06:19.228
Идея в том, что у нас есть инстансы
баз данных в нескольких регионах, и в

00:06:19.252 --> 00:06:26.000
этом случае приложение должно уметь
работать с Cross-Region инфраструктурой.

00:06:26.000 --> 00:06:35.000
Мы настраиваем Multi-Region deployment в
том случае, когда нам нужен Disaster Recovery.

00:06:35.000 --> 00:06:47.751
И третий вариант — это Read replicas. Когда мы
разгружаем основную базу данных от больших операций

00:06:47.775 --> 00:07:00.000
чтения и используем Read replicas тогда,
когда нужна масштабируемость, то есть Scalability.

00:07:00.000 --> 00:07:04.000
На этом мы разобрали вопрос Practice Test-а.
Спасибо за внимание.
1
0:00:00.000 --> 0:00:02.640
Вобретаем, уважаемые студенты.

2
0:00:02.640 --> 0:00:07.480
Мы с вами начинаем разбор вопроса практист-теста.

3
0:00:07.480 --> 0:00:10.840
Согласно вопросу, у компании во владении несколько AWS

4
0:00:10.840 --> 0:00:11.840
аккаунтов.

5
0:00:11.840 --> 0:00:15.840
Они все подключены к AWS Organizations.

6
0:00:15.840 --> 0:00:21.520
Вам необходимо скопировать несколько S3 объектов в

7
0:00:21.520 --> 0:00:27.640
другой S3 bucket, который находится на другом AWS аккаунте.

8
0:00:27.640 --> 0:00:31.240
Оба аккаунта находятся в вашем владении.

9
0:00:31.240 --> 0:00:34.720
Вам как слоушенство архитектору было дано задание настроить

10
0:00:34.720 --> 0:00:38.120
все необходимые права доступа, чтобы выполнить это задание.

11
0:00:38.120 --> 0:00:48.200
Также вам необходимо обеспечить следующие скопированные

12
0:00:48.200 --> 0:00:49.800
объекты.

13
0:00:49.800 --> 0:00:56.040
Они должны быть доступны для пользователей в destination

14
0:00:56.040 --> 0:01:02.440
аккаунта, а для source аккаунта должны быть недоступны.

15
0:01:02.440 --> 0:01:08.880
Нам необходимо выбрать вариант ответа, который помогает

16
0:01:08.880 --> 0:01:10.640
нам эту задачу выполнить.

17
0:01:10.640 --> 0:01:16.920
На этом слайде вы видите варианты ответов.

18
0:01:16.920 --> 0:01:20.360
Также видите, что первый вариант является верным.

19
0:01:20.360 --> 0:01:24.400
Я бы здесь хотел еще раз отметить, что с теми знаниями,

20
0:01:24.400 --> 0:01:27.960
которые у вас есть по AWS, вы с легкостью можете исключать

21
0:01:27.960 --> 0:01:32.320
один или несколько вариантов ответа, заведомо ложных.

22
0:01:32.320 --> 0:01:35.400
Давайте попробуем поступить следующим образом, а потом

23
0:01:35.400 --> 0:01:38.680
после разберем и верный вариант ответа.

24
0:01:38.680 --> 0:01:42.320
Если мы говорим про второй вариант, здесь предлагается

25
0:01:42.320 --> 0:01:46.200
использовать функционал Requestor Pays для того, чтобы

26
0:01:46.200 --> 0:01:51.000
получить некоторые скидки или выплаты и ни слова не

27
0:01:51.000 --> 0:01:53.000
говорится про permission.

28
0:01:53.000 --> 0:01:57.480
Проходя из этого, мы можем исключить этот вариант ответа.

29
0:01:57.480 --> 0:02:02.160
Если мы говорим про третий вариант ответа, здесь предлагается

30
0:02:02.160 --> 0:02:08.000
использовать сервис Amazon WorkDocs и далее произвести настройки

31
0:02:08.000 --> 0:02:15.400
до S3 бакета, сделать файлы общими и таким образом скопировать

32
0:02:15.400 --> 0:02:17.120
на destination бакет.

33
0:02:17.120 --> 0:02:22.380
Это не сработает по той простой причине, так как WorkDocs предоставляется

34
0:02:22.380 --> 0:02:25.640
по модели SaaS, то есть Software As-A-Service.

35
0:02:25.640 --> 0:02:30.720
� дея в том, что это готовый сервис, где вы можете менять

36
0:02:30.720 --> 0:02:35.560
его минимально, только некоторые user-based настройки.

37
0:02:35.560 --> 0:02:41.480
А производить интеграцию с S3 невозможно, поэтому

38
0:02:41.480 --> 0:02:43.600
этот вариант мы тоже можем исключить.

39
0:02:43.600 --> 0:02:46.960
Если мы говорим про четвертый вариант ответа, то здесь

40
0:02:46.960 --> 0:02:48.400
говорится про course.

41
0:02:48.400 --> 0:02:52.720
Я напомню, что course это термин, не относящийся напрямую

42
0:02:52.720 --> 0:02:56.040
к AWS, не относящийся к облачным технологиям.

43
0:02:56.040 --> 0:03:00.760
Course пришел нам из веб-разработки, там часто используется.

44
0:03:00.760 --> 0:03:05.040
�  здесь упоминается, так как у S3 есть возможность

45
0:03:05.040 --> 0:03:06.640
настраивать course policy.

46
0:03:06.640 --> 0:03:09.640
Что такое course policy, вкратце напомню.

47
0:03:09.640 --> 0:03:18.640
Это некоторый документ, который прописывается в первом

48
0:03:18.640 --> 0:03:23.720
веб-сайте для того, чтобы из второго веб-сайта можно

49
0:03:23.720 --> 0:03:27.120
было использовать данные из первого веб-сайта.

50
0:03:27.120 --> 0:03:32.120
То есть course он как бы прописывает те веб-сайты, которые могут

51
0:03:32.120 --> 0:03:36.920
обращаться к вашему веб-сайту.

52
0:03:36.920 --> 0:03:40.200
Так как здесь идет больше речь про веб-сайты, а в

53
0:03:40.200 --> 0:03:44.400
вопросе у нас речь идет про S3 bucket и передачу данных

54
0:03:44.400 --> 0:03:49.280
в рамках глобальной инфраструктуры AWS, при этом не выходя в интернет,

55
0:03:49.280 --> 0:03:51.880
то этот вариант мы тоже можем исключить.

56
0:03:51.880 --> 0:03:58.680
Остается первый вариант, который является верным.

57
0:03:58.680 --> 0:04:01.600
Давайте теперь остановимся на верном варианте ответа

58
0:04:01.600 --> 0:04:04.080
и почему оно таковым является.

59
0:04:04.080 --> 0:04:08.840
Здесь нам предлагается настроить для source bucket policy.

60
0:04:08.840 --> 0:04:18.800
Оно разрешает второму аккаунту получать объекты из этого

61
0:04:18.800 --> 0:04:19.800
bucket.

62
0:04:19.800 --> 0:04:24.760
Далее нам необходимо на стороне второго аккаунта

63
0:04:24.760 --> 0:04:28.440
настроить пользователя либо роль, у которого есть

64
0:04:28.440 --> 0:04:35.240
возможность получать данные из source bucket и загружать

65
0:04:35.240 --> 0:04:41.160
файлы в destination bucket, который находится в том же AWS аккаунте,

66
0:04:41.160 --> 0:04:45.040
что и этот user или роль.

67
0:04:45.040 --> 0:04:49.120
После того как мы это все настроим, мы фактически

68
0:04:49.120 --> 0:04:54.640
сидя в destination аккаунте, cross-account запросим нужные

69
0:04:54.640 --> 0:05:04.520
нам объекты и в свой родной аккаунт положим наши объекты.

70
0:05:04.520 --> 0:05:08.200
Почему важно, чтобы роль или пользователь был в

71
0:05:08.200 --> 0:05:10.000
destination bucket?

72
0:05:10.000 --> 0:05:19.960
� дея в том, что аккаунтом-владельцем файлов при записи в s3 bucket

73
0:05:19.960 --> 0:05:23.320
является тот аккаунт, который записывает.

74
0:05:23.320 --> 0:05:29.080
Если мы это делаем cross-account, то при записи из аккаунта

75
0:05:29.080 --> 0:05:37.760
A, что является source, запишем в аккаунт B, cross-account, то

76
0:05:37.760 --> 0:05:42.200
на стороне destination bucket владельцем файлов внутри

77
0:05:42.200 --> 0:05:44.640
этого bucket будет другой аккаунт.

78
0:05:44.640 --> 0:05:51.800
�  даже если это ваш аккаунт, это ваш bucket, вы не сможете

79
0:05:51.800 --> 0:05:55.360
обратиться к объекту внутри bucket, владельцем которой

80
0:05:55.360 --> 0:05:57.480
вы не являетесь.

81
0:05:57.480 --> 0:06:00.880
Поэтому нам необходимо, чтобы пользователь был на

82
0:06:00.880 --> 0:06:04.880
стороне destination аккаунта, таким образом при записи

83
0:06:04.880 --> 0:06:08.400
он относится к тому же аккаунту, соответственно проблем

84
0:06:08.400 --> 0:06:10.480
с доступом не возникнет.

85
0:06:10.480 --> 0:06:14.040
Единственная здесь задача, правильно прописать полиси

86
0:06:14.040 --> 0:06:19.080
на стороне source, аккаунта, source bucket, чтобы эти данные

87
0:06:19.080 --> 0:06:23.280
можно было cross-account получить.

88
0:06:23.280 --> 0:06:27.000
На следующих слайдах вы можете посмотреть детальный

89
0:06:27.000 --> 0:06:39.800
разбор вопроса.

90
0:06:39.800 --> 0:06:42.800
На этом мы завершаем разбор вопроса практистеста.

91
0:06:42.800 --> 0:06:49.800
Спасибо за внимание.

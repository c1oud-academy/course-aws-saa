Добрый день, уважаемые студенты. Мы с вами начинаем разбор вопроса Practice Test-а. Согласно вопросу, у компании во владении несколько AWS аккаунтов. Они подключены к AWS Organizations. Необходимо скопировать несколько S3 объектов в другой S3 bucket, который находится на другом AWS аккаунте. Оба аккаунта находятся в вашем владении. Вам как Solutions Architect было дано задание настроить все необходимые права доступа, чтобы выполнить это задание. Также вам необходимо обеспечить следующие скопированные объекты. Они должны быть доступны для пользователей в Destination аккаунте, а для Source аккаунта должны быть недоступны. Нам необходимо выбрать вариант ответа, который помогает эту задачу выполнить. На этом слайде вы видите варианты ответов. Также видите, что первый вариант является верным. Я бы здесь хотел еще раз отметить, что с теми знаниями, которые у вас есть по AWS, вы с легкостью можете исключать один или несколько вариантов ответа, заведомо ложных. Давайте попробуем поступить следующим образом, а потом после разберем верный вариант ответа. Если мы говорим про второй вариант, здесь предлагается использовать функционал Requester Pays для того, чтобы получить некоторые скидки или выплаты и ни слова не говорится про permission. Исходя из этого, мы можем исключить этот вариант ответа. Если мы говорим про третий вариант ответа, здесь предлагается использовать сервис Amazon WorkDocs и далее произвести настройки до S3 bucket-ов, сделать файлы общими и таким образом скопировать на destination bucket. Это не сработает по той простой причине, так как WorkDocs предоставляется по модели SaaS, то есть Software As A Service. Идея в том, что это готовый сервис, где вы можете менять его минимально, только некоторые user-based настройки. А производить интеграцию с S3 невозможно, поэтому этот вариант мы тоже можем исключить. Если мы говорим про четвертый вариант ответа, то здесь говорится про CORS. Я напомню, что CORS это термин, не относящийся напрямую к AWS, не относящийся к облачным технологиям. CORS пришел к нам из веб-разработки, там часто используется. И здесь упоминается, так как у S3 есть возможность настраивать CORS policy. Что такое CORS policy, вкратце напомню. Это некоторый документ, который прописывается в первом веб-сайте для того, чтобы из второго веб-сайта можно было использовать данные из первого веб-сайта. То есть CORS он как бы прописывает те веб-сайты, которые могут обращаться к вашему веб-сайту. Так как здесь идет больше речь про веб-сайты, а в вопросе у нас речь идет про S3 bucket и передачу данных в рамках глобальной инфраструктуры AWS, при этом не выходя в интернет, то этот вариант мы тоже можем исключить. Остается первый вариант, который является верным. Давайте теперь остановимся на верном варианте ответа и почему оно таковым является. Здесь нам предлагается настроить policy для source bucket. Оно разрешает второму аккаунту получать объекты из этого bucket. Далее нам необходимо на стороне второго аккаунта настроить пользователя либо роль, у которого есть возможность получать данные из source bucket и загружать файлы в destination bucket, который находится в том же AWS аккаунте, что и этот user или роль. После того как мы это все настроим, мы фактически сидя в destination аккаунте, cross-account запросим нужные нам объекты и в свой родной аккаунт положим наши объекты. Почему важно, чтобы роль или пользователь был в destination bucket? Идея в том, что аккаунтом-владельцем файлов при записи в S3 bucket является тот аккаунт, который записывает. Если мы это делаем cross-account, то при записи из аккаунта A, что является source, запишем в аккаунт B, cross-account, то на стороне destination bucket владельцем файлов внутри этого bucket будет другой аккаунт. И даже если это ваш аккаунт, это ваш bucket, вы не сможете обратиться к объекту внутри bucket, владельцем которого вы не являетесь. Поэтому нам необходимо, чтобы пользователь был на стороне destination аккаунта, таким образом при записи он относится к тому же аккаунту, соответственно проблем с доступом не возникнет. Единственная здесь задача, правильно прописать policy на стороне source аккаунта, source bucket, чтобы эти данные можно было cross-account получить. На следующих слайдах вы можете посмотреть детальный разбор вопроса. На этом мы завершаем разбор вопроса Practice Test-а. Спасибо за внимание.
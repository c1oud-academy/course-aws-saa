WEBVTT

00:00:00.000 --> 00:00:08.000
Добрый день, уважаемые студенты! Мы с вами 
начинаем разбор вопроса Practice Test-а.

00:00:08.000 --> 00:00:18.000
Согласно вопросу, компания настроила свою
инфраструктуру в VPC со следующим CIDR block.

00:00:18.000 --> 00:00:26.240
Она таким образом подключается к локальному
дата-центру. У вас есть следующее требование.

00:00:26.240 --> 00:00:32.295
Есть Lambda функция, которая
обрабатывает некоторый объем

00:00:32.319 --> 00:00:40.000
криптовалютных транзакций каждую
минуту и сохраняет результаты в EFS.

00:00:40.000 --> 00:00:48.420
После того как вы все настроили,
подключили Lambda функцию к VPC, Solutions

00:00:48.444 --> 00:00:57.548
Architect замечает, что в некоторые
моменты времени в течение дня увеличивается

00:00:57.572 --> 00:01:06.334
количество ошибок на стороне Lambda с
EC2 ошибкой, EC2ThrottledException и вам

00:01:06.358 --> 00:01:15.120
нужно выбрать два возможных варианта
ответа, которые приводят к этой ошибке.

00:01:15.120 --> 00:01:20.480
На этом слайде вы видите все варианты ответов, 
также видите что 2 и 4 являются верными.

00:01:20.480 --> 00:01:27.527
Я бы хотел отметить, что этот вопрос является
достаточно сложным, он требует понимания

00:01:27.551 --> 00:01:35.760
взаимодействия нескольких AWS сервисов и в этом
случае мы попробуем применить некоторую хитрость.

00:01:35.760 --> 00:01:41.848
То есть, зная некоторые основные
моменты связанные с AWS, мы

00:01:41.872 --> 00:01:47.960
можем исключить некоторые
заведомо неверные варианты ответов.

00:01:47.960 --> 00:01:53.741
Таким образом оставить два либо три
варианта ответов, которые могут быть

00:01:53.765 --> 00:02:00.280
верными и увеличить вероятность того,
что мы правильно ответим на этот вопрос.

00:02:00.280 --> 00:02:07.146
Такой подход к ответу не запрещается,
это нормально и вы как Solutions Architect

00:02:07.170 --> 00:02:13.600
должны уметь использовать все ваши
знания для решения конкретной задачи.

00:02:13.600 --> 00:02:25.000
Давайте пройдемся по каждому из неверных
вариантов и попробуем их с объяснением исключить.

00:02:25.000 --> 00:02:31.226
Первый вариант ответа говорит о том, что
на стороне Security группы, подключенной

00:02:31.250 --> 00:02:37.320
к нашей Lambda функции, не достает
некоторых rules, а именно outbound rules.

00:02:37.320 --> 00:02:44.397
Согласно вопросу мы видим,
что Lambda успешно отрабатывает

00:02:44.421 --> 00:02:51.000
все запросы и успешно
записывает результаты на EFS.

00:02:51.000 --> 00:02:56.600
Только в некоторые моменты
в течение дня выходят ошибки.

00:02:56.600 --> 00:03:03.885
Это говорит о том, что в целом set up
верный и мы упираемся в пиковые моменты, в

00:03:03.909 --> 00:03:11.840
некоторые другие ограничения, а с точки
зрения выдачи доступов и прав все нормально.

00:03:11.840 --> 00:03:14.640
Таким образом первый
вариант мы можем исключить.

00:03:14.640 --> 00:03:21.056
То же самое относится к пятому
варианту, где рекомендуется посмотреть IAM

00:03:21.080 --> 00:03:28.120
role, подключенной к Lambda и удостовериться
все ли необходимые права выданы.

00:03:28.120 --> 00:03:35.368
Так как Lambda функция работает успешно и
только в некоторые моменты не работает, а роль

00:03:35.392 --> 00:03:42.640
наша она выдана и настроена в самом начале
и в течение работы Lambda она не меняется.

00:03:42.640 --> 00:03:46.360
Таким образом этот вариант
тоже мы можем исключить.

00:03:46.360 --> 00:03:54.640
Если мы говорим про третий вариант ответа,
он утверждает, что у VPC нет NAT Gateway.

00:03:54.640 --> 00:04:01.022
NAT Gateway, вспомним, нужен
для того, чтобы наши ресурсы в private

00:04:01.046 --> 00:04:07.040
subnet-е через public subnet
могли подключаться к интернету.

00:04:07.040 --> 00:04:11.400
NAT Gateway либо NAT Instance
они находятся в public subnet-е.

00:04:11.400 --> 00:04:22.788
Особенностью NAT Gateway является то, что ресурсы
с private subnet-а могут обращаться к интернету, а из

00:04:22.812 --> 00:04:34.200
интернета к ресурсам из private subnet-а обратиться
не могут, так как NAT Gateway это делать запрещает.

00:04:34.200 --> 00:04:42.147
Согласно вопросу, нам дают некоторый
факт, что есть часть инфраструктуры, которая

00:04:42.171 --> 00:04:49.920
хостится на локальном дата-центре и
дальше эта идея не развивается, ничего не

00:04:49.944 --> 00:04:58.645
упоминается о том, что в рамках выполнения
задачи мы обращаемся в локальный дата-центр,

00:04:58.669 --> 00:05:06.560
поэтому это больше похоже как ложная
информация, которая должна запутать нас.

00:05:06.560 --> 00:05:11.788
Зная, что мы с интернетом не работаем,
внешних подключений не происходит,

00:05:11.812 --> 00:05:17.040
все происходит внутри нашего VPC,
мы этот вариант также можем исключить.

00:05:17.040 --> 00:05:20.840
Остается второй и четвертый
вариант, который является верными.

00:05:20.840 --> 00:05:28.200
Теперь давайте подробнее остановимся на верных
вариантах ответа и почему они являются верными.

00:05:28.200 --> 00:05:36.301
Когда Lambda подключается к VPC и начинает
работать с ресурсами внутри VPC, при настройке мы

00:05:36.325 --> 00:05:44.960
передаем некоторые данные для Lambda, в
результате Lambda получает некоторый IP адрес.

00:05:44.960 --> 00:05:51.800
Мы с вами помним, что при настройке VPC, при
настройке subnets мы всегда указываем CIDR блок.

00:05:51.800 --> 00:06:01.040
CIDR блок определяет какие IP адреса и какое
количество IP адресов помещается внутри CIDR блока.

00:06:01.040 --> 00:06:08.154
Таким образом, зная, что Lambda в пиковые
нагрузки может легко масштабироваться,

00:06:08.178 --> 00:06:14.480
а так как она масштабируется в
рамках VPC ему нужны новые IP адреса.

00:06:14.480 --> 00:06:19.409
И если этих новых IP адресов
не хватает, по тем или иным

00:06:19.433 --> 00:06:25.440
причинам Lambda не сможет
отработать, не сможет масштабироваться.

00:06:25.440 --> 00:06:37.748
Таким образом, вариант, где
утверждается, что не хватает

00:06:37.772 --> 00:06:50.080
ENIs, то есть IP адресов внутри
subnet-а, является верным.

00:06:50.080 --> 00:06:55.172
Другой вариант является также верным,
так как в нём говорится следующее:

00:06:55.196 --> 00:07:00.000
мы настроили Lambda функцию
для работы с одной availability zone.

00:07:00.000 --> 00:07:04.548
Если бы мы настроили
несколько availability zone, то

00:07:04.572 --> 00:07:09.568
при нехватке IP адресов в
одной availability zone он бы

00:07:09.592 --> 00:07:14.364
попробовал создать инстанс
Lambda в другом subnet-е,

00:07:14.388 --> 00:07:19.160
в котором достаточное
количество свободных IP адресов.

00:07:19.160 --> 00:07:26.088
На следующих слайдах вы
увидите более полное объяснение

00:07:26.112 --> 00:07:33.040
этого вопроса, с которым вы
не спеша можете ознакомиться.

00:07:33.040 --> 00:07:37.760
На этом мы разобрали вопрос 
Practice Test-а. Спасибо за внимание.
WEBVTT

00:00:00.000 --> 00:00:05.880
Добрый день, уважаемые студенты. Мы с вами 
начинаем разбор вопроса Practice Test-а.

00:00:05.880 --> 00:00:12.320
Согласно вопросу, есть крупная
инвестиционная компания, банк.

00:00:12.320 --> 00:00:18.492
Она занимается построением новой
биржи и необходимо ей настроить

00:00:18.516 --> 00:00:26.160
архитектуру таким образом, чтобы она
была высоко доступной и масштабируемой.

00:00:26.160 --> 00:00:35.388
Поэтому они использовали Elastic Load
Balancer перед Auto Scaling group для того,

00:00:35.412 --> 00:00:44.640
чтобы распределять нагрузку на EC2 инстансы
и при необходимости их масштабировать.

00:00:44.640 --> 00:00:49.200
Это все работает на
нескольких availability зонах.

00:00:49.200 --> 00:00:59.459
Если же говорить про базы
данных, то поднят один единственный

00:00:59.483 --> 00:01:09.400
инстанс Amazon Aurora и вопрос
звучит следующим образом.

00:01:09.400 --> 00:01:19.160
В случае, если происходит некоторая проблема на
стороне этой базы данных, что произойдет дальше?

00:01:19.160 --> 00:01:26.440
Будет ли происходить так называемый failover?
На этом слайде вы видите варианты ответов.

00:01:26.440 --> 00:01:30.280
Также видите, что второй
вариант ответа является верным.

00:01:30.280 --> 00:01:39.880
Для того, чтобы ответить на вопрос, почему
оно является верным, давайте вспомним теорию.

00:01:39.880 --> 00:01:47.190
Amazon Aurora - это специальная managed
база данных, построенный внутри AWS.

00:01:47.214 --> 00:01:54.328
У других облачных провайдеров Aurora нет.
Скорее всего они разрабатывают

00:01:54.352 --> 00:02:01.565
свои решения, и называются по-другому
и привязаны к определённому облачному

00:02:01.589 --> 00:02:08.801
провайдеру. Так как Aurora нативна
была создана внутри AWS, у неё есть ряд

00:02:08.825 --> 00:02:16.231
преимуществ по сравнению с другими 
RDS базами данных. Давайте рассмотрим, что

00:02:16.255 --> 00:02:24.149
же будет происходить, в случае проблемы
на стороне базы данных либо availability

00:02:24.173 --> 00:02:30.988
зон. Если у нас есть инстанс Aurora,
также есть Read Replica, в случае

00:02:31.012 --> 00:02:38.520
возникновения проблем с основной базой
данных, будет происходить следующее.

00:02:38.520 --> 00:02:44.857
Aurora попытается заменить CNAME
запись для базы данных, таким образом Read

00:02:44.881 --> 00:02:51.818
Replica становится основной базой данных.
На все это требуется порядка 30 минут.

00:02:51.842 --> 00:02:58.479
Это работает несмотря на то Read
Replica находится в той availability зоне или

00:02:58.503 --> 00:03:05.140
в другой. Она в любом случае попытается
сделать основным одну из Read Replica.

00:03:05.140 --> 00:03:13.374
Если же мы используем Aurora Serverless, то
есть бессерверные базы данных, то в случае

00:03:13.398 --> 00:03:22.700
проблем с инстансом баз данных, она попытается
поднять базу данных в другой Availability зоне.

00:03:22.700 --> 00:03:29.303
И третий вариант, когда у нас есть инстанс
базы данных, она не Serverless, у нее нет Read

00:03:29.327 --> 00:03:36.380
Replica, в этом случае она попробует поднять
инстанс базы данных в той же Availability зоне.

00:03:36.380 --> 00:03:41.568
Если же проблема была в
конкретном железе, то поднятие

00:03:41.592 --> 00:03:46.780
нового инстанса решит
проблему и база станет доступной.

00:03:46.780 --> 00:03:51.828
В случае, если проблема на стороне всей
Availability зоны, то она не сможет успешно

00:03:51.852 --> 00:03:56.900
завершить пересоздание, так как проблема
не в железе, а во всей Availability зоне.

00:03:56.900 --> 00:04:01.580
Таким образом, правильным ответом
является второй вариант ответа.

00:04:01.580 --> 00:04:09.000
На этом мы разобрали вопрос Practice Test-а.
Спасибо за внимание.
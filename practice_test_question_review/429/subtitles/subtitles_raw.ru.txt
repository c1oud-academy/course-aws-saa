 Добрый день, уважаемые студенты! Мы с вами начинаем разбор вопросов практик теста. Согласно вопросу, есть крупная инвестиционная компания, банк. Она занимается построением новой биржи и необходимо ей настроить архитектуру таким образом, чтобы она была высоко доступной и масштабируемой. Поэтому они использовали Elastic Load Balancer перед авто скейлинг группой для того, чтобы распределять нагрузку на EC2 инстанции и при необходимости их масштабировать. Это все работает на нескольких availability зонах. Если же говорить про базы данных, то поднята одна единственная, один единственный instance Amazon Aurora и вопрос звучит следующим образом. В случае, если происходит некоторая проблема на стороне этой базы данных, что произойдет дальше? Будет ли происходить так называемый failover? На этом слайде вы видите варианты ответов. Также видите, что второй вариант ответа является верным. Для того, чтобы ответить на вопрос, почему оно является верным, давайте посмотрим, вспомним теорию. Amazon Aurora это специальная managed база данных, построенные внутри AWS. У других облачных провайдеров Aurora нет. Скорее всего они разрабатывают свои решения, называются по-другому и привязаны к определенному облачному провайдеру. Так как Aurora она nativно была создана внутри AWS, у нее есть ряд преимуществ по сравнению с другими RDS базами данных. Давайте рассмотрим, что же будет происходить в случае проблемы на стороне базы данных либо availability zone. Если у нас есть instance Aurora, также есть read replica, в случае возникновения проблем с основной базой данных будет происходить следующее. Aurora попытается заменить C name запись для базы данных, таким образом read replica становится основной базы данных. На все про все требуется порядка 30 минут. Это работает, несмотря на то read replica находится в той availability zone или в другой. Она в любом случае попытается сделать основным одну из read replicas. Если же мы используем Aurora serverless, то есть бессерверные базы данных, то в этом случае, в случае проблем с базой данных, с instance баз данных, она попытается поднять базу данных в другой availability zone. И третий вариант, когда у нас есть instance базы данных, она не serverless, у нее нет read replic, в этом случае она попробует поднять instance базы данных в той же availability zone. Если же проблема была в конкретном железе, то поднятие нового instance, она решит проблему и база станет доступной. В случае, если проблема на стороне всей availability zone, то она не сможет успешно завершить пересоздание, так как проблема не в железе, а во всей availability zone. Таким образом правильным ответом является вторая версия, второй вариант ответа. На этом мы разобрали вопрос практистеста. Спасибо за внимание.

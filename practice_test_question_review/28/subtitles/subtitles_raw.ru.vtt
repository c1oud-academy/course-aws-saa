WEBVTT

00:00:00.000 --> 00:00:03.120
Добрый день, уважаемые студенты!

00:00:03.120 --> 00:00:06.000
Мы с вами начинаем разбор вопроса Practice Test-а.

00:00:06.000 --> 00:00:09.160
Что нам дано?

00:00:09.160 --> 00:00:14.560
Компания использует сервис Amazon S3 для хранения часто запрашиваемых данных.

00:00:14.560 --> 00:00:19.960
Что сейчас уже настроено? Это Event Notification.

00:00:19.960 --> 00:00:29.320
В момент, когда создается либо удаляется объект в S3 Bucket, оно отправляет это событие сообщением в очередь SQS.

00:00:29.320 --> 00:00:34.360
Вас, как Solutions Architect, попросили сделать следующую логику.

00:00:34.360 --> 00:00:48.960
Необходимо, чтобы обе команды, разработка и администраторы, получали независимо друг от друга сообщение о том, что объекты в S3 Bucket созданы или удалены.

00:00:48.960 --> 00:00:53.160
Необходимо выбрать один вариант ответа, который является правильным.

00:00:53.160 --> 00:00:59.960
Давайте посмотрим, какие варианты ответов предлагаются.

00:00:59.960 --> 00:01:03.280
Вы видите, что первый вариант ответа является верным.

00:01:03.280 --> 00:01:07.400
Тем не менее, давайте рассмотрим подробнее, какие варианты есть.

00:01:07.400 --> 00:01:15.880
Обратите внимание, что первый и третий варианты ответа достаточно похожи.

00:01:15.880 --> 00:01:19.360
В обоих вариантах предлагается настроить SNS topic.

00:01:19.360 --> 00:01:23.280
Дальше необходимо дополнительно настроить два SQS.

00:01:23.280 --> 00:01:30.560
В первом варианте наши SQS очереди будут подписаны на SNS topic.

00:01:30.560 --> 00:01:38.560
А в третьем варианте SQS очереди будут запрашивать данные с SNS topic.

00:01:38.560 --> 00:02:05.600
Забегая наперед, скажу, что третий вариант заведомо неправильный, потому что SQS сохраняет в себе сообщения, и при этом уже приложения в режиме polling запрашивают новые сообщения с SQS.

00:02:05.600 --> 00:02:12.600
А SNS - это обратный случай, когда у нас не pull-based, а push-based логика.

00:02:12.600 --> 00:02:19.720
То есть в момент, когда приходит сообщение SNS, она всем подписчикам в тот же момент рассылает это сообщение.

00:02:19.720 --> 00:02:22.320
То есть он push, рассылает, это сообщение.

00:02:22.320 --> 00:02:30.400
Если мы говорим про второй и четвертый вариант, то предлагается добавить дополнительный ресурс.

00:02:30.400 --> 00:02:41.080
Во втором варианте - это SQS очередь, а в четвертом варианте предлагается добавить даже не SQS, а SNS FIFO topic.

00:02:41.080 --> 00:02:48.080
Самым первым делом давайте вспомним, что такое Event Notification.

00:02:48.080 --> 00:03:04.400
Это некоторый функционал внутри S3, который помогает вам описать некоторые события, связанные либо с бакетом, либо с объектами внутри этого S3 бакета, и отправить это событие на один target.

00:03:04.400 --> 00:03:10.400
Как target может выступать либо SNS, либо SQS, либо AWS Lambda.

00:03:10.400 --> 00:03:17.400
Когда мы говорим конфигурации, мы не можем создать две одинаковых конфигурации.

00:03:17.400 --> 00:03:25.400
Представим, что как событие мы описываем добавление объектов внутри S3 bucket.

00:03:25.400 --> 00:03:34.400
В этом случае мы создаем конфигурацию, указываем как target лямбда функцию.

00:03:34.400 --> 00:03:44.400
Вы не можете в рамках этого функционала создать такое же событие, при этом как target указать что-то другое.

00:03:44.400 --> 00:03:51.400
То есть на одну конфигурацию, на одно событие может быть создан только один Event Notification.

00:03:51.400 --> 00:03:56.400
Более того, в рамках одного Event Notification вы не можете указать более одного target-a.

00:03:56.400 --> 00:03:59.400
Это ограничение данного функционала.

00:03:59.400 --> 00:04:08.400
Поэтому в случае, если у вас несколько получателей одного и того же события, то рекомендуется настроить следующую архитектуру.

00:04:08.400 --> 00:04:21.400
У вас есть S3 bucket, так как у вас может быть на одно событие только один target, мы отправляем это сообщение в SNS topic.

00:04:21.400 --> 00:04:27.400
Далее к SNS topic уже прикрепляются подписчики.

00:04:27.400 --> 00:04:32.400
В нашем случае, это два SQS, отдельно независимые друг от друга.

00:04:32.400 --> 00:04:45.400
И так как оба SQS являются подписчиками SNS topic, то когда сообщение доходит до SNS topic, она в этот же момент всем подписчикам рассылает это сообщение.

00:04:45.400 --> 00:04:56.400
Далее уже отдельно на каждом SQS одно и то же сообщение в продублированном виде живет и отдельно обрабатывается.

00:04:56.400 --> 00:05:05.400
В нашем случае к одной SQS будет привязана одна команда, ко второй SQS будет привязана вторая команда и каждый будет работать со своей очередью независимо.

00:05:11.400 --> 00:05:28.400
Таким образом правильным ответом является первый вариант ответа, где нам рекомендуется создать SNS topic, далее сконфигурировать два отдельных SQS и подписаться на SNS topic.

00:05:28.400 --> 00:05:35.400
На стороне S3 необходимо настроить права доступа, так чтобы S3 могло отправлять сообщение на SNS topic.

00:05:38.400 --> 00:05:41.400
Давайте теперь подробнее остановимся на неправильных вариантах ответа.

00:05:41.400 --> 00:05:58.400
Когда мы говорим, варианты ответа, в которых предлагалось добавить дополнительный ресурс либо SQS очередь для второй команды, либо SNS FIFO topic для второй команды, оба эти варианты являются неверными.

00:05:58.400 --> 00:06:10.400
Почему? Потому что мы в рамках Event Notification можем привязаться к конкретному одному событию, то есть добавление нового объекта в S3 bucket или добавление и удаление.

00:06:10.400 --> 00:06:14.400
Далее мы указываем один единственный target.

00:06:14.400 --> 00:06:20.400
Более того, на одно и то же событие мы не можем создать несколько Event Notification.

00:06:20.400 --> 00:06:23.400
Вот такие ограничения у этого функционала.

00:06:23.400 --> 00:06:32.400
Поэтому к Event Notification создание и удаление объектов в S3 bucket мы не можем привязать дополнительный SQS либо SNS.

00:06:32.400 --> 00:06:34.400
Это нереализуемо.

00:06:34.400 --> 00:06:37.400
Соответственно, эти оба варианта являются неверными.

00:06:37.400 --> 00:06:53.400
Когда мы говорим про последний неверный вариант ответа, оно было очень похоже на правильный вариант ответа, отличалось лишь тем, что SQS очереди должны были "поллить" (запрашивать сообщения) SNS topic.

00:06:53.400 --> 00:07:01.400
"Поллить" это значит периодически время от времени запрашивать есть ли новые сообщения там или нет.

00:07:01.400 --> 00:07:03.400
Если есть, то собирать ее.

00:07:03.400 --> 00:07:08.400
Здесь специально хитро построили этот вариант ответа, так чтобы запутать.

00:07:08.400 --> 00:07:17.400
Да, polling относится к SQS, но относится не к источнику SQS, а относится к получателю сообщений от SQS.

00:07:17.400 --> 00:07:20.400
SQS сам по себе это очередь сообщений.

00:07:20.400 --> 00:07:29.400
И в очередь сообщений вы либо синхронно, асинхронно, не важно в каком режиме, вы накапливаете сообщения, отправляете в него сообщения.

00:07:29.400 --> 00:07:47.400
Далее уже получатели этих сообщений, в момент, когда им удобно, они как раз таки запускают polling, то есть время от времени, или в момент, когда получателю удобно принять это сообщение, запрашивает сообщение с SQS и его обрабатывает.

00:07:47.400 --> 00:07:51.400
В случае с SNS обратная ситуация.

00:07:51.400 --> 00:07:56.400
SQS - это pull-based logic, SNS - это push-based logic.

00:07:56.400 --> 00:08:13.400
То есть, опять же, не упоминается, как в SNS будет приходить сообщение, здесь имеется в виду, как будут получатели работать с сообщениями от SNS.

00:08:13.400 --> 00:08:23.400
Так как это push-based logic, есть SNS topic, к нему подписываются subscribers, то есть подписчики, в нашем случае это два отдельных SQS.

00:08:23.400 --> 00:08:36.400
И в момент, когда приходит сообщение SNS, SNS topic в ту же секунду сам рассылает всем подписчикам это сообщение и дублирует по всем получателям.

00:08:36.400 --> 00:08:48.400
Таким образом, SNS он push-ит сообщение, а в этом варианте ответа нам говорится, что мы должны pull-ить сообщение от SNS topic, что является неверным.

00:08:48.400 --> 00:08:52.400
Поэтому этот вариант также считается неверным вариантом ответа.

00:08:52.400 --> 00:08:56.400
На этом мы разобрали этот вопрос. Спасибо за внимание.
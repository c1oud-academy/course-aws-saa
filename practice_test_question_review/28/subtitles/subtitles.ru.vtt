WEBVTT

00:00:00.000 --> 00:00:06.000
Добрый день, уважаемые студенты! Мы с вами 
начинаем разбор вопроса Practice Test-а.

00:00:06.000 --> 00:00:14.560
Что нам дано? Компания использует сервис Amazon
 S3 для хранения часто запрашиваемых данных.

00:00:14.560 --> 00:00:19.960
Что сейчас уже настроено?
Это Event Notification.

00:00:19.960 --> 00:00:24.172
В момент, когда создается
либо удаляется объект в S3

00:00:24.196 --> 00:00:29.320
Bucket, оно отправляет это
событие сообщением в очередь SQS.

00:00:29.320 --> 00:00:34.360
Вас, как Solutions Architect,
попросили сделать следующую логику.

00:00:34.360 --> 00:00:41.695
Необходимо, чтобы обе команды, разработка
и администраторы, получали независимо

00:00:41.719 --> 00:00:48.960
друг от друга сообщение о том, что
объекты в S3 Bucket созданы или удалены.

00:00:48.960 --> 00:00:53.160
Необходимо выбрать один вариант
ответа, который является правильным.

00:00:53.160 --> 00:00:59.960
Давайте посмотрим, какие
варианты ответов предлагаются.

00:00:59.960 --> 00:01:03.280
Вы видите, что первый
вариант ответа является верным.

00:01:03.280 --> 00:01:07.400
Тем не менее, давайте рассмотрим
подробнее, какие варианты есть.

00:01:07.400 --> 00:01:15.880
Обратите внимание, что первый и
третий варианты ответа достаточно похожи.

00:01:15.880 --> 00:01:19.360
В обоих вариантах
предлагается настроить SNS topic.

00:01:19.360 --> 00:01:23.280
Дальше необходимо
дополнительно настроить два SQS.

00:01:23.280 --> 00:01:30.560
В первом варианте наши SQS
очереди будут подписаны на SNS topic.

00:01:30.560 --> 00:01:38.560
А в третьем варианте SQS очереди
будут запрашивать данные с SNS topic.

00:01:38.560 --> 00:01:52.068
Забегая наперед, скажу, что третий вариант
заведомо неправильный, потому что SQS сохраняет в

00:01:52.092 --> 00:02:05.600
себе сообщения, и при этом уже приложения в
режиме polling запрашивают новые сообщения с SQS.

00:02:05.600 --> 00:02:12.600
А SNS - это обратный случай, когда у
нас не pull-based, а push-based логика.

00:02:12.600 --> 00:02:17.287
То есть в момент, когда приходит
сообщение SNS, она всем подписчикам в тот

00:02:17.311 --> 00:02:22.320
же момент рассылает это сообщение.
То есть он push, рассылает, это сообщение.

00:02:22.320 --> 00:02:30.400
Если мы говорим про второй и четвертый вариант,
то предлагается добавить дополнительный ресурс.

00:02:30.400 --> 00:02:35.964
Во втором варианте - это SQS
очередь, а в четвертом варианте

00:02:35.988 --> 00:02:41.080
предлагается добавить
даже не SQS, а SNS FIFO topic.

00:02:41.080 --> 00:02:48.080
Самым первым делом давайте
вспомним, что такое Event Notification.

00:02:48.080 --> 00:02:55.970
Это некоторый функционал внутри S3, который
помогает вам описать некоторые события, связанные

00:02:55.994 --> 00:03:04.400
либо с бакетом, либо с объектами внутри этого
S3 бакета, и отправить это событие на один target.

00:03:04.400 --> 00:03:10.400
Как target может выступать либо
SNS, либо SQS, либо AWS Lambda.

00:03:10.400 --> 00:03:17.400
Когда мы говорим конфигурации, мы не
можем создать две одинаковых конфигурации.

00:03:17.400 --> 00:03:25.400
Представим, что как событие мы описываем
добавление объектов внутри S3 bucket.

00:03:25.400 --> 00:03:34.400
В этом случае мы создаем конфигурацию,
указываем как target лямбда функцию.

00:03:34.400 --> 00:03:39.388
Вы не можете в рамках этого
функционала создать такое

00:03:39.412 --> 00:03:44.400
же событие, при этом как
target указать что-то другое.

00:03:44.400 --> 00:03:51.400
То есть на одну конфигурацию, на одно событие
может быть создан только один Event Notification.

00:03:51.400 --> 00:03:56.400
Более того, в рамках одного Event Notification
вы не можете указать более одного target-a.

00:03:56.400 --> 00:04:01.869
Это ограничение данного функционала.
Поэтому в случае, если у вас несколько

00:04:01.893 --> 00:04:08.400
получателей одного и того же события, то
рекомендуется настроить следующую архитектуру.

00:04:08.400 --> 00:04:14.888
У вас есть S3 bucket, так как у
вас может быть на одно событие

00:04:14.912 --> 00:04:21.400
только один target, мы отправляем
это сообщение в SNS topic.

00:04:21.400 --> 00:04:27.400
Далее к SNS topic уже
прикрепляются подписчики.

00:04:27.400 --> 00:04:32.400
В нашем случае, это два SQS,
отдельно независимые друг от друга.

00:04:32.400 --> 00:04:38.888
И так как оба SQS являются подписчиками
SNS topic, то когда сообщение доходит

00:04:38.912 --> 00:04:45.400
до SNS topic, она в этот же момент всем
подписчикам рассылает это сообщение.

00:04:45.400 --> 00:04:50.888
Далее уже отдельно на каждом
SQS одно и то же сообщение

00:04:50.912 --> 00:04:56.400
в продублированном виде
живет и отдельно обрабатывается.

00:04:56.400 --> 00:05:00.888
В нашем случае к одной SQS будет
привязана одна команда, ко второй SQS будет

00:05:00.912 --> 00:05:05.400
привязана вторая команда и каждый будет
работать со своей очередью независимо.

00:05:11.400 --> 00:05:19.888
Таким образом правильным ответом является
первый вариант ответа, где нам рекомендуется

00:05:19.912 --> 00:05:28.400
создать SNS topic, далее сконфигурировать
два отдельных SQS и подписаться на SNS topic.

00:05:28.400 --> 00:05:35.400
На стороне S3 необходимо настроить права доступа,
чтобы S3 могло отправлять сообщение на SNS topic.

00:05:38.400 --> 00:05:41.400
Давайте теперь подробнее остановимся
на неправильных вариантах ответа.

00:05:41.400 --> 00:05:49.467
Когда говорим про варианты ответа, в которых
предлагалось добавить дополнительный ресурс либо SQS

00:05:49.491 --> 00:05:58.400
очередь для второй команды, либо SNS FIFO topic для
второй команды, оба эти варианты являются неверными.

00:05:58.400 --> 00:06:04.035
Почему? Потому что мы в рамках Event
Notification можем привязаться к конкретному

00:06:04.059 --> 00:06:10.400
одному событию, то есть добавление нового
объекта в S3 bucket или добавление и удаление.

00:06:10.400 --> 00:06:14.400
Далее мы указываем
один единственный target.

00:06:14.400 --> 00:06:20.400
Более того, на одно и то же событие мы не
можем создать несколько Event Notification.

00:06:20.400 --> 00:06:23.400
Вот такие ограничения
у этого функционала.

00:06:23.400 --> 00:06:27.888
Поэтому к Event Notification
создание и удаление объектов в

00:06:27.912 --> 00:06:32.400
S3 bucket мы не можем привязать
дополнительный SQS либо SNS.

00:06:32.400 --> 00:06:37.400
Это нереализуемо. Соответственно, 
эти оба варианта являются неверными.

00:06:37.400 --> 00:06:45.388
Когда мы говорим про последний неверный вариант
ответа, оно было очень похоже на правильный вариант

00:06:45.412 --> 00:06:53.400
ответа, отличалось лишь тем, что SQS очереди должны
были "поллить" (запрашивать сообщения) SNS topic.

00:06:53.400 --> 00:07:01.400
"Поллить" это значит периодически время от времени
запрашивать есть ли новые сообщения там или нет.

00:07:01.400 --> 00:07:08.400
Если есть, то собирать ее. Здесь специально хитро
построили этот вариант ответа, так чтобы запутать.

00:07:08.400 --> 00:07:17.400
Да, polling относится к SQS, но относится не к
источнику SQS, а к получателю сообщений от SQS.

00:07:17.400 --> 00:07:23.667
SQS сам по себе это очередь сообщений. И в очередь
 сообщений вы либо синхронно, асинхронно,

00:07:23.691 --> 00:07:29.400
не важно в каком режиме, вы накапливаете
сообщения, отправляете в него сообщения.

00:07:29.400 --> 00:07:34.472
Далее уже получатели этих
сообщений, в момент, когда им удобно,

00:07:34.496 --> 00:07:40.060
они как раз таки запускают polling,
то есть время от времени, или в

00:07:40.084 --> 00:07:45.520
момент, когда получателю удобно
принять это сообщение, запрашивает

00:07:45.544 --> 00:07:51.400
сообщение с SQS и его обрабатывает.
В случае с SNS обратная ситуация.

00:07:51.400 --> 00:07:56.400
SQS - это pull-based logic,
SNS - это push-based logic.

00:07:56.400 --> 00:08:04.888
То есть, опять же, не упоминается,
как в SNS будет приходить сообщение,

00:08:04.912 --> 00:08:13.400
здесь имеется в виду, как будут
получатели работать с сообщениями от SNS.

00:08:13.400 --> 00:08:18.133
Так как это push-based logic, есть
SNS topic, к нему подписываются

00:08:18.157 --> 00:08:23.400
subscribers, то есть подписчики, в
нашем случае это два отдельных SQS.

00:08:23.400 --> 00:08:29.888
И в момент, когда приходит сообщение
SNS, SNS topic в ту же секунду сам

00:08:29.912 --> 00:08:36.400
рассылает всем подписчикам это
сообщение и дублирует по всем получателям.

00:08:36.400 --> 00:08:41.828
Таким образом, SNS он push-ит
сообщение, а в этом варианте ответа нам

00:08:41.852 --> 00:08:48.400
говорится, что мы должны pull-ить
сообщение от SNS topic, что является неверным.

00:08:48.400 --> 00:08:52.400
Поэтому этот вариант также
считается неверным вариантом ответа.

00:08:52.400 --> 00:08:56.400
На этом мы разобрали этот вопрос.
Спасибо за внимание.
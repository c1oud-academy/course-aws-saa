Добрый день, уважаемые студенты! Я рад вас всех видеть на очередном обзоре лабораторной работы. Тема сегодняшней лабораторной работы - это создание Virtual Private Cloud, то есть VPC. Итак, давайте начнем. Начинаем лабораторную работу со страницы курса Cloud Architecting в AWS Academy. Здесь нам необходимо перейти в Modules и открыть шестой модуль, посвященный теме Networking. Как только мы раскроем все активности в рамках этого модуля, необходимо найти шестой Guided Lab. Давайте нажмем на нее, чтобы перейти на основную страницу лабораторной работы. Здесь необходимо удостовериться, что мы действительно открыли нужную лабораторную работу. И для начала обзора можем убрать окно Terminal, так как оно нам сейчас не нужно. В рамках сегодняшней лабораторной работы мы будем создавать VPC и ее компоненты. Мы все с вами знаем, что сети это достаточно сложная тема. И благодаря облачным технологиям вся та работа, связанная с сетевыми компонентами, с железом, она скрыта от нас. Все эти работы проведены уже за нас в дата- центрах AWS, готовы и ждут нашего распоряжения. Мы, используя различные сервисы и функционал этих сервисов, можем построить сети в облаках удаленно за буквально пару кликов мыши в AWS Management Console. В рамках лабораторной работы мы будем создавать VPC, Internet gateway, который привяжем к VPC. Внутри этого VPC создадим два subnets, один будет public, другой private. И также поднимем Application server в public subnet и протестируем уже заранее написанные для нас приложения. Рекомендуется для выполнения лабораторной работы выделить 30 минут. Если этого времени не хватает, вы всегда можете обнулить счетчик, при этом ваш прогресс в AWS аккаунте сохранится. Для этого необходимо, не нажимая на кнопку End lab, нажать на кнопку Start lab, подтвердить о том, что вы хотите начать лабораторную работу. В этом случае вы через некоторое время увидите, что счетчик начинает считаться с самого начала. Мы видим небольшое напоминание о том, что работаем в песочнице. Это специально созданный временный AWS аккаунт в рамках лабораторной работы. У него есть определенные ограничения. Не все сервисы и функционал этих сервисов доступен, но гарантированно доступны те сервисы и тот функционал, который мы проходим в рамках лабораторной работы. Если вы будете выполнять все задания, которые даны в лабораторной работе, проблем с доступом у вас не должно возникнуть. На этом слайде вы видите IT-инфраструктуру в облаке AWS, которую мы создадим сегодня в рамках лабораторной работы. Как мы видим, в одном AWS аккаунте будет создано одно VPC, это Lab VPC. Работать будем с одной availability zone, и оба subnet будут располагаться в этой availability zone. У нас также к VPC будет привязан Internet gateway. Application server будет находиться в public subnet, и у нее будет доступ выходить в интернет, ровно таки доступ из интернета к этому application server. Как только мы ознакомимся с заданием лабораторной работы, нам необходимо нажать на кнопку Start lab, и после того, как мы увидим готовность AWS аккаунта, мы можем нажать на кнопку AWS, чтобы перейти в AWS Management Console. Мы с вами начинаем первое задание в рамках лабораторной работы, и здесь будем создавать VPC. В AWS Management Console необходимо воспользоваться строкой поиска и перейти к сервису Amazon VPC. Как только откроется страница сервиса Amazon VPC, необходимо в левом навигационном меню выбрать опцию Your VPCs. Откроется список существующих VPC в AWS аккаунте. Мы не будем использовать существующий VPC, а создадим новый. Для этого нажмем на кнопку Create VPC. В открывшейся странице укажем, что мы создаем только VPC, другие компоненты создавать не нужно. Как Name введем значение Lab VPC, и как IPv4 CIDR Block введем следующее значение. После чего необходимо будет нажать на кнопку Create VPC. Обратите внимание, что в секции Tags у нас уже заполнился тег с ключом Name и со значением Lab VPC. Как только мы создадим VPC, нам необходимо включить одно значение, а именно Enable DNS Hostname. Это флажок, который для всех ресурсов, создаваемых внутри VPC, привязывает некоторый DNS Hostname. Если же вы хотите привязать уникальный либо кастомный DNS Hostname, вам необходимо воспользоваться сервисом Amazon Route 53. Это проделывать в рамках лабораторной работы не будем, но как дополнительная информация у вас она уже есть. На странице со списком VPC нам необходимо выбрать VPC созданный нами, далее нажать на кнопку Actions и выбрать опцию Edit VPC Settings. В списке признаков VPC необходимо найти опцию Enable DNS Hostname и сохранить изменения. Во втором задании мы будем создавать subnets. По завершению второго задания у нас будет следующая IT архитектура в облаке AWS. VPC мы уже создали, теперь переходим к созданию subnets. Первым делом создадим Public Subnet. Для этого в левом навигационном меню выберем опцию Subnets и когда отобразится список subnets, нам необходимо будет нажать на кнопку Create Subnet. На странице для ввода входных данных необходимо будет выбрать Lab VPC, как Subnet Name указать Public Subnet, как Availability Zone необходимо выбрать первую Availability Zone всписке, это us-east-1a, далее как CIDR блок указать следующее значение и внизу страницы нажать на кнопку Create Subnet. Обратите внимание, что размер CIDR блока 24, а это значит, что будет выделено 256 IP адресов для этого CIDR блока. Помним, что у нас есть 5 IP адресов, которые резервирует сам AWS, поэтому фактически у нас будет 256-5, то есть 251 значение для IP адресов. Первым IP адресом в рамках этого диапазона будет 10.0.0.0, что входит в CIDR блок нашего большого VPC. Отлично. Теперь, как только мы создадим наш Public Subnet, нам необходимо включить значение, а именно Enable auto-assign Public IPv4 Address. Идея ее в том, что при создании ресурсов в этом subnet-е автоматически будет привязываться публичный IP адрес. Чтобы его включить, необходимо выбрать Public Subnet из списка, далее нажать на кнопку Actions и в выпадающем меню выбрать опцию Edit Subnet Settings. Там необходимо будет включить соответствующий признак и сохранить эти изменения. Теперь мы с вами переходим к созданию private subnet, введем фактически те же значения, но с небольшими изменениями. Как VPC выберем LabVPC, как Subnet Name введем PrivateSubnet, как Availability zone выберем ту же Availability zone, а именно us-east-1a, и как CIDR блок укажем следующее значение. Здесь обратите особое внимание, что размер CIDR блока 23, это не ошибка, так было сделано специально. И если мы посчитаем согласно формуле, в этом CIDR блоке находится 512 IP адресов. Так как AWS резервирует 5 IP адресов, то в этом диапазоне фактически доступны 507 IP адресов. Это было сделано специально, так как большинство ресурсов, которые создаются в рамках VPC, они не для публичного доступа, не для публичного просмотра. И обычно их всех в целях безопасности располагают в private subnet-е. А соответственно этот subnet, чтобы не было проблем с выделением IP адресов, Private Subnet создают больше, а Public Subnet создают меньших размеров. Мы с вами добрались до третьего задания. Оно достаточно простое. Здесь нам необходимо создать Internet gateway и привязать его к нашему Lab VPC. Первым делом нам необходимо воспользоваться левым навигационным меню и выбрать опцию Internet gateways. Мы окажемся на странице со всеми Internet gateways в этом AWS аккаунте. Нам необходимо будет создать новый. Для этого нажмем на кнопку Create Internet Gateway. В открывшейся странице достаточно ввести имя Internet gateway. Давайте введем Lab IGW, то есть сокращённо от Internet Gateway. И нажмем на кнопку Create Internet Gateway в нижней части страницы. Как только мы это нажмем, нас направят на основную страницу ресурса. Здесь необходимо будет нажать на кнопку Actions и в выпадающем списке выбрать опцию Attach to VPC. Нас направят на страницу ввода входных данных и здесь необходимо будет выбрать наш VPC, а именно LabVPC. После нажать на кнопку Attach Internet Gateway. Как только вы её нажмёте, вы обратно вернётесь на основную страницу Internet gateway и увидите, что состояние Attached и в поле VPC указан наш LabVPC. На этом мы закончили третье задание и сейчас переходим к четвертому. Здесь нам необходимо настроить наши route tables. Когда мы создавали VPC, также создается дефолтовый route table. Мы его будем использовать и преобразим его в private route table. Чтобы его найти, необходимо воспользоваться левым навигационным меню и выбрать опцию Route tables. Здесь вы видите список из нескольких route tables. Необходимо будет найти столбец со ссылкой на VPC и выбрать тот route table, который ссылается на LabVPC. Как только вы её выберите, в столбце Name вы можете ввести новое значение. Давайте введём Private route table и сохраним. При выбранном route table у нас в нижней части экрана отображаются метаданные. Есть вкладка Routes. Обратите внимание, что там есть один единственный routing rule стандартный, который помогает обмениваться информацией и ресурсами внутри VPC. Мы не будем добавлять сюда новые routing rules, так как нет необходимости это делать в рамках лабораторной работы. А сейчас мы перейдём к созданию нового route table, который потом привяжем к public subnet. Для этого необходимо будет нажать на кнопку Create route table. В входных данных для поля Name необходимо будет ввести Public route table и как VPC выбрать LabVPC. После чего мы можем нажать на кнопку Create route table. Как только route table создастся, давайте посмотрим на метаданные, а именно вкладку Routes. Здесь также у нас есть один единственный routing rule, нам необходимо создать второй, чтобы настроить выход в интернет. Для этого нажмём на кнопку Edit routes. Откроется соответствующая страница. Здесь необходимо будет нажать на кнопку Add route. Добавится новая строчка. В этой строчке необходимо как Destination указать обозначение интернета. Это IP-адрес со всеми нулями слеш 0. Как Target необходимо будет указать созданный нами Internet gateway, называется LabIGW, после чего сохранить настройки. Как только мы это сделали, нам необходимо будет перейти на следующую вкладку Subnet associations и здесь необходимо будет привязать к public subnet. Для этого необходимо нажать на кнопку Edit subnet associations и в списке всех subnets найти public subnet, выбрать его и далее нажать на кнопку Save associations. Таким образом мы проделали все необходимые шаги, чтобы наш subnet фактически стал public. А именно мы создали Internet gateway, привязали ее к VPC. Далее мы создали route table. В этом route table создали дополнительный routing rule, который направляет трафик в интернет на наш Internet gateway. И последний шаг, мы привязали этот route table к нашему subnet, после чего он фактически стал public subnet. Мы с вами переходим к пятому заданию и здесь будем создавать security группу для нашего приложения. Для этого необходимо воспользоваться левым навигационным меню и выбрать пункт Security groups. В отображившемся списке security group нам необходимо будет нажать кнопку Create security group и ввести следующие входные данные. Как Security group name необходимо ввести App-SG, как Description указать Allow HTTP traffic, как VPC необходимо будет убрать выбор по умолчанию и выбрать VPC, который называется Lab VPC. После чего прокрутить в самый низ страницы и нажать на кнопку Create security group. Вас направят на основную страницу ресурса, а именно security группы. Здесь обратите внимание на вкладку Inbound rules, оно пустое. Нам необходимо добавить новый rule. Для этого нажать необходимо на кнопку Edit inbound rules и в открывшейся странице нажать на кнопку Add rule. Добавится новая строчка и в этой строчке введем следующие значения. Как Type введем HTTP. Как Source type введем Anywhere-IPv4. Как Description введем Allow web access. И в самом низу страницы нажмем на кнопку Save rules. Отлично. Эта security группа нам понадобится в следующем задании. Мы с вами переходим к шестому заданию и здесь мы будем запускать EC2 instance с заранее приготовленным для нас приложением в public subnet. Для того чтобы это сделать необходимо, используя строку поиска сервисов, перейти к сервису EC2. На главной странице сервиса EC2 необходимо найти кнопку Launch instance и нажать на нее. Как только вы это сделаете вас направят на отдельную страницу для ввода входных данных. Давайте ведем следующий значения. Как Name необходимо ввести App Server. Как операционную систему выбираем Amazon Linux. И в поле для детализации выберем значение Amazon Linux 2 AMI (HVM). Далее как Instance type выбираем t2.micro. Если нет поколения t2, можно выбрать поколение t3. И выбираем тот же размер инстанса, т.е. t3.micro. Далее в секции для ввода ключа необходимо будет выбрать vockey из выпадающего списка. И когда мы доходим до секции с настройкой сети необходимо будет нажать на кнопку Edit, так как мы будем вносить изменения. Как Network необходимо будет выбрать Lab VPC. Как Subnet – Public Subnet. Далее чуть ниже у нас будет настройки Security Group. Необходимо выбрать опцию Select an existing security group и выбрать ранее созданную security группу из выпадающего списка, который называется App-SG. Здесь мы закончили ввод необходимых данных. Нам необходимо прокрутить самый низ страницы и развернуть секцию Advanced details. Здесь нам необходимо заранее приготовленную IAM Role привязать к нашему EC2 инстансу. Поэтому в поле IAM Instance Profile из выпадающего списка выберем опцию Inventory-App-Role. Прокрутим самый низ этой секции и найдем поле User Data. Это набор команд, которые запустятся один раз во время создания нашего инстанса. Вам необходимо скопировать текст с командами и вставить это значение в соответствующее поле. Эти команды устанавливают необходимое программное обеспечение, а именно базу данных MySQL, PHP. Скачивает zip-архив с заранее приготовленным приложением в рамках лабораторной работы, устанавливает это приложение и поднимает веб-сервер. Как только мы ввели все необходимые значения, нам необходимо нажать на кнопку Launch instance с правой стороны страницы. Нас направят на страницу со списком инстансов. Здесь нам обязательно необходимо дождаться, что статус у нового созданного EC2 инстанса поменяется на два из двух. И после этого мы можем продолжать и двигаться к следующему заданию. Как только статус-чек будет пройден, нам необходимо будет выбрать этот EC2 инстанс и в отобразившихся метаданных скопировать публичный IPv4-адрес. Как только мы ее скопируем, необходимо в веб-браузере открыть новую вкладку и перейти по этому веб-адресу. Если вы увидели приложение, в котором будет написано «Please configure settings to connect to database», значит вы все сделали правильно и приложение успешно запустилось. В рамках этой лабораторной работы подключения к базе данных мы настраивать не будем. Это мы проделаем в следующей лабораторной работе. Отлично, на этом вы завершили лабораторную работу. После этого необходимо перейти на страницу лабораторной работы и нажать на кнопку Submit и подтвердить, что хотим завершить лабораторную работу. Через некоторое время завершится скрипт автооценки и вы в правой части экрана увидите свою оценку. Если же вы не получили максимальные баллы, то вы всегда можете посмотреть, на каком задании не хватает баллов и попробовать сделать его снова. Также не забудьте правильно разлогиниться с AWS Management Console, а также завершить лабораторную работу, чтобы не было проблем с открытием следующей лабораторной работы. На этом мы завершаем сессию обзора лабораторной работы. Спасибо за внимание. Увидимся с вами на следующих наших активностях.
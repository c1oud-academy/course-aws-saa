WEBVTT

00:00:00.000 --> 00:00:08.000
Добрый день, уважаемые студенты! Я рад вас всех видеть на очередной сессии обзора лабораторной работы.

00:00:08.000 --> 00:00:13.000
Тема лабораторной работы это создание динамического веб-сайта для нашего кафе.

00:00:13.000 --> 00:00:15.000
Итак, давайте начнем!

00:00:15.000 --> 00:00:20.000
Мы начинаем с основной страницы курса в AWS Academy.

00:00:20.000 --> 00:00:24.000
Нам необходимо в левом навигационном меню выбрать модули.

00:00:24.000 --> 00:00:33.000
Далее необходимо спозиционироваться на четвертом модуле и здесь найти Challenge Lab creating a dynamic website for the cafe.

00:00:33.000 --> 00:00:37.000
Как только вы окажетесь на основной странице лабораторной работы,

00:00:37.000 --> 00:00:45.000
нам необходимо будет скрыть окно терминала, чтобы оно не мешалось ознакомлению с заданием лабораторной работы.

00:00:45.000 --> 00:00:57.000
Согласно лабораторной работе, нам необходимо создать динамический веб-сайт.

00:00:57.000 --> 00:01:03.000
Этого просят посетители кафе, так как им было бы удобнее отправлять заказы в онлайне

00:01:03.000 --> 00:01:11.000
и после по пути на работу заходить и забирать свой уже оплаченный заказ.

00:01:11.000 --> 00:01:19.000
В рамках лабораторной работы мы будем выполнять техническую реализацию этого бизнес-кейса.

00:01:19.000 --> 00:01:26.000
Если мы говорим про технические задачи, у нас их 6.

00:01:26.000 --> 00:01:33.000
Что необходимо сделать, это подключиться к существующему EC2-инстанцу через Cloud9.

00:01:33.000 --> 00:01:38.000
Это отдельный сервис, который предоставляет идеи для работы над вашими проектами.

00:01:38.000 --> 00:01:47.000
Необходимо подключиться к EC2-инстанцу, посмотреть, что есть на этой машине, доступно ли оно через интернет,

00:01:47.000 --> 00:01:51.000
то есть проверить настройки инфраструктуры.

00:01:51.000 --> 00:01:56.000
Далее необходимо будет на EC2-инстанце установить веб-приложение.

00:01:56.000 --> 00:02:01.000
Это веб-приложение специально для этого лабораторной работы было подготовлено.

00:02:01.000 --> 00:02:04.000
И нам лишь необходимо его установить.

00:02:04.000 --> 00:02:13.000
Также мы подключим другой сервис, это AWS Systems Manager Parameter Store для хранения ключей и различных значений.

00:02:13.000 --> 00:02:21.000
Как только мы сделаем все необходимые установки и настройки, мы протестируем приложение.

00:02:21.000 --> 00:02:27.000
Если все будет отлично, то перейдем к следующему шагу и создадим AMI.

00:02:27.000 --> 00:02:33.000
Этот AMI скопируем в другой регион и поднимем наше веб-приложение уже в другом регионе.

00:02:33.000 --> 00:02:38.000
Таким образом, согласно бизнес-кейсу, у нас будет два различных environмента.

00:02:38.000 --> 00:02:41.000
Один для тестирования, другой для продакшн среды.

00:02:43.000 --> 00:02:50.000
Здесь вы видите изначальное состояние AWS Management Account.

00:02:50.000 --> 00:02:54.000
У нас есть два региона. В каждом есть паблик сабнет.

00:02:54.000 --> 00:02:59.000
В первом регионе поднятый EC2-инстанц, подключенным AWS Cloud9 сервисом.

00:02:59.000 --> 00:03:00.000
Также есть IAM-роль.

00:03:00.000 --> 00:03:06.000
После завершения лабораторной работы у нас будет следующая инфраструктура.

00:03:06.000 --> 00:03:11.000
Два приложения на двух регионах, оба работают и они независимы друг от друга.

00:03:14.000 --> 00:03:18.000
На выполнение этой лабораторной работы выделяется 60 минут.

00:03:18.000 --> 00:03:25.000
Я напоминаю, что сам счетчик будет намного больше 60 минут.

00:03:25.000 --> 00:03:30.000
Если и этого времени будет недостаточно, вы можете, не нажимая кнопку End Lab,

00:03:30.000 --> 00:03:35.000
нажать на кнопку Start Lab еще раз, и счетчик перейдет в исходное состояние.

00:03:35.000 --> 00:03:37.000
И начнется обратный отсчет.

00:03:39.000 --> 00:03:45.000
Также напоминаю, что не все сервисы и не весь функционал сервисов доступен,

00:03:45.000 --> 00:03:50.000
так как это специальный временный AWS Account с ограничениями.

00:03:50.000 --> 00:03:55.000
Но все необходимые сервисы и тот функционал, который нужен в рамках лабораторной работы,

00:03:55.000 --> 00:03:57.000
они гарантированно будут доступны.

00:03:59.000 --> 00:04:04.000
Нам необходимо нажать на кнопку Start Lab в самом начале, увидеть сообщение о том,

00:04:04.000 --> 00:04:10.000
что наш AWS Management Account готов, и после этого мы можем нажимать на кнопку AWS,

00:04:10.000 --> 00:04:13.000
чтобы перейти в AWS Management Console.

00:04:14.000 --> 00:04:16.000
Мы начинаем первое задание.

00:04:16.000 --> 00:04:22.000
Первым делом нам необходимо найти EC2 Instance и подключиться к нему.

00:04:27.000 --> 00:04:32.000
Самый первый шаг – это перейти на сервис EC2, посмотреть запущенные инстанции,

00:04:32.000 --> 00:04:38.000
убедиться, что есть инстанц, в названии которого содержится Cloud9 – кафе-вебсервер.

00:04:38.000 --> 00:04:45.000
Если это так, все хорошо, все настроилось верно, и ваш аккаунт готов к работе.

00:04:45.000 --> 00:04:51.000
Это первая лабораторная работа, в которой вам необходимо будет отвечать на вопросы.

00:04:52.000 --> 00:04:58.000
Вам необходимо будет нажать на кнопку Details, в выпадающем меню нажать на кнопку Show,

00:04:58.000 --> 00:05:03.000
и далее будет ссылка с названием Access the Multiple Choice Questions.

00:05:03.000 --> 00:05:08.000
Откроется отдельная страница в вашем браузере, и не закрывая эту страницу,

00:05:08.000 --> 00:05:13.000
вам по очереди необходимо отвечать на вопросы по мере прохождения лабораторной работы.

00:05:13.000 --> 00:05:16.000
Сейчас нам необходимо ответить на первые четыре вопроса.

00:05:16.000 --> 00:05:18.000
Первый вопрос звучит следующим образом.

00:05:18.000 --> 00:05:25.000
Нужно проверить, что этот инстанц находится в паблик сабнете или нет.

00:05:25.000 --> 00:05:33.000
Как только вы это проверите, вам нужно будет ответить, нажать на кнопку Submit и вернуться назад.

00:05:33.000 --> 00:05:38.000
Вы вернетесь обратно к списку вопросов, и так дальше продолжайте отвечать на следующие вопросы.

00:05:38.000 --> 00:05:48.000
Если мы говорим про второй вопрос, он спрашивает, привязан ли публичный IPv4 адрес к этому инстанцу.

00:05:49.000 --> 00:05:55.000
Третий вопрос. Какие inbound TCP порты открыты для этого инстанца?

00:05:56.000 --> 00:06:03.000
Четвертый вопрос. Подключена ли IAM-ROL к этому инстанцу?

00:06:03.000 --> 00:06:10.000
После того, как вы ответите на все вопросы, напоминаю, что окно с вопросами вы не закрываетесь,

00:06:10.000 --> 00:06:12.000
мы к нему еще вернемся.

00:06:14.000 --> 00:06:16.000
Мы переходим ко второму заданию.

00:06:16.000 --> 00:06:19.000
Мы будем подключаться к IDE на нашем сету Инстанции.

00:06:19.000 --> 00:06:24.000
Под IDE подразумевается сервис AWS, называется Cloud9.

00:06:24.000 --> 00:06:29.000
Это специальный сервис, который предоставляет Integrated Development Environment,

00:06:29.000 --> 00:06:33.000
на котором вы можете разрабатывать ваше приложение, не выходя из облака.

00:06:33.000 --> 00:06:37.000
Преимуществами является то, что этот сервис бесплатный,

00:06:37.000 --> 00:06:41.000
вы оплачиваете только за время работы EC2-инстанца.

00:06:41.000 --> 00:06:46.000
Есть специальная настройка, которая позволяет автоматически отключать EC2-инстанс

00:06:46.000 --> 00:06:50.000
и не платить за него, когда оно не активно, то есть не используется вами.

00:06:50.000 --> 00:06:54.000
Вам нет необходимости постоянно ее отключать.

00:06:54.000 --> 00:06:59.000
Как только вы подключаетесь, отключенный инстанс автоматически поднимается,

00:06:59.000 --> 00:07:03.000
это занимает не более двух минут и вся среда разработки готова.

00:07:05.000 --> 00:07:16.000
В Cloud9 вы можете позволить себе работать на намного более мощной машине

00:07:16.000 --> 00:07:23.000
и платить за это намного меньше денег, нежели если бы вы покупали дорогостоящие оборудование,

00:07:23.000 --> 00:07:27.000
физическое для работы на ней.

00:07:27.000 --> 00:07:34.000
Сейчас с Cloud9 достаточно купить самый простой ноутбук с хорошим выходом в интернет

00:07:34.000 --> 00:07:41.000
и так, чтобы работа с веб-браузером не тормозила работу системы.

00:07:41.000 --> 00:07:45.000
После того, как вы успешно подключитесь к IDE,

00:07:45.000 --> 00:07:52.000
то там подключаются мощности конкретной EC2-машины и вы ее можете использовать на полную.

00:07:52.000 --> 00:08:01.000
В рамках задания нам сейчас нужно перейти в сервис Cloud9.

00:08:01.000 --> 00:08:03.000
Как это делать вы знаете.

00:08:03.000 --> 00:08:07.000
Обратите внимание, что отображается список environmnt-ов.

00:08:07.000 --> 00:08:11.000
Там есть одна строчка, называется кафе web-сервер.

00:08:11.000 --> 00:08:17.000
И также я бы хотел отметить, что оно совпадает с названием EC2-инстанса.

00:08:17.000 --> 00:08:22.000
Это говорит о том, что они связаны между собой.

00:08:22.000 --> 00:08:27.000
Если мы откроем наше IDE, нажав на кнопку Open IDE,

00:08:27.000 --> 00:08:41.000
оно откроется и вы увидите простейший UI, который самодостаточен и помогает вам удобно работать.

00:08:41.000 --> 00:08:46.000
Есть куча настроек, которые помогут вам индивидуально под себя ее настроить,

00:08:46.000 --> 00:08:52.000
но это уже во время более тесной работы с этим сервисом.

00:08:52.000 --> 00:08:55.000
На начальном этапе эти сложные настройки мы производить не будем,

00:08:55.000 --> 00:09:02.000
а в большинстве случаев будем работать с настройками по умолчанию.

00:09:02.000 --> 00:09:06.000
Интерфейс IDE состоит из трех частей.

00:09:06.000 --> 00:09:11.000
В нижней правой части есть баш терминал, можно открыть несколько отдельных окон.

00:09:11.000 --> 00:09:20.000
Далее в левой части у нас файловый браузер, отображается все файлы и папки в соответствующей структуре на этой EC2-машине.

00:09:20.000 --> 00:09:25.000
Оно смотрит на путь home-ec2-user-environment.

00:09:25.000 --> 00:09:31.000
И в верхней правой части это основное окно, расположен файловый эдитор.

00:09:31.000 --> 00:09:39.000
Вы можете проверить, как оно работает, два раза нажав в файловом браузере на файл readme.md,

00:09:39.000 --> 00:09:42.000
если оно не открылось автоматически.

00:09:42.000 --> 00:09:51.000
На этом слайде вы видите скриншот cloud9.

00:09:51.000 --> 00:10:00.000
Во время выполнения лабораторной работы у вас будет возможность ближе познакомиться с этим сервисом.

00:10:00.000 --> 00:10:01.000
Следующее задание.

00:10:01.000 --> 00:10:08.000
Нам необходимо проверить, что ПО для работы веб-сайта настроено правильно.

00:10:08.000 --> 00:10:13.000
Также убедиться, что мы можем добраться из интернета до нашего веб-сервера.

00:10:13.000 --> 00:10:15.000
То есть оно доступно для интернета.

00:10:15.000 --> 00:10:19.000
Первым делом необходимо проверить операционную систему.

00:10:19.000 --> 00:10:22.000
Для этого необходимо вести команду на 10-м шаге.

00:10:22.000 --> 00:10:27.000
Вы увидите, что это Amazon Linux Instance, что является аналогом Red Hat.

00:10:27.000 --> 00:10:32.000
Red Hat это достаточно популярный выбор крупных IT-компаний,

00:10:32.000 --> 00:10:41.000
так как оно предоставляет частые обновления по безопасности,

00:10:41.000 --> 00:10:49.000
также имеет достаточно продвинутый функционал и является стандартным выбором во всем мире.

00:10:49.000 --> 00:10:56.000
Когда мы говорим про AWS, то Amazon Linux опережает решение Red Hat,

00:10:56.000 --> 00:11:00.000
так как является аналогом, дополнительно за нее оплачивать не нужно

00:11:00.000 --> 00:11:02.000
и она нативно интегрирована с AWS.

00:11:02.000 --> 00:11:07.000
Поэтому при работе с AWS рекомендуется использовать Amazon Linux.

00:11:07.000 --> 00:11:09.000
У нее есть несколько версий.

00:11:09.000 --> 00:11:11.000
На текущий момент последняя версия вторая.

00:11:17.000 --> 00:11:23.000
На 11-м шаге нам необходимо проверить, работает ли веб-сервер, база данных

00:11:23.000 --> 00:11:28.000
и посмотреть установлено ли язык программирования PHP.

00:11:28.000 --> 00:11:32.000
Для этого запустим следующие команды и проверим это.

00:11:34.000 --> 00:11:45.000
На 12-м шаге даются команды, которые позволяют добавить в автозагрузку веб-сервер и MySQL,

00:11:45.000 --> 00:11:47.000
также их стартовать.

00:11:47.000 --> 00:11:58.000
После того, как мы их стартуем, можем запустить команду для проверки статуса.

00:11:58.000 --> 00:12:07.000
Следующим шагом нам необходимо предоставить веб-серверу файлы,

00:12:07.000 --> 00:12:12.000
которые находятся в домашней директории Cloud9.

00:12:12.000 --> 00:12:15.000
Для этого мы ведем следующий набор команд.

00:12:15.000 --> 00:12:27.000
Фактически мы создаем Sim-link на var www из home.iss2user.environment пути.

00:12:27.000 --> 00:12:32.000
Также нам необходимо выдать соответствующие права для iss2user,

00:12:32.000 --> 00:12:35.000
чтобы оно могло работать с этими файлами.

00:12:35.000 --> 00:12:45.000
Теперь нам необходимо спозиционироваться в файловой директории на папку HTML,

00:12:45.000 --> 00:12:49.000
нажать правой кнопкой мыши и создать новый файл.

00:12:49.000 --> 00:12:54.000
Мы создаем простеющую HTML страницу следующего содержания.

00:12:54.000 --> 00:12:59.000
После того, как вы ее наполните, необходимо будет сохранить и закрыть.

00:12:59.000 --> 00:13:03.000
Сохранить нужно будет файл под названием index.html.

00:13:03.000 --> 00:13:10.000
На пятнадцатом шаге вам необходимо будет проверить доступ из интернет до вашего веб-сервера.

00:13:10.000 --> 00:13:15.000
Так как мы ее включили и мы создали index.html в нужном месте,

00:13:15.000 --> 00:13:19.000
то эта страница должна отображаться при прямом обращении.

00:13:19.000 --> 00:13:27.000
На пятнадцатом шаге вам необходимо самостоятельно проверить нужные места

00:13:27.000 --> 00:13:29.000
и убедиться в том, что интернет есть.

00:13:29.000 --> 00:13:33.000
Если интернета нет, иметь в виду доступ из интернета.

00:13:33.000 --> 00:13:38.000
Если его нет, то произвести соответствующие действия.

00:13:40.000 --> 00:13:45.000
Далее будут две подсказки, если у вас не получилось это сделать.

00:13:45.000 --> 00:13:48.000
Я рекомендую поставить паузу, попробовать делать самостоятельно.

00:13:48.000 --> 00:13:56.000
Если не получилось, вернуться к этому видео и посмотреть подсказки.

00:13:56.000 --> 00:14:04.000
Итак, рекомендуется проверить есть ли публичный IP-адрес у EC2-инстанца.

00:14:04.000 --> 00:14:12.000
Вторая подсказка, необходимо проверить, что есть ли соответствующее правило

00:14:12.000 --> 00:14:21.000
в security-группе, привязанной к EC2-инстанцу для HTTP-трафика, то есть это TCP 80-ый порт.

00:14:21.000 --> 00:14:26.000
Если этого нет, то необходимо добавить.

00:14:26.000 --> 00:14:31.000
Мы с вами переходим ко второй части нашей лабораторной работы.

00:14:31.000 --> 00:14:38.000
В рамках этой части нам необходимо будет скачать и установить динамическое веб-приложение

00:14:38.000 --> 00:14:42.000
на нашей EC2-инстанце и произвести все необходимые настройки.

00:14:42.000 --> 00:14:45.000
Приложение уже за нас написано, готово.

00:14:45.000 --> 00:14:49.000
Нам лишь необходимо проделать ту часть, которая относится к AWS.

00:14:49.000 --> 00:14:55.000
Итак, давайте начнем. На 16-ом шаге нам необходимо будет запустить этот список команд

00:14:55.000 --> 00:14:59.000
для того, чтобы скачать архивы и эти архивы разархивировать.

00:14:59.000 --> 00:15:07.000
Далее нам необходимо будет содержание папки кафе скопировать по пути var www.html

00:15:07.000 --> 00:15:10.000
для того, чтобы она стала доступна для веб-сервера.

00:15:11.000 --> 00:15:17.000
На 18-ом шаге мы чуть-чуть подробнее изучим, как устроено приложение.

00:15:17.000 --> 00:15:22.000
Для этого давайте откроем в папке кафе index.php.

00:15:22.000 --> 00:15:29.000
Как только вы откройте, вы увидите, что оно содержит HTML-код.

00:15:29.000 --> 00:15:34.000
Также видите, что есть некоторые вставки. Это как раз таки та динамическая часть,

00:15:34.000 --> 00:15:37.000
которая отрабатывает.

00:15:37.000 --> 00:15:45.000
Например, на 18-ой строчке видите, запускается файл getup-параметры с.php.

00:15:45.000 --> 00:15:54.000
Если открыть этот файл, вы увидите, на третьей линии используется AWS SDK.

00:15:54.000 --> 00:16:03.000
На линиях с 10-й по 33-й мы настраиваем клиент SSM-сервиса

00:16:03.000 --> 00:16:07.000
и извлекаем 7 параметров из Systems Manager.

00:16:07.000 --> 00:16:13.000
Эти параметры пока еще там не находятся, так как на следующих шагах

00:16:13.000 --> 00:16:16.000
мы их создадим.

00:16:18.000 --> 00:16:23.000
Для того, чтобы настроить эти параметры, необходимо перейти в папку setup

00:16:23.000 --> 00:16:28.000
и запустить скрипт setup-parameters.sh.

00:16:28.000 --> 00:16:34.000
Как только вы ее запустите, создадутся параметры в Parameter Store.

00:16:34.000 --> 00:16:38.000
Давайте проверим, действительно ли все правильно сработало

00:16:38.000 --> 00:16:43.000
и в AWS Management Console перейдем в сервис Systems Manager.

00:16:43.000 --> 00:16:47.000
Как только откроется главная страница сервиса Systems Manager,

00:16:47.000 --> 00:16:52.000
в левом навигационном меню нам необходимо будет перейти в Parameter Store.

00:16:54.000 --> 00:16:59.000
Откроется список всех параметров в этом AWS аккаунте в конкретном регионе

00:16:59.000 --> 00:17:02.000
и вы увидите 7 параметров.

00:17:02.000 --> 00:17:08.000
Это те параметры, которые используются PHP приложением для работы динамической части

00:17:08.000 --> 00:17:10.000
нашего веб-приложения.

00:17:13.000 --> 00:17:17.000
Следующим шагом мы будем настраивать нашу базу данных,

00:17:17.000 --> 00:17:22.000
поэтому нам необходимо сейчас открыть параметр cafe-db-password

00:17:22.000 --> 00:17:24.000
и скопировать пароль.

00:17:24.000 --> 00:17:30.000
Мы возвращаемся обратно в IDE и здесь нам необходимо сконфигурировать

00:17:30.000 --> 00:17:32.000
мою SQL базу данных.

00:17:32.000 --> 00:17:37.000
Давайте перейдем в папку db и запустим следующий скрипт.

00:17:37.000 --> 00:17:41.000
Set Root Password sh и Create db sh.

00:17:41.000 --> 00:17:46.000
Как только вы это проделаете, необходимо будет

00:17:47.000 --> 00:17:52.000
в ваш терминале проверить, действительно ли все правильно на вашем файле.

00:17:52.000 --> 00:17:55.000
Проверить, действительно ли все правильно настроилось.

00:17:55.000 --> 00:18:01.000
Запускаем следующий параметр и подключаемся к mysql базе данных.

00:18:01.000 --> 00:18:06.000
Как только мы подключились, можем посмотреть, какие базы настроены,

00:18:06.000 --> 00:18:11.000
какие таблицы есть и попробуем посмотреть содержание одной из таблиц.

00:18:11.000 --> 00:18:17.000
Далее на 24 шаге предлагается обновить конфигурацию временной зоны,

00:18:17.000 --> 00:18:22.000
используя следующие команды.

00:18:22.000 --> 00:18:28.000
Мы произвели все необходимые настройки, теперь на 25 шаге рекомендуется нам

00:18:28.000 --> 00:18:35.000
использовать публичный IP адрес нашего веб-сервера и попробовать его открыть.

00:18:35.000 --> 00:18:43.000
Необходимо также добавить в путь слеш cafe.

00:18:43.000 --> 00:18:48.000
Мы видим, что страница полностью не загружается и сейчас будем

00:18:48.000 --> 00:18:56.000
трабблшутить и понимать, почему она не работает.

00:18:56.000 --> 00:19:02.000
На 26 шаге нам необходимо разрешить проблему, которая была искусственно создана

00:19:02.000 --> 00:19:09.000
в рамках лабораторной работы.

00:19:09.000 --> 00:19:14.000
Здесь предоставляется список того, что точно работает.

00:19:14.000 --> 00:19:22.000
Точно работает это сам веб-сервер, так как мы можем обратиться по прямому IP адресу

00:19:22.000 --> 00:19:28.000
через интернет. Также мы работаем, что myql баз данных работает и содержит все

00:19:28.000 --> 00:19:36.000
необходимые таблицы и данные. � екомендуется сейчас остановить видео и попытаться

00:19:36.000 --> 00:19:42.000
подумать, где же может быть проблема. Далее на следующем шаге мы раскроем

00:19:42.000 --> 00:19:50.000
подсказки и их разберем. Итак, что же рекомендуется проверить?

00:19:50.000 --> 00:19:56.000
Проблема на самом деле не на стороне PHP, который предварительно было написано,

00:19:56.000 --> 00:20:04.000
а проблема в правах. Во второй подсказке нам говорится о том, что

00:20:04.000 --> 00:20:16.000
не используем ли мы какие-либо другие сервисы в рамках нашего приложения.

00:20:16.000 --> 00:20:23.000
В третьей подсказке говорится о том, что нам необходимо открыть IAM, там найти

00:20:23.000 --> 00:20:27.000
роль, кафе-роль и посмотреть на ее права.

00:20:27.000 --> 00:20:37.000
Если вы посмотрите на эти права, обратите внимание, что эти права пригодились бы

00:20:37.000 --> 00:20:46.000
нашему USE to Instance. Соответственно, мы могли бы выдать эти права для корректной

00:20:46.000 --> 00:20:57.000
работы нашего приложения. Последней подсказкой дается само решение, необходимо

00:20:57.000 --> 00:21:08.000
в AWS Management консоли для нашего USE to Instance привязать к нему эту роль.

00:21:08.000 --> 00:21:15.000
После того, как мы подключим роль к USE to Instance, мы можем попробовать обратиться

00:21:15.000 --> 00:21:21.000
повторно по пути IP-адрес, веб-сервера слеш кафе. Должно все загрузиться.

00:21:21.000 --> 00:21:26.000
Если все загрузилось, то отлично, я вас поздравляю, вы произвели корректную

00:21:26.000 --> 00:21:33.000
настройку не только приложения, но и инфраструктуры в AWS. Если же что-то не

00:21:33.000 --> 00:21:41.000
работает все еще, рекомендуется воспользоваться оцениванием в лабораторной работе.

00:21:41.000 --> 00:21:47.000
Вы можете проделывать это бесконечное количество раз и во время процедуры

00:21:47.000 --> 00:21:54.000
оценивания вам дается разбивка по каждому заданию, где вы баллы получили, где

00:21:54.000 --> 00:22:09.000
не получили. Используя эту информацию, вы можете понять, где вы допустили ошибку.

00:22:09.000 --> 00:22:14.000
Последнее задание в рамках второй части лабораторной работы. Нам необходимо

00:22:14.000 --> 00:22:21.000
протестировать это веб-приложение. Для этого переходим по ссылке, которая указана

00:22:21.000 --> 00:22:32.000
на 27 шаге, выбрать пункт меню и попробовать выбрать, выбрав несколько товаров,

00:22:32.000 --> 00:22:37.000
оставить заказ. Далее перейти на вкладку Order History и убедиться в том, что ваш

00:22:37.000 --> 00:22:42.000
заказ отображается. Если это так, то я вас поздравляю, все отлично, приложение

00:22:42.000 --> 00:22:46.000
работает, вы все корректно сделали и мы с вами готовы переходить к следующей

00:22:46.000 --> 00:22:56.000
части лабораторной работы. Мы с вами начинаем третью часть лабораторной работы.

00:22:56.000 --> 00:23:03.000
Здесь мы будем создавать новую продакшн среду, наша веб-сайта в другом AWS регионе.

00:23:03.000 --> 00:23:09.000
Таким образом, у нас будут задействованы два AWS региона, на каждом будет

00:23:09.000 --> 00:23:16.000
инстанс нашего апликейшн и в первом регионе это будет Dev среда, а вторая будет

00:23:16.000 --> 00:23:24.000
Prot среда. В рамках нашего бизнес-кейса, после создания веб-сайта, София, ее

00:23:24.000 --> 00:23:29.000
родители и все клиенты были довольны тем, что появилась динамичность и можно

00:23:29.000 --> 00:23:35.000
теперь оставлять заказы на сайте. Теперь родители Марта и Фрэнк попросили Софию

00:23:35.000 --> 00:23:42.000
создать второй веб-сайт, чтобы можно было не тревожа и не пугая пользователей

00:23:42.000 --> 00:23:49.000
вносить изменения, то есть они подразумевали Dev environment и другой

00:23:49.000 --> 00:23:54.000
веб-сайт, чтобы он был доступным всегда для всех клиентов и в которых не было

00:23:54.000 --> 00:24:02.000
ошибок. Это как раз таки production среда. София с ее друзьями и знакомыми обговорили

00:24:02.000 --> 00:24:08.000
план действий и решили в другом AWS регионе создать такое же приложение.

00:24:08.000 --> 00:24:14.000
Итак, мы начинаем выполнение этой части. Первым делом нам необходимо создать SSH

00:24:14.000 --> 00:24:20.000
ключи в EC2 Instance, чтобы при необходимости мы могли к нему подключаться. Для этого

00:24:20.000 --> 00:24:29.000
необходимо будет запустить команды на 28 шаге. Далее мы переходим на страницу

00:24:29.000 --> 00:24:38.000
AWS Management консоли в сервисе EC2, на нужном нам инстансе, нажмем кнопку Actions,

00:24:38.000 --> 00:24:44.000
далее выберем опцию Image Send Templates и нажмем на кнопку Create Image.

00:24:44.000 --> 00:24:50.000
Далее необходимо не закрывая эту страницу, ответить на следующий набор вопросов.

00:24:50.000 --> 00:24:59.000
Это пятый, шестой и седьмой. Я надеюсь вы не закрыли страницу с тестовыми вопросами,

00:24:59.000 --> 00:25:08.000
поэтому давайте пройдемся по тому, что нас спрашивают. На пятом вопросе спрашивают,

00:25:08.000 --> 00:25:14.000
есть ли необходимость перезагружать instance, когда вы создаете от нее AMI.

00:25:14.000 --> 00:25:21.000
Шестой вопрос звучит следующим образом. Какие признаки мы можем изменять в root volume,

00:25:21.000 --> 00:25:28.000
когда мы создаем AMI из существующего инстенса. Седьмой вопрос, можем ли мы добавлять

00:25:28.000 --> 00:25:42.000
большее количество volume для AMI, когда вы создаете AMI из инстенса с одним единственным root volume.

00:25:42.000 --> 00:25:54.000
После того как вы ответили на все вопросы, не закрываете страницу и нам необходимо перейти обратно

00:25:54.000 --> 00:26:02.000
в AWS Management Console и продолжить создание имиджа. Каким мы начинаем укажем кафе сервер и нажмем

00:26:02.000 --> 00:26:11.000
на кнопку Create Image. Нас перенаправить на страницу со всеми AMI. Необходимо подождать некоторое время,

00:26:11.000 --> 00:26:18.000
пока ее статус не станет available. Это занимает порядка двух минут, поэтому вы можете

00:26:18.000 --> 00:26:30.000
периодически обновлять страницу и как только она станет available, мы можем переходить к следующему шагу.

00:26:30.000 --> 00:26:37.000
Следующая задача, этот AMI создать в другом AWS регионе. Вам необходимо самостоятельно попробовать

00:26:37.000 --> 00:26:44.000
найти решение, если нет, на следующем слайде будут подсказки, которые помогут вам в этом.

00:26:44.000 --> 00:26:50.000
� екомендуется остановить видео и попробовать найти решение самостоятельно.

00:26:50.000 --> 00:26:56.000
Отлично, мы переходим к следующему слайду. У нас есть три подсказки. Первая подсказка говорит о том,

00:26:56.000 --> 00:27:06.000
что мы можем скопировать AMI ID нового созданного AMI и попробовать его поискать в US West 2 регионе.

00:27:06.000 --> 00:27:13.000
Вторая подсказка это попробовать посмотреть на уровне аккаунта. И третья подсказка это само решение,

00:27:13.000 --> 00:27:21.000
необходимо вернуться в основной регион, выбрать нужный AMI и в настройках actions выбрать соответствующую

00:27:21.000 --> 00:27:29.000
опцию, которая позволяет скопировать AMI в другой регион. В нашем случае это US West или Oregon.

00:27:29.000 --> 00:27:37.000
Создание AMI в другом регионе занимает порядка пяти минут. После того как вы запустили создание AMI,

00:27:37.000 --> 00:27:44.000
вы можете переключить регион и там ожидать, когда она перейдет в состояние available.

00:27:49.000 --> 00:27:56.000
После того как AMI будет готов, мы будем создавать в новом регионе instance со следующими настройками.

00:27:56.000 --> 00:28:06.000
Как регион укажем Oregon, как instance size выберем T2 small. В настройках нетворка выберем LabVPC

00:28:06.000 --> 00:28:14.000
и регион tool и public subnet. Как роль выберем cafe role. Здесь я хотел бы обратить внимание, что AM у нас

00:28:14.000 --> 00:28:20.000
является глобальным сервисом, поэтому все роли, все пользователи и группы, которые вы создаете,

00:28:20.000 --> 00:28:29.000
они доступны глобально и могут быть использованы с любого AWS региона в рамках вашего аккаунта.

00:28:29.000 --> 00:28:36.000
Далее настроим теги, как ключ указан name, как значение укажем prod cafe server.

00:28:36.000 --> 00:28:44.000
Чуть ниже в настройках security группы нам необходимо создать новую и создать rule для 22 порта,

00:28:44.000 --> 00:28:52.000
чтобы можно было подключаться со всего интернета. Аналогичные настройки необходимо произвести для 80 порта.

00:28:52.000 --> 00:29:03.000
Там где просят настроить SSH ключи, мы можем выбрать опцию proceed without key pair, так как наши SSH ключи,

00:29:03.000 --> 00:29:11.000
они уже находятся внутри AMI, их настраивать нет необходимости. Другой момент, который хотелось бы отметить,

00:29:11.000 --> 00:29:21.000
так как SSH ключи находится в AMI, любой instance созданный в любом AWS регионе будет содержать себе

00:29:21.000 --> 00:29:29.000
те же SSH ключи, а это значит, что к ним вы можете подключаться с одним и тем же приватным ключом,

00:29:29.000 --> 00:29:33.000
который у вас есть локально.

00:29:33.000 --> 00:29:49.000
Пока instance создается, нам необходимо создать параметры в systems manager.

00:29:49.000 --> 00:30:01.000
Для этого, как только появится public DNS значение, необходимо ее скопировать и вернуться в IDE.

00:30:01.000 --> 00:30:11.000
Там необходимо открыть set up parameters SSH script и произвести некоторые замены.

00:30:11.000 --> 00:30:23.000
На 12 линии необходимо поменять название региона и на 18 строчке необходимо вставить public DNS от нового instance.

00:30:23.000 --> 00:30:32.000
Здесь вы видите пример, как оно должно быть заполнено. Как только вы это сделаете, необходимо запустить скрипт.

00:30:32.000 --> 00:30:37.000
Если же возникают проблемы, то рекомендуется запустить следующий набор команд.

00:30:37.000 --> 00:30:57.000
Обратите внимание, что мы использовали скрипт в основном регионе и создали ключи, параметры в параметр store для другого региона.

00:30:57.000 --> 00:31:07.000
Теперь нам необходимо проверить, что новый instance с instance нашего приложения работает корректно.

00:31:07.000 --> 00:31:16.000
Для этого необходимо в регионе Oregon найти нашу сету instance, скопировать публичный IP адрес и попробовать по нему перейти.

00:31:16.000 --> 00:31:21.000
Вы должны увидеть сообщение hello from the cafe web server.

00:31:21.000 --> 00:31:29.000
Далее, если мы к IP адресу добавим slash cafe, мы должны оказаться на динамическом веб-сайте.

00:31:29.000 --> 00:31:36.000
Если все отображается корректно, это хорошо. Давайте теперь перейдем на вкладку меню и попробуем что-то заказать.

00:31:36.000 --> 00:31:45.000
Как только вы заказали, попробуйте перейти на страницу с историей заказов и убедиться, что действительно все корректно работает.

00:31:45.000 --> 00:31:59.000
Если где-то что-то работает не совсем корректно, вы всегда можете запустить систему оценивания и получить некоторые подсказки, где вы выполнили задание неверно.

00:31:59.000 --> 00:32:08.000
Также вы можете подключиться напрямую к instance в регионе Oregon, используя следующую команду.

00:32:08.000 --> 00:32:17.000
Эту команду необходимо вводить в IDE Cloud9 в bash терминале.

00:32:17.000 --> 00:32:23.000
На этом лаборторная работа завершена.

00:32:23.000 --> 00:32:28.000
Согласно бизнес-кейсу теперь София герой этого кафе.

00:32:28.000 --> 00:32:24.220
Она добавила тот необходимый функционал, который так был нужен для того, чтобы вы

00:32:24.220 --> 00:32:39.200
На этом лаборторная работа завершена. Согласно бизнес-кейсу теперь София герой этого кафе. Она добавила тот необходимый функционал, который так был нужен клиентам.

00:32:39.200 --> 00:32:49.200
Теперь у них два веб-сайта. Она объяснила своим родителям некоторые технические моменты, чтобы они были в курсе как что работает.

00:32:49.200 --> 00:33:01.200
На текущий момент у семьи во владении два веб-сайта, один из которых является Dev environment, а вторая Production средой.

00:33:01.200 --> 00:33:17.200
На этом завершаем выполнение лаборторной работы. Нам необходимо нажать на кнопку submit, далее подтвердить ее и через некоторое время отобразиться вкладка create с деталями оценивания.

00:33:17.200 --> 00:33:27.200
Вы получили максимальный балл. Отлично! Хороший результат. Если же нет, вы можете посмотреть, где вы допустили ошибку и попробовать ее исправить.

00:33:27.200 --> 00:33:36.200
После этого вы можете вернуться обратно на эту страницу и запустить систему оценивания еще раз.

00:33:36.200 --> 00:33:51.200
Также обращаю внимание, что мы должны корректно завершить и выйти с AWS Management консоли, а также завершить лаборторную работу. Для этого необходимо нажать на кнопку end lab, далее подтвердить, что мы завершаем лаборторную работу.

00:33:51.200 --> 00:34:09.200
И как только вы увидите сообщение, что процесс удаления инициирован и вы можете закрывать окно, то вы можете закрыть окно лаборторной работы и закрывать страницу в веб-браузере.

00:34:09.200 --> 00:34:27.200
На этом мы завершили лаборторную работу. Надеюсь, вы получили более полное представление о работе с AWS. Если будут вопросы, пишите, постараемся на все их ответить.

00:34:27.200 --> 00:34:47.200
Спасибо за внимание! Увидимся с вами на следующих наших активностях!
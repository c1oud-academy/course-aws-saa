Добрый день, уважаемые студенты! Рад вас видеть на очередной сессии обзора лабораторной работы. Тема лабораторной работы - это создание динамического веб-сайта для нашего кафе. Итак, давайте начнем! Мы начинаем с основной страницы курса в AWS Academy. Нам необходимо в левом навигационном меню выбрать Modules. Далее необходимо спозиционироваться на четвертом модуле и здесь найти Challenge Lab creating a dynamic website for the cafe. Как только вы окажетесь на основной странице лабораторной работы, нам необходимо будет скрыть окно Terminal, чтобы оно не мешало ознакомлению с заданием лабораторной работы. Согласно лабораторной работе, нам необходимо создать динамический веб-сайт. Этого просят посетители кафе, так как им было бы удобнее отправлять заказы в онлайне и по пути на работу заходить и забирать свой уже оплаченный заказ. В рамках лабораторной работы мы будем выполнять техническую реализацию бизнес-кейса. Если мы говорим про технические задачи, у нас их 6. Что необходимо сделать, это подключиться к существующему EC2 инстансу через Cloud9. Это - отдельный сервис, который предоставляет IDE для работы над вашими проектами. Необходимо подключиться к EC2 инстансу, посмотреть, что есть на этой машине, доступно ли оно через интернет, то есть проверить настройки инфраструктуры. Далее, необходимо будет на этот EC2 инстанс установить веб-приложение. Это веб-приложение специально было подготовлено для этой лабораторной работы. И нам лишь необходимо его установить. Также мы подключим другой сервис, это AWS Systems Manager Parameter Store для хранения ключей и различных значений. Как только мы сделаем все необходимые установки и настройки, мы протестируем приложение. Если все будет отлично, то перейдем к следующему шагу и создадим AMI. Этот AMI скопируем в другой регион и поднимем наше веб-приложение уже в другом регионе. Таким образом, согласно бизнес-кейсу, у нас будет два различных environment-а. Один для тестирования, другой для production среды. Здесь вы видите изначальное состояние AWS Management Account. У нас есть два региона. В каждом есть public subnet. В первом регионе поднят EC2 инстанс, подключенный к AWS Cloud9 сервису. Также есть IAM role. После завершения лабораторной работы у нас будет следующая инфраструктура. Два приложения на двух регионах, оба работают и они независимы друг от друга. На выполнение этой лабораторной работы выделяется 60 минут. Я напоминаю, что сам счетчик будет намного больше чем 60 минут. Если и этого времени будет недостаточно, вы можете, не нажимая кнопку End Lab, нажать на кнопку Start Lab еще раз, и счетчик перейдет в исходное состояние и начнется обратный отсчет. Также напоминаю, что не все сервисы и не весь функционал сервисов доступен, так как это специальный временный AWS Account с ограничениями. Но все необходимые сервисы и тот функционал, который нужен в рамках лабораторной работы, они гарантированно будут доступны. Необходимо нажать на кнопку Start Lab, увидеть сообщение о том, что наш AWS Management Account готов, и после этого мы можем нажимать на кнопку AWS, чтобы перейти в AWS Management Console. Мы начинаем первое задание. Необходимо найти EC2 Instance и подключиться к нему. Самый первый шаг – это перейти на сервис EC2, посмотреть запущенные инстансы, убедиться, что есть инстанс, в названии которого содержится aws-cloud9-CafeWebServer. Если это так, все хорошо, все настроилось верно, и ваш аккаунт готов к работе. Это первая лабораторная работа, в которой вам необходимо будет отвечать на вопросы. Вам необходимо будет нажать на кнопку Details, в выпадающем меню нажать на кнопку Show, и далее будет ссылка с названием Access the Multiple Choice Questions. Откроется отдельная страница в вашем браузере, и не закрывая эту страницу, вам по очереди необходимо отвечать на вопросы по мере прохождения лабораторной работы. Сейчас нам необходимо ответить на первые четыре вопроса. Первый вопрос: Нужно проверить, этот инстанс находится в public subnet-е или нет. Как только вы это проверите, нужно будет ответить, нажать на кнопку Submit и вернуться назад. Вы вернетесь обратно к списку вопросов, и так дальше продолжайте отвечать на следующие вопросы. Если мы говорим про второй вопрос, привязан ли публичный IPv4 адрес к этому инстансу? Третий вопрос: какие inbound TCP порты открыты для этого инстанса? Четвертый вопрос: подключена ли IAM role к этому EC2 инстансу? После того, как вы ответите на все вопросы, напоминаю, что окно с вопросами вы не закрываете, мы к нему еще вернемся. Мы переходим ко второму заданию. Мы будем подключаться к IDE на нашем EC2 инстансе. Под IDE подразумевается сервис AWS, называется Cloud9. Это специальный сервис, который предоставляет Integrated Development Environment, на котором вы можете разрабатывать ваше приложение, не выходя из облака. Преимуществами является то, что этот сервис бесплатный, вы оплачиваете только за время работы EC2 инстанса. Есть специальная настройка, которая позволяет автоматически отключать EC2 инстанс и не платить за него, когда оно не активно, не используется. Вам нет необходимости постоянно ее отключать. Как только вы подключаетесь, отключенный инстанс автоматически поднимается, это занимает не более двух минут и вся среда разработки готова. В Cloud9 вы можете позволить себе работать на более мощной машине и платить за это намного меньше денег, нежели если бы вы покупали дорогостоящее физическое оборудование. Сейчас с Cloud9 достаточно купить самый простой ноутбук с хорошим выходом в интернет и так, чтобы работа с веб-браузером не тормозила работу системы. После того, как вы успешно подключитесь к IDE, то там подключаются мощности конкретной EC2 машины и вы ее можете использовать на полную. В рамках задания нам сейчас нужно перейти в сервис Cloud9. Как это делать вы знаете. Обратите внимание, что отображается список environment-ов. Там есть одна строчка, называется CafeWebServer. И также я бы хотел отметить, что оно совпадает с названием EC2 инстанса. Это говорит о том, что они связаны между собой. Если мы откроем наш IDE, нажав на кнопку Open IDE, оно откроется и вы увидите простейший UI, который самодостаточен и помогает вам удобно работать. Есть куча настроек, которые помогут вам индивидуально под себя ее настроить, но это уже во время более тесной работы с этим сервисом. На начальном этапе эти сложные настройки мы производить не будем, а в большинстве случаев будем работать с настройками по умолчанию. Интерфейс IDE состоит из трех частей. В нижней правой части есть bash terminal, можно открыть несколько отдельных окон. Далее в левой части у нас file browser, отображается все файлы и папки в соответствующей структуре на этой EC2 машине. Оно смотрит на путь /home/ec2-user/environment. И в верхней правой части это основное окно, расположен file editor. Вы можете проверить, как оно работает, два раза нажав в файловом браузере на файл README.md, если оно не открылось автоматически. На этом слайде вы видите скриншот Cloud9. Во время выполнения лабораторной работы будет возможность ближе познакомиться с этим сервисом. Следующее задание. Нам необходимо проверить, что ПО для работы веб-сайта настроено правильно. Также убедиться, что мы можем добраться из интернета до нашего веб-сервера, то есть оно доступно для интернета. Первым делом необходимо проверить операционную систему. Для этого ввести команду на 10-м шаге. Вы увидите, что это Amazon Linux Instance, что является аналогом Red Hat. Red Hat это достаточно популярный выбор крупных IT-компаний, оно предоставляет частые обновления по безопасности, имеет достаточно продвинутый функционал и является стандартным выбором. Когда мы говорим про AWS, то Amazon Linux опережает решение Red Hat, так как является аналогом, дополнительно за нее оплачивать не нужно и она нативно интегрирована с AWS. Поэтому при работе с AWS рекомендуется использовать Amazon Linux. У нее есть несколько версий. На текущий момент последняя версия вторая. На 11-м шаге нам необходимо проверить, работает ли веб-сервер, база данных и посмотреть установлен ли язык программирования PHP. Для этого запустим следующие команды и проверим. На 12-м шаге даются команды, которые позволяют добавить в автозагрузку веб-сервер и MySQL, также их стартовать. После того, как мы их стартуем, можем запустить команду для проверки статуса. Следующим шагом нам необходимо предоставить веб-серверу файлы, которые находятся в домашней директории Cloud9. Для этого мы ведем следующий набор команд. Фактически мы создаем симлинк на /var/www/ из /home/ec2-user/environment пути. Также необходимо выдать соответствующие права для ec2-user, чтобы оно могло работать с этими файлами. Теперь нам необходимо спозиционироваться в файловой директории на папку HTML, нажать правой кнопкой мыши и создать новый файл. Мы создаем простейшую HTML страницу следующего содержания. После того, как вы ее наполните, необходимо будет сохранить и закрыть. Сохранить нужно будет файл под названием index.html. На 15-м шаге вам необходимо будет проверить доступ из интернета до вашего веб-сервера. Так как мы ее включили и мы создали index.html в нужном месте, то эта страница должна отображаться при прямом обращении. На 15-м шаге необходимо самостоятельно проверить нужные места и убедиться в том, что интернет есть. Если интернета нет, имеется в виду доступ из интернета, то произвести соответствующие действия. Далее будут две подсказки, если у вас не получилось это сделать. Я рекомендую поставить паузу, попробовать делать самостоятельно. Если не получилось, вернуться к этому видео и посмотреть подсказки. Итак, рекомендуется проверить есть ли публичный IP-адрес у EC2 инстанса. Вторая подсказка, необходимо проверить, есть ли соответствующее правило в security группе, привязанной к EC2 инстансу для HTTP трафика, TCP 80-ый порт. Если нет, то необходимо добавить. Мы с вами переходим ко второй части нашей лабораторной работы. В рамках этой части необходимо скачать и установить динамическое веб-приложение на EC2 инстанс и произвести все необходимые настройки. Приложение уже за нас написано, готово. Нам лишь необходимо проделать ту часть, которая относится к AWS. Итак, давайте начнем. На 16-ом шаге нам необходимо будет запустить этот список команд для того, чтобы скачать архивы и эти архивы разархивировать. Далее нам необходимо будет содержание папки cafe скопировать по пути var/www/html для того, чтобы она стала доступна для веб-сервера. На 18-ом шаге мы чуть-чуть подробнее изучим, как устроено приложение. Для этого давайте откроем в папке cafe index.php. Как только вы откроете, вы увидите, что оно содержит HTML код. Также видите, что есть некоторые вставки. Это как раз динамическая часть, которая отрабатывает. Например, на 18-ой строчке, запускается файл getAppParameters.php. Если открыть этот файл, вы увидите, на третьей линии используется AWSSDK. На линиях с 10-й по 33-й мы настраиваем клиент ssm сервиса и извлекаем 7 параметров из Systems Manager. Эти параметры пока еще там не находятся, так как на следующих шагах мы их создадим. Для того, чтобы настроить эти параметры, необходимо перейти в папку setup и запустить скрипт /set-app-parameters.sh. Как только вы ее запустите, создадутся параметры в Parameter Store. Давайте проверим, действительно ли все правильно сработало и в AWS Management Console перейдем в сервис Systems Manager. Как только откроется главная страница сервиса Systems Manager, в левом навигационном меню нам необходимо будет перейти в Parameter Store. Откроется список всех параметров в этом AWS аккаунте в конкретном регионе и вы увидите 7 параметров. Это те параметры, которые используются PHP приложением для работы динамической части нашего веб-приложения. Следующим шагом мы будем настраивать нашу базу данных, поэтому нам необходимо сейчас открыть параметр /cafe/dbPassword и скопировать пароль. Мы возвращаемся обратно в IDE и здесь нам необходимо сконфигурировать MySQL базу данных. Давайте перейдем в папку db и запустим следующий скрипты set-root-password.sh и create-db.sh. Как только вы это проделаете, необходимо будет в bash terminal проверить, действительно ли все правильно настроилось. Запускаем следующий параметр и подключаемся к mysql базе данных. Как только мы подключились, можем посмотреть, какие базы настроены, какие таблицы есть и попробуем посмотреть содержание одной из таблиц. Далее на 24 шаге предлагается обновить конфигурацию временной зоны, используя следующие команды. Мы произвели все необходимые настройки, теперь на 25 шаге рекомендуется использовать публичный IP адрес нашего веб-сервера и попробовать его открыть. Необходимо также добавить в путь /cafe. Мы видим, что страница полностью не загружается и сейчас будем делать troubleshooting и понимать, почему она не работает. На 26 шаге нам необходимо разрешить проблему, которая была искусственно создана в рамках лабораторной работы. Здесь предоставляется список того, что точно работает. Это сам веб-сервер, так как мы можем обратиться по прямому IP адресу через интернет. Также mysql баз данных работает и содержит все необходимые таблицы и данные. Рекомендуется сейчас остановить видео и попытаться подумать, где же может быть проблема. Далее на следующем шаге мы раскроем подсказки и их разберем. Итак, что же рекомендуется проверить? Проблема на самом деле не на стороне PHP, которое предварительно было написано, а проблема в правах. Во второй подсказке нам говорится о том, что не используем ли мы какие-либо другие сервисы в рамках нашего приложения. В третьей подсказке говорится о том, что нам необходимо открыть IAM, там найти роль CafeRole и посмотреть на ее права. Если вы посмотрите на эти права, обратите внимание, что эти права пригодились бы нашему EC2 инстансу. Соответственно, мы могли бы выдать эти права для корректной работы нашего веб-приложения. Последней подсказкой дается само решение, необходимо в AWS Management Console для нашего EC2 инстанса привязать к нему эту роль. После того, как мы подключим роль к EC2 инстансу, мы можем попробовать обратиться повторно по пути IP-адрес веб-сервера/cafe. Должно все загрузиться. Если все загрузилось, то отлично, я вас поздравляю, вы произвели корректную настройку не только приложения, но и инфраструктуры в AWS. Если же что-то не работает, рекомендуется воспользоваться оцениванием лабораторной работы. Вы можете проделывать это бесконечное количество раз и во время процедуры оценивания вам дается разбивка по каждому заданию, где вы баллы получили, где не получили. Используя эту информацию, вы можете понять, где вы допустили ошибку. Последнее задание в рамках второй части лабораторной работы. Нам необходимо протестировать это веб-приложение. Для этого переходим по ссылке, которая указана на 27 шаге, выбрать пункт Menu и выбрав несколько товаров, оставить заказ. Далее перейти на вкладку Order History и убедиться в том, что ваш заказ отображается. Если это так, то я вас поздравляю, все отлично, приложение работает, вы все корректно сделали и мы с вами готовы переходить к следующей части лабораторной работы. Мы с вами начинаем третью часть лабораторной работы. Здесь мы будем создавать новую production среду нашего веб-сайта в другом AWS регионе. Таким образом, у нас будут задействованы два AWS региона, на каждом будет инстанс нашего application и в первом регионе это будет Dev среда, а вторая будет Prod среда. В рамках нашего бизнес-кейса, после создания веб-сайта, София, ее родители и все клиенты были довольны тем, что появилась динамичность и можно теперь оставлять заказы на сайте. Теперь родители Марта и Фрэнк попросили Софию создать второй веб-сайт, чтобы можно было не тревожа и не пугая пользователей вносить изменения, то есть они подразумевали Dev environment и другой веб-сайт, чтобы он был доступным всегда для всех клиентов и в которых не было ошибок, это как раз таки production среда. София с ее друзьями и знакомыми обговорили план действий и решили в другом AWS регионе создать такое же приложение. Итак, мы начинаем выполнение этой части. Первым делом нам необходимо создать SSH ключи в EC2 Instance, чтобы при необходимости мы могли к нему подключаться. Для этого необходимо будет запустить команды на 28 шаге. Далее мы переходим на страницу AWS Management Console в сервисе EC2, на нужном нам инстансе, нажмем кнопку Actions, далее выберем опцию Images and Templates и нажмем на кнопку Create Image. Далее необходимо не закрывая эту страницу, ответить на следующий набор вопросов. Это пятый, шестой и седьмой. Я надеюсь вы не закрыли страницу с тестовыми вопросами, поэтому давайте пройдемся по тому, что нас спрашивают. На пятом вопросе спрашивают, есть ли необходимость перезагружать инстанс, когда вы создаете от нее AMI. Шестой вопрос звучит следующим образом. Какие признаки мы можем изменять в root volume, когда мы создаем AMI из существующего инстанса. Седьмой вопрос, можем ли мы добавлять большее количество volume для AMI, когда вы создаете AMI из инстанса с одним единственным root volume. После того как вы ответили на все вопросы, не закрывайте страницу и нам необходимо перейти обратно в AWS Management Console и продолжить создание Image. Как Image name укажем CafeServer и нажмем на кнопку Create Image. Нас перенаправит на страницу со всеми AMI. Необходимо подождать некоторое время, пока ее статус не станет available. Это занимает порядка двух минут, поэтому вы можете периодически обновлять страницу и как только она станет available, мы можем переходить к следующему шагу. Следующая задача, этот AMI создать в другом AWS регионе. Вам необходимо самостоятельно попробовать найти решение, если нет, на следующем слайде будут подсказки, которые помогут вам в этом. Рекомендуется остановить видео и попробовать найти решение самостоятельно. Отлично, мы переходим к следующему слайду. У нас есть три подсказки. Первая подсказка говорит о том, что мы можем скопировать AMI ID нового созданного AMI и попробовать его поискать в us-west-2 регионе. Вторая подсказка - это попробовать посмотреть на уровень аккаунта. И третья подсказка - это само решение, необходимо вернуться в основной регион, выбрать нужный AMI и в настройках Actions выбрать соответствующую опцию, которая позволяет скопировать AMI в другой регион. В нашем случае это US West или Oregon. Создание AMI в другом регионе занимает порядка пяти минут. После того как вы запустили создание AMI, вы можете переключить регион и там ожидать, когда она перейдет в состояние available. После того как AMI будет готов, мы будем создавать в новом регионе инстанс со следующими настройками. Как Region укажем Oregon, как Instance size выберем t2.small. В настройках Network выберем Lab VPC Region 2 и Public subnet. Как IAM Role выберем CafeRole. Здесь я хотел бы обратить внимание, что IAM у нас является глобальным сервисом, поэтому все роли, все пользователи и группы, которые вы создаете, они доступны глобально и могут быть использованы с любого AWS региона в рамках вашего аккаунта. Далее настроим теги, как Key указан Name, как Value укажем ProdCafeServer. Чуть ниже в настройках security группы нам необходимо создать новую и создать rule для 22 порта, чтобы можно было подключаться со всего интернета. Аналогичные настройки необходимо произвести для 80 порта. Там где просят настроить SSH ключи, мы можем выбрать опцию Proceed without a key pair, так как наши SSH ключи уже находятся внутри AMI, их настраивать нет необходимости. Другой момент, который хотелось бы отметить, так как SSH ключи находятся в AMI, любой инстанс созданный в любом AWS регионе будет содержать себе те же SSH ключи, а это значит, что к ним вы можете подключаться с одним и тем же приватным ключом, который у вас есть локально. Пока инстанс создается, нам необходимо создать параметры в systems manager. Для этого, как только появится Public DNS значение, необходимо ее скопировать и вернуться в IDE. Там необходимо открыть set-app-parameters.sh скрипт и произвести некоторые замены. На 12 линии необходимо поменять название региона и на 18 строчке необходимо вставить public DNS от нового инстанса. Здесь вы видите пример, как оно должно быть заполнено. Как только вы это сделаете, необходимо запустить скрипт. Если же возникают проблемы, то рекомендуется запустить следующий набор команд. Обратите внимание, что мы использовали скрипт в основном регионе и создали параметры в Parameter store для другого региона. Теперь нам необходимо проверить, что новый инстанс нашего приложения работает корректно. Для этого необходимо в регионе Oregon найти наш EC2 инстанс, скопировать публичный IP адрес и попробовать по нему перейти. Вы должны увидеть сообщение Hello from the cafe web server! Далее, если мы к IP адресу добавим /cafe, мы должны оказаться на динамическом веб-сайте. Если все отображается корректно, хорошо. Давайте перейдем на вкладку Menu и попробуем что-то заказать. Как только вы заказали, попробуйте перейти на страницу с историей заказов и убедиться, что действительно все корректно работает. Если где-то что-то работает не совсем корректно, вы всегда можете запустить систему оценивания и получить некоторые подсказки, где вы выполнили задание неверно. Также вы можете подключиться напрямую к инстансу в регионе Oregon, используя следующую команду. Эту команду необходимо вводить в IDE Cloud9 в bash terminal. На этом лаборторная работа завершена. Согласно бизнес-кейсу теперь София герой этого кафе. Она добавила тот необходимый функционал, который так был нужен клиентам, теперь у них два веб-сайта. Она объяснила своим родителям некоторые технические моменты, чтобы они были в курсе как что работает. На текущий момент у семьи во владении два веб-сайта, один из которых является Dev environment, а вторая Production environment. На этом завершаем выполнение лаборторной работы. Нам необходимо нажать на кнопку Submit, далее подтвердить ее и через некоторое время отобразиться вкладка Grades с деталями оценивания. Если вы получили максимальный балл, отлично! Хороший результат. Если же нет, вы можете посмотреть, где вы допустили ошибку и попробовать ее исправить. После этого вы можете вернуться обратно на эту страницу и запустить систему оценивания еще раз. Также обращаю внимание, что мы должны корректно завершить и выйти с AWS Management Console, а также завершить лаборторную работу. Для этого необходимо нажать на кнопку End lab, далее подтвердить, что мы завершаем лаборторную работу. И как только вы увидите сообщение, что процесс удаления инициирован, то вы можете закрыть окно лаборторной работы и страницу в веб-браузере. На этом мы завершили лаборторную работу. Надеюсь, вы получили более полное представление о работе с AWS. Если будут вопросы, пишите, постараемся на все ответить. Спасибо за внимание! Увидимся на следующих наших активностях!
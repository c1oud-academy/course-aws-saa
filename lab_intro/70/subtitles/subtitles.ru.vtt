WEBVTT

00:00:00.000 --> 00:00:08.000
Добрый день, уважаемые студенты! Рад вас видеть
на очередной сессии обзора лабораторной работы.

00:00:08.000 --> 00:00:13.000
Тема лабораторной работы - это создание
динамического веб-сайта для нашего кафе.

00:00:13.000 --> 00:00:20.000
Итак, давайте начнем! Мы начинаем 
с основной страницы курса в AWS Academy.

00:00:20.000 --> 00:00:24.000
Нам необходимо в левом
навигационном меню выбрать Modules.

00:00:24.000 --> 00:00:28.488
Далее необходимо спозиционироваться
на четвертом модуле и здесь

00:00:28.512 --> 00:00:33.000
найти Challenge Lab creating
a dynamic website for the cafe.

00:00:33.000 --> 00:00:38.988
Как только вы окажетесь на основной странице
лабораторной работы, нам необходимо будет

00:00:39.012 --> 00:00:45.000
скрыть окно Terminal, чтобы оно не мешало
ознакомлению с заданием лабораторной работы.

00:00:45.000 --> 00:00:57.000
Согласно лабораторной работе, нам
необходимо создать динамический веб-сайт.

00:00:57.000 --> 00:01:03.988
Этого просят посетители кафе, так как
им было бы удобнее отправлять заказы

00:01:04.012 --> 00:01:11.000
в онлайне и по пути на работу заходить
и забирать свой уже оплаченный заказ.

00:01:11.000 --> 00:01:19.000
В рамках лабораторной работы мы будем
выполнять техническую реализацию бизнес-кейса.

00:01:19.000 --> 00:01:26.000
Если мы говорим про
технические задачи, у нас их 6.

00:01:26.000 --> 00:01:33.000
Что необходимо сделать, это подключиться
к существующему EC2 инстансу через Cloud9.

00:01:33.000 --> 00:01:38.000
Это - отдельный сервис, который предоставляет
IDE для работы над вашими проектами.

00:01:38.000 --> 00:01:44.488
Необходимо подключиться к EC2 инстансу,
посмотреть, что есть на этой машине,

00:01:44.512 --> 00:01:51.000
доступно ли оно через интернет, то
есть проверить настройки инфраструктуры.

00:01:51.000 --> 00:01:56.000
Далее, необходимо будет на этот
EC2 инстанс установить веб-приложение.

00:01:56.000 --> 00:02:01.000
Это веб-приложение специально было
подготовлено для этой лабораторной работы.

00:02:01.000 --> 00:02:06.988
И нам лишь необходимо его установить.
Также мы подключим другой сервис, это

00:02:07.012 --> 00:02:13.000
AWS Systems Manager Parameter Store
для хранения ключей и различных значений.

00:02:13.000 --> 00:02:21.000
Как только мы сделаем все необходимые установки
 и настройки, мы протестируем приложение.

00:02:21.000 --> 00:02:27.000
Если все будет отлично, то перейдем
к следующему шагу и создадим AMI.

00:02:27.000 --> 00:02:33.000
Этот AMI скопируем в другой регион и поднимем
наше веб-приложение уже в другом регионе.

00:02:33.000 --> 00:02:38.000
Таким образом, согласно бизнес-кейсу,
у нас будет два различных environment-а.

00:02:38.000 --> 00:02:41.000
Один для тестирования,
другой для production среды.

00:02:43.000 --> 00:02:50.000
Здесь вы видите изначальное
состояние AWS Management Account.

00:02:50.000 --> 00:02:54.000
У нас есть два региона.
В каждом есть public subnet.

00:02:54.000 --> 00:03:00.000
В первом регионе поднят EC2 инстанс, подключенный
к AWS Cloud9 сервису. Также есть IAM role.

00:03:00.000 --> 00:03:06.000
После завершения лабораторной работы
у нас будет следующая инфраструктура.

00:03:06.000 --> 00:03:11.000
Два приложения на двух регионах, оба
работают и они независимы друг от друга.

00:03:14.000 --> 00:03:18.000
На выполнение этой лабораторной
работы выделяется 60 минут.

00:03:18.000 --> 00:03:25.000
Я напоминаю, что сам счетчик
будет намного больше чем 60 минут.

00:03:25.000 --> 00:03:30.724
Если и этого времени будет недостаточно, вы
можете, не нажимая кнопку End Lab, нажать на

00:03:30.748 --> 00:03:37.000
кнопку Start Lab еще раз, и счетчик перейдет в
исходное состояние и начнется обратный отсчет.

00:03:39.000 --> 00:03:44.089
Также напоминаю, что не все
сервисы и не весь функционал сервисов

00:03:44.113 --> 00:03:50.000
доступен, так как это специальный
временный AWS Account с ограничениями.

00:03:50.000 --> 00:03:53.488
Но все необходимые сервисы и
тот функционал, который нужен в

00:03:53.512 --> 00:03:57.000
рамках лабораторной работы,
они гарантированно будут доступны.

00:03:59.000 --> 00:04:06.022
Необходимо нажать на кнопку Start Lab, увидеть 
сообщение о том, что наш AWS Management Account

00:04:06.046 --> 00:04:13.000
готов, и после этого мы можем нажимать на кнопку
AWS, чтобы перейти в AWS Management Console.

00:04:14.000 --> 00:04:22.000
Мы начинаем первое задание. Необходимо 
найти EC2 Instance и подключиться к нему.

00:04:27.000 --> 00:04:32.117
Самый первый шаг – это перейти на сервис
EC2, посмотреть запущенные инстансы,

00:04:32.141 --> 00:04:38.000
убедиться, что есть инстанс, в названии
которого содержится aws-cloud9-CafeWebServer.

00:04:38.000 --> 00:04:45.000
Если это так, все хорошо, все настроилось
верно, и ваш аккаунт готов к работе.

00:04:45.000 --> 00:04:51.000
Это первая лабораторная работа, в которой
вам необходимо будет отвечать на вопросы.

00:04:52.000 --> 00:04:57.558
Вам необходимо будет нажать на кнопку
Details, в выпадающем меню нажать на кнопку

00:04:57.582 --> 00:05:03.000
Show, и далее будет ссылка с названием
Access the Multiple Choice Questions.

00:05:03.000 --> 00:05:07.988
Откроется отдельная страница в вашем
браузере, и не закрывая эту страницу, вам по

00:05:08.012 --> 00:05:13.000
очереди необходимо отвечать на вопросы
по мере прохождения лабораторной работы.

00:05:13.000 --> 00:05:16.000
Сейчас нам необходимо
ответить на первые четыре вопроса.

00:05:16.000 --> 00:05:25.000
Первый вопрос: Нужно проверить, этот
инстанс находится в public subnet-е или нет.

00:05:25.000 --> 00:05:33.000
Как только вы это проверите, нужно будет
ответить, нажать на кнопку Submit и вернуться назад.

00:05:33.000 --> 00:05:38.000
Вы вернетесь обратно к списку вопросов, и так
дальше продолжайте отвечать на следующие вопросы.

00:05:38.000 --> 00:05:48.000
Если мы говорим про второй вопрос, привязан
ли публичный IPv4 адрес к этому инстансу?

00:05:49.000 --> 00:05:55.000
Третий вопрос: какие inbound TCP
порты открыты для этого инстанса?

00:05:56.000 --> 00:06:03.000
Четвертый вопрос: подключена
ли IAM role к этому EC2 инстансу?

00:06:03.000 --> 00:06:07.488
После того, как вы ответите
на все вопросы, напоминаю, что

00:06:07.512 --> 00:06:12.000
окно с вопросами вы не
закрываете, мы к нему еще вернемся.

00:06:14.000 --> 00:06:19.000
Мы переходим ко второму заданию. Мы будем 
подключаться к IDE на нашем EC2 инстансе.

00:06:19.000 --> 00:06:24.000
Под IDE подразумевается
сервис AWS, называется Cloud9.

00:06:24.000 --> 00:06:28.663
Это специальный сервис, который
предоставляет Integrated Development Environment,

00:06:28.687 --> 00:06:33.000
на котором вы можете разрабатывать
ваше приложение, не выходя из облака.

00:06:33.000 --> 00:06:37.025
Преимуществами является
то, что этот сервис бесплатный,

00:06:37.049 --> 00:06:41.000
вы оплачиваете только за
время работы EC2 инстанса.

00:06:41.000 --> 00:06:47.197
Есть специальная настройка, которая позволяет
автоматически отключать EC2 инстанс и не платить

00:06:47.221 --> 00:06:54.000
за него, когда оно не активно, не используется.
Вам нет необходимости постоянно ее отключать.

00:06:54.000 --> 00:06:58.779
Как только вы подключаетесь, отключенный
инстанс автоматически поднимается,

00:06:58.803 --> 00:07:03.000
это занимает не более двух минут
и вся среда разработки готова.

00:07:05.000 --> 00:07:15.470
В Cloud9 вы можете позволить себе работать
на более мощной машине и платить за это

00:07:15.494 --> 00:07:27.000
намного меньше денег, нежели если бы вы
покупали дорогостоящее физическое оборудование.

00:07:27.000 --> 00:07:33.988
Сейчас с Cloud9 достаточно купить
самый простой ноутбук с хорошим выходом

00:07:34.012 --> 00:07:41.000
в интернет и так, чтобы работа с
веб-браузером не тормозила работу системы.

00:07:41.000 --> 00:07:46.245
После того, как вы успешно
подключитесь к IDE, то там подключаются

00:07:46.269 --> 00:07:52.000
мощности конкретной EC2 машины и
вы ее можете использовать на полную.

00:07:52.000 --> 00:08:03.000
В рамках задания нам сейчас нужно перейти
в сервис Cloud9. Как это делать вы знаете.

00:08:03.000 --> 00:08:07.000
Обратите внимание, что
отображается список environment-ов.

00:08:07.000 --> 00:08:11.000
Там есть одна строчка,
называется CafeWebServer.

00:08:11.000 --> 00:08:17.000
И также я бы хотел отметить, что оно
совпадает с названием EC2 инстанса.

00:08:17.000 --> 00:08:22.000
Это говорит о том, что
они связаны между собой.

00:08:22.000 --> 00:08:30.777
Если мы откроем наш IDE, нажав на
кнопку Open IDE, оно откроется и вы

00:08:30.801 --> 00:08:41.000
увидите простейший UI, который
самодостаточен и помогает вам удобно работать.

00:08:41.000 --> 00:08:46.488
Есть куча настроек, которые
помогут вам индивидуально под себя ее

00:08:46.512 --> 00:08:52.000
настроить, но это уже во время
более тесной работы с этим сервисом.

00:08:52.000 --> 00:08:58.615
На начальном этапе эти сложные настройки
мы производить не будем, а в большинстве

00:08:58.639 --> 00:09:06.000
случаев будем работать с настройками по умолчанию.
Интерфейс IDE состоит из трех частей.

00:09:06.000 --> 00:09:11.000
В нижней правой части есть bash terminal,
можно открыть несколько отдельных окон.

00:09:11.000 --> 00:09:18.370
Далее в левой части у нас file browser,
отображается все файлы и папки в соответствующей

00:09:18.394 --> 00:09:25.000
структуре на этой EC2 машине. Оно смотрит
 на путь /home/ec2-user/environment.

00:09:25.000 --> 00:09:31.000
И в верхней правой части это
основное окно, расположен file editor.

00:09:31.000 --> 00:09:40.400
Вы можете проверить, как оно работает,
два раза нажав в файловом браузере на файл

00:09:40.424 --> 00:09:51.000
README.md, если оно не открылось автоматически.
На этом слайде вы видите скриншот Cloud9.

00:09:51.000 --> 00:10:00.000
Во время выполнения лабораторной работы будет
возможность ближе познакомиться с этим сервисом.

00:10:00.000 --> 00:10:08.000
Следующее задание. Нам необходимо проверить,
что ПО для работы веб-сайта настроено правильно.

00:10:08.000 --> 00:10:11.488
Также убедиться, что мы
можем добраться из интернета до

00:10:11.512 --> 00:10:15.000
нашего веб-сервера, то есть
оно доступно для интернета.

00:10:15.000 --> 00:10:22.000
Первым делом необходимо проверить операционную
систему. Для этого ввести команду на 10-м шаге.

00:10:22.000 --> 00:10:27.000
Вы увидите, что это Amazon Linux
Instance, что является аналогом Red Hat.

00:10:27.000 --> 00:10:37.677
Red Hat это достаточно популярный выбор крупных
IT-компаний, оно предоставляет частые обновления

00:10:37.701 --> 00:10:49.000
по безопасности, имеет достаточно продвинутый
функционал и является стандартным выбором.

00:10:49.000 --> 00:10:55.488
Когда мы говорим про AWS, то Amazon Linux
опережает решение Red Hat, так как является

00:10:55.512 --> 00:11:02.000
аналогом, дополнительно за нее оплачивать
не нужно и она нативно интегрирована с AWS.

00:11:02.000 --> 00:11:06.488
Поэтому при работе с AWS
рекомендуется использовать Amazon Linux.

00:11:06.512 --> 00:11:11.000
У нее есть несколько версий.
На текущий момент последняя версия вторая.

00:11:17.000 --> 00:11:24.155
На 11-м шаге нам необходимо проверить,
работает ли веб-сервер, база данных и посмотреть

00:11:24.179 --> 00:11:32.000
установлен ли язык программирования PHP. Для 
этого запустим следующие команды и проверим.

00:11:34.000 --> 00:11:40.488
На 12-м шаге даются команды,
которые позволяют добавить

00:11:40.512 --> 00:11:47.000
в автозагрузку веб-сервер и
MySQL, также их стартовать.

00:11:47.000 --> 00:11:58.000
После того, как мы их стартуем, можем
запустить команду для проверки статуса.

00:11:58.000 --> 00:12:06.824
Следующим шагом нам необходимо предоставить
 веб-серверу файлы, которые находятся

00:12:06.848 --> 00:12:15.000
в домашней директории Cloud9.
Для этого мы ведем следующий набор команд.

00:12:15.000 --> 00:12:27.000
Фактически мы создаем симлинк на
/var/www/ из /home/ec2-user/environment пути.

00:12:27.000 --> 00:12:35.000
Также необходимо выдать соответствующие права для
ec2-user, чтобы оно могло работать с этими файлами.

00:12:35.000 --> 00:12:41.988
Теперь нам необходимо
спозиционироваться в файловой директории

00:12:42.012 --> 00:12:49.000
на папку HTML, нажать правой
кнопкой мыши и создать новый файл.

00:12:49.000 --> 00:12:54.000
Мы создаем простейшую HTML
страницу следующего содержания.

00:12:54.000 --> 00:12:59.000
После того, как вы ее наполните,
необходимо будет сохранить и закрыть.

00:12:59.000 --> 00:13:03.000
Сохранить нужно будет
файл под названием index.html.

00:13:03.000 --> 00:13:10.000
На 15-м шаге вам необходимо будет проверить
доступ из интернета до вашего веб-сервера.

00:13:10.000 --> 00:13:14.563
Так как мы ее включили и мы
создали index.html в нужном месте,

00:13:14.587 --> 00:13:19.000
то эта страница должна
отображаться при прямом обращении.

00:13:19.000 --> 00:13:29.000
На 15-м шаге необходимо самостоятельно проверить
нужные места и убедиться в том, что интернет есть.

00:13:29.000 --> 00:13:38.000
Если интернета нет, имеется в виду доступ из
интернета, то произвести соответствующие действия.

00:13:40.000 --> 00:13:45.000
Далее будут две подсказки, если
у вас не получилось это сделать.

00:13:45.000 --> 00:13:48.000
Я рекомендую поставить паузу,
попробовать делать самостоятельно.

00:13:48.000 --> 00:13:56.000
Если не получилось, вернуться к
этому видео и посмотреть подсказки.

00:13:56.000 --> 00:14:04.000
Итак, рекомендуется проверить есть
ли публичный IP-адрес у EC2 инстанса.

00:14:04.000 --> 00:14:14.629
Вторая подсказка, необходимо проверить,
есть ли соответствующее правило в security группе,

00:14:14.653 --> 00:14:26.000
привязанной к EC2 инстансу для HTTP трафика,
TCP 80-ый порт. Если нет, то необходимо добавить.

00:14:26.000 --> 00:14:31.000
Мы с вами переходим ко второй
части нашей лабораторной работы.

00:14:31.000 --> 00:14:37.988
В рамках этой части необходимо скачать и
установить динамическое веб-приложение на EC2

00:14:38.012 --> 00:14:45.000
инстанс и произвести все необходимые настройки.
Приложение уже за нас написано, готово.

00:14:45.000 --> 00:14:49.000
Нам лишь необходимо проделать
ту часть, которая относится к AWS.

00:14:49.000 --> 00:14:53.783
Итак, давайте начнем. На 16-ом шаге 
нам необходимо будет запустить этот

00:14:53.807 --> 00:14:59.000
список команд для того, чтобы скачать
архивы и эти архивы разархивировать.

00:14:59.000 --> 00:15:04.529
Далее нам необходимо будет
содержание папки cafe скопировать по пути

00:15:04.553 --> 00:15:10.000
var/www/html для того, чтобы она
стала доступна для веб-сервера.

00:15:11.000 --> 00:15:17.000
На 18-ом шаге мы чуть-чуть подробнее
изучим, как устроено приложение.

00:15:17.000 --> 00:15:22.000
Для этого давайте откроем
в папке cafe index.php.

00:15:22.000 --> 00:15:29.000
Как только вы откроете, вы
увидите, что оно содержит HTML код.

00:15:29.000 --> 00:15:37.000
Также видите, что есть некоторые вставки. Это 
как раз динамическая часть, которая отрабатывает.

00:15:37.000 --> 00:15:45.000
Например, на 18-ой строчке,
запускается файл getAppParameters.php.

00:15:45.000 --> 00:15:54.000
Если открыть этот файл, вы увидите,
на третьей линии используется AWSSDK.

00:15:54.000 --> 00:16:07.000
На линиях с 10-й по 33-й мы настраиваем клиент ssm
сервиса и извлекаем 7 параметров из Systems Manager.

00:16:07.000 --> 00:16:16.000
Эти параметры пока еще там не находятся,
так как на следующих шагах мы их создадим.

00:16:18.000 --> 00:16:22.988
Для того, чтобы настроить эти
параметры, необходимо перейти

00:16:23.012 --> 00:16:28.000
в папку setup и запустить
скрипт /set-app-parameters.sh.

00:16:28.000 --> 00:16:34.000
Как только вы ее запустите,
создадутся параметры в Parameter Store.

00:16:34.000 --> 00:16:38.488
Давайте проверим, действительно
ли все правильно сработало и

00:16:38.512 --> 00:16:43.000
в AWS Management Console
перейдем в сервис Systems Manager.

00:16:43.000 --> 00:16:47.521
Как только откроется главная страница
сервиса Systems Manager, в левом

00:16:47.545 --> 00:16:52.000
навигационном меню нам необходимо
будет перейти в Parameter Store.

00:16:54.000 --> 00:17:02.000
Откроется список всех параметров в этом AWS аккаунте
в конкретном регионе и вы увидите 7 параметров.

00:17:02.000 --> 00:17:05.988
Это те параметры, которые
используются PHP приложением

00:17:06.012 --> 00:17:10.000
для работы динамической
части нашего веб-приложения.

00:17:13.000 --> 00:17:18.095
Следующим шагом мы будем
настраивать нашу базу данных, поэтому нам

00:17:18.119 --> 00:17:24.000
необходимо сейчас открыть параметр
/cafe/dbPassword и скопировать пароль.

00:17:24.000 --> 00:17:32.000
Мы возвращаемся обратно в IDE и здесь нам
необходимо сконфигурировать MySQL базу данных.

00:17:32.000 --> 00:17:41.000
Давайте перейдем в папку db и запустим следующий
скрипты set-root-password.sh и create-db.sh.

00:17:41.000 --> 00:17:48.287
Как только вы это проделаете,
необходимо будет в bash terminal

00:17:48.311 --> 00:17:55.000
проверить, действительно
ли все правильно настроилось.

00:17:55.000 --> 00:18:01.000
Запускаем следующий параметр и
подключаемся к mysql базе данных.

00:18:01.000 --> 00:18:05.988
Как только мы подключились, можем
посмотреть, какие базы настроены,

00:18:06.012 --> 00:18:11.000
какие таблицы есть и попробуем
посмотреть содержание одной из таблиц.

00:18:11.000 --> 00:18:22.000
Далее на 24 шаге предлагается обновить конфигурацию
временной зоны, используя следующие команды.

00:18:22.000 --> 00:18:28.095
Мы произвели все необходимые
настройки, теперь на 25 шаге рекомендуется

00:18:28.119 --> 00:18:35.000
использовать публичный IP адрес нашего
веб-сервера и попробовать его открыть.

00:18:35.000 --> 00:18:43.000
Необходимо также
добавить в путь /cafe.

00:18:43.000 --> 00:18:49.542
Мы видим, что страница полностью
не загружается и сейчас будем

00:18:49.566 --> 00:18:56.000
делать troubleshooting и
понимать, почему она не работает.

00:18:56.000 --> 00:19:02.488
На 26 шаге нам необходимо
разрешить проблему, которая

00:19:02.512 --> 00:19:09.000
была искусственно создана в
рамках лабораторной работы.

00:19:09.000 --> 00:19:14.000
Здесь предоставляется
список того, что точно работает.

00:19:14.000 --> 00:19:22.568
Это сам веб-сервер, так как мы можем
обратиться по прямому IP адресу через интернет.

00:19:22.592 --> 00:19:31.988
Также mysql баз данных работает и
содержит все необходимые таблицы и данные.

00:19:32.012 --> 00:19:40.576
Рекомендуется сейчас остановить видео и
попытаться подумать, где же может быть проблема.

00:19:40.600 --> 00:19:50.000
Далее на следующем шаге мы раскроем подсказки и
их разберем. Итак, что же рекомендуется проверить?

00:19:50.000 --> 00:19:58.000
Проблема на самом деле не на стороне PHP, которое
предварительно было написано, а проблема в правах.

00:19:58.000 --> 00:20:07.488
Во второй подсказке нам
говорится о том, что не используем

00:20:07.512 --> 00:20:17.000
ли мы какие-либо другие сервисы
в рамках нашего приложения.

00:20:17.000 --> 00:20:21.564
В третьей подсказке говорится
о том, что нам необходимо

00:20:21.588 --> 00:20:27.000
открыть IAM, там найти роль
CafeRole и посмотреть на ее права.

00:20:27.000 --> 00:20:38.000
Если вы посмотрите на эти права, обратите внимание,
что эти права пригодились бы нашему EC2 инстансу.

00:20:38.000 --> 00:20:47.000
Соответственно, мы могли бы выдать эти права
для корректной работы нашего веб-приложения.

00:20:47.000 --> 00:20:56.340
Последней подсказкой дается
само решение, необходимо в AWS

00:20:56.364 --> 00:21:08.000
Management Console для нашего
EC2 инстанса привязать к нему эту роль.

00:21:08.000 --> 00:21:14.008
После того, как мы подключим роль к
EC2 инстансу, мы можем попробовать

00:21:14.032 --> 00:21:21.000
обратиться повторно по пути IP-адрес
веб-сервера/cafe. Должно все загрузиться.

00:21:21.000 --> 00:21:25.219
Если все загрузилось, то отлично,
я вас поздравляю, вы произвели

00:21:25.243 --> 00:21:30.000
корректную настройку не только
приложения, но и инфраструктуры в AWS.

00:21:30.000 --> 00:21:41.000
Если же что-то не работает, рекомендуется
воспользоваться оцениванием лабораторной работы.

00:21:41.000 --> 00:21:48.073
Вы можете проделывать это бесконечное
количество раз и во время процедуры оценивания

00:21:48.097 --> 00:21:55.000
вам дается разбивка по каждому заданию,
где вы баллы получили, где не получили.

00:21:55.000 --> 00:22:09.000
Используя эту информацию, вы
можете понять, где вы допустили ошибку.

00:22:09.000 --> 00:22:12.233
Последнее задание в рамках
второй части лабораторной работы.

00:22:12.257 --> 00:22:16.000
Нам необходимо протестировать
это веб-приложение.

00:22:16.000 --> 00:22:23.996
Для этого переходим по ссылке,
которая указана на 27 шаге,

00:22:24.020 --> 00:22:33.000
выбрать пункт Menu и выбрав
несколько товаров, оставить заказ.

00:22:33.000 --> 00:22:39.000
Далее перейти на вкладку Order History и
убедиться в том, что ваш заказ отображается.

00:22:39.000 --> 00:22:43.655
Если это так, то я вас поздравляю, все
отлично, приложение работает, вы все корректно

00:22:43.679 --> 00:22:48.000
сделали и мы с вами готовы переходить
к следующей части лабораторной работы.

00:22:48.000 --> 00:22:56.000
Мы с вами начинаем третью
часть лабораторной работы.

00:22:56.000 --> 00:23:03.000
Здесь мы будем создавать новую production
среду нашего веб-сайта в другом AWS регионе.

00:23:03.000 --> 00:23:09.216
Таким образом, у нас будут задействованы
два AWS региона, на каждом будет инстанс

00:23:09.240 --> 00:23:16.000
нашего application и в первом регионе это
будет Dev среда, а вторая будет Prod среда.

00:23:16.000 --> 00:23:23.488
В рамках нашего бизнес-кейса, после создания
веб-сайта, София, ее родители и все клиенты

00:23:23.512 --> 00:23:31.000
были довольны тем, что появилась динамичность
и можно теперь оставлять заказы на сайте.

00:23:31.000 --> 00:23:37.316
Теперь родители Марта и Фрэнк попросили
Софию создать второй веб-сайт, чтобы

00:23:37.340 --> 00:23:43.657
можно было не тревожа и не пугая
пользователей вносить изменения, то есть они

00:23:43.681 --> 00:23:50.328
подразумевали Dev environment и другой
веб-сайт, чтобы он был доступным всегда

00:23:50.352 --> 00:23:57.000
для всех клиентов и в которых не было
ошибок, это как раз таки production среда.

00:23:57.000 --> 00:24:02.488
София с ее друзьями и знакомыми
обговорили план действий

00:24:02.512 --> 00:24:08.000
и решили в другом AWS регионе
создать такое же приложение.

00:24:08.000 --> 00:24:13.757
Итак, мы начинаем выполнение этой части.
Первым делом нам необходимо создать

00:24:13.781 --> 00:24:20.000
SSH ключи в EC2 Instance, чтобы при
необходимости мы могли к нему подключаться.

00:24:20.000 --> 00:24:24.000
Для этого необходимо будет
запустить команды на 28 шаге.

00:24:24.000 --> 00:24:33.618
Далее мы переходим на страницу AWS Management
Console в сервисе EC2, на нужном нам инстансе,

00:24:33.642 --> 00:24:44.000
нажмем кнопку Actions, далее выберем опцию
Images and Templates и нажмем на кнопку Create Image.

00:24:44.000 --> 00:24:50.000
Далее необходимо не закрывая эту страницу,
ответить на следующий набор вопросов.

00:24:50.000 --> 00:24:56.204
Это пятый, шестой и седьмой.
Я надеюсь вы не закрыли страницу с тестовыми

00:24:56.228 --> 00:25:02.000
вопросами, поэтому давайте
пройдемся по тому, что нас спрашивают.

00:25:02.000 --> 00:25:14.000
На пятом вопросе спрашивают, есть ли необходимость
перезагружать инстанс, когда вы создаете от нее AMI.

00:25:14.000 --> 00:25:18.581
Шестой вопрос звучит следующим образом.
Какие признаки мы можем

00:25:18.605 --> 00:25:24.000
изменять в root volume, когда мы
создаем AMI из существующего инстанса.

00:25:24.000 --> 00:25:32.474
Седьмой вопрос, можем ли мы
добавлять большее количество volume для

00:25:32.498 --> 00:25:42.000
AMI, когда вы создаете AMI из инстанса
с одним единственным root volume.

00:25:42.000 --> 00:25:48.896
После того как вы ответили на все
вопросы, не закрывайте страницу и нам

00:25:48.920 --> 00:25:57.000
необходимо перейти обратно в AWS
Management Console и продолжить создание Image.

00:25:57.000 --> 00:26:04.000
Как Image name укажем CafeServer
и нажмем на кнопку Create Image.

00:26:04.000 --> 00:26:09.000
Нас перенаправит на
страницу со всеми AMI.

00:26:09.000 --> 00:26:14.000
Необходимо подождать некоторое
время, пока ее статус не станет available.

00:26:14.000 --> 00:26:21.373
Это занимает порядка двух минут,
поэтому вы можете периодически обновлять

00:26:21.397 --> 00:26:30.000
страницу и как только она станет available,
мы можем переходить к следующему шагу.

00:26:30.000 --> 00:26:37.211
Следующая задача, этот AMI создать в другом AWS
регионе. Вам необходимо самостоятельно попробовать

00:26:37.235 --> 00:26:44.000
найти решение, если нет, на следующем слайде
будут подсказки, которые помогут вам в этом.

00:26:44.000 --> 00:26:50.000
Рекомендуется остановить видео и
попробовать найти решение самостоятельно.

00:26:50.000 --> 00:26:57.988
Отлично, мы переходим к следующему слайду. У нас
есть три подсказки. Первая подсказка говорит о том,

00:26:58.012 --> 00:27:06.000
что мы можем скопировать AMI ID нового созданного
AMI и попробовать его поискать в us-west-2 регионе.

00:27:06.000 --> 00:27:10.000
Вторая подсказка - это попробовать
посмотреть на уровень аккаунта.

00:27:10.000 --> 00:27:17.488
И третья подсказка - это само решение, необходимо
вернуться в основной регион, выбрать нужный AMI и в

00:27:17.512 --> 00:27:25.000
настройках Actions выбрать соответствующую опцию,
которая позволяет скопировать AMI в другой регион.

00:27:25.000 --> 00:27:33.000
В нашем случае это US West или Oregon. Создание
AMI в другом регионе занимает порядка пяти минут.

00:27:33.000 --> 00:27:38.488
После того как вы запустили
создание AMI, вы можете переключить

00:27:38.512 --> 00:27:44.000
регион и там ожидать, когда
она перейдет в состояние available.

00:27:49.000 --> 00:27:56.000
После того как AMI будет готов, мы будем создавать
в новом регионе инстанс со следующими настройками.

00:27:56.000 --> 00:28:02.000
Как Region укажем Oregon,
как Instance size выберем t2.small.

00:28:02.000 --> 00:28:08.000
В настройках Network выберем
Lab VPC Region 2 и Public subnet.

00:28:08.000 --> 00:28:13.039
Как IAM Role выберем CafeRole.
Здесь я хотел бы обратить внимание,

00:28:13.063 --> 00:28:18.102
что IAM у нас является глобальным
сервисом, поэтому все роли, все

00:28:18.126 --> 00:28:23.551
пользователи и группы, которые вы
создаете, они доступны глобально и

00:28:23.575 --> 00:28:29.000
могут быть использованы с любого
AWS региона в рамках вашего аккаунта.

00:28:29.000 --> 00:28:36.000
Далее настроим теги, как Key указан
Name, как Value укажем ProdCafeServer.

00:28:36.000 --> 00:28:41.111
Чуть ниже в настройках security
группы нам необходимо создать новую и

00:28:41.135 --> 00:28:47.000
создать rule для 22 порта, чтобы можно
было подключаться со всего интернета.

00:28:47.000 --> 00:28:52.000
Аналогичные настройки
необходимо произвести для 80 порта.

00:28:52.000 --> 00:29:00.035
Там где просят настроить SSH ключи, мы
можем выбрать опцию Proceed without a key pair,

00:29:00.059 --> 00:29:08.000
так как наши SSH ключи уже находятся
внутри AMI, их настраивать нет необходимости.

00:29:08.000 --> 00:29:15.552
Другой момент, который хотелось бы
отметить, так как SSH ключи находятся

00:29:15.576 --> 00:29:22.701
в AMI, любой инстанс созданный в
любом AWS регионе будет содержать

00:29:22.725 --> 00:29:30.014
себе те же SSH ключи, а это значит,
что к ним вы можете подключаться

00:29:30.038 --> 00:29:37.000
с одним и тем же приватным
ключом, который у вас есть локально.

00:29:37.000 --> 00:29:49.000
Пока инстанс создается, нам необходимо
создать параметры в systems manager.

00:29:49.000 --> 00:30:01.000
Для этого, как только появится Public DNS значение,
необходимо ее скопировать и вернуться в IDE.

00:30:01.000 --> 00:30:11.000
Там необходимо открыть set-app-parameters.sh
скрипт и произвести некоторые замены.

00:30:11.000 --> 00:30:16.988
На 12 линии необходимо
поменять название региона и

00:30:17.012 --> 00:30:23.000
на 18 строчке необходимо вставить
public DNS от нового инстанса.

00:30:23.000 --> 00:30:27.488
Здесь вы видите пример, как
оно должно быть заполнено.

00:30:27.512 --> 00:30:32.000
Как только вы это сделаете,
необходимо запустить скрипт.

00:30:32.000 --> 00:30:37.000
Если же возникают проблемы, то рекомендуется 
запустить следующий набор команд.

00:30:37.000 --> 00:30:47.232
Обратите внимание, что мы
использовали скрипт в основном регионе

00:30:47.256 --> 00:30:57.000
и создали параметры в
Parameter store для другого региона.

00:30:57.000 --> 00:31:13.000
Теперь нам необходимо проверить, что новый
инстанс нашего приложения работает корректно.

00:31:13.000 --> 00:31:17.488
Для этого необходимо в регионе
Oregon найти наш EC2 инстанс,

00:31:17.512 --> 00:31:22.000
скопировать публичный IP адрес
и попробовать по нему перейти.

00:31:22.000 --> 00:31:27.000
Вы должны увидеть сообщение
Hello from the cafe web server!

00:31:27.000 --> 00:31:35.000
Далее, если мы к IP адресу добавим /cafe, мы
должны оказаться на динамическом веб-сайте.

00:31:35.000 --> 00:31:42.000
Если все отображается корректно, хорошо. Давайте
перейдем на вкладку Menu и попробуем что-то заказать.

00:31:42.000 --> 00:31:46.488
Как только вы заказали, попробуйте
перейти на страницу с историей

00:31:46.512 --> 00:31:51.000
заказов и убедиться, что
действительно все корректно работает.

00:31:51.000 --> 00:31:57.651
Если где-то что-то работает не совсем
корректно, вы всегда можете запустить систему

00:31:57.675 --> 00:32:04.000
оценивания и получить некоторые
подсказки, где вы выполнили задание неверно.

00:32:04.000 --> 00:32:14.000
Также вы можете подключиться напрямую к инстансу
в регионе Oregon, используя следующую команду.

00:32:14.000 --> 00:32:28.000
Эту команду необходимо вводить в IDE Cloud9 в
bash terminal. На этом лаборторная работа завершена.

00:32:28.000 --> 00:32:33.000
Согласно бизнес-кейсу
теперь София герой этого кафе.

00:32:33.000 --> 00:32:41.200
Она добавила тот необходимый функционал, который
так был нужен клиентам, теперь у них два веб-сайта.

00:32:41.200 --> 00:32:49.200
Она объяснила своим родителям некоторые технические
моменты, чтобы они были в курсе как что работает.

00:32:49.200 --> 00:32:54.763
На текущий момент у семьи во
владении два веб-сайта, один из

00:32:54.787 --> 00:33:01.200
которых является Dev environment,
а вторая Production environment.

00:33:01.200 --> 00:33:09.275
На этом завершаем выполнение лаборторной работы.
Нам необходимо нажать на кнопку Submit, далее

00:33:09.299 --> 00:33:17.200
подтвердить ее и через некоторое время
отобразиться вкладка Grades с деталями оценивания.

00:33:17.200 --> 00:33:22.188
Если вы получили максимальный балл, отлично!
Хороший результат. Если же нет,

00:33:22.212 --> 00:33:27.200
вы можете посмотреть, где вы допустили
ошибку и попробовать ее исправить.

00:33:27.200 --> 00:33:36.200
После этого вы можете вернуться обратно на эту
страницу и запустить систему оценивания еще раз.

00:33:36.200 --> 00:33:40.688
Также обращаю внимание, что мы
должны корректно завершить и выйти

00:33:40.712 --> 00:33:45.200
с AWS Management Console, а
также завершить лаборторную работу.

00:33:45.200 --> 00:33:51.200
Для этого необходимо нажать на кнопку End lab, далее
подтвердить, что мы завершаем лаборторную работу.

00:33:51.200 --> 00:33:59.802
И как только вы увидите сообщение,
что процесс удаления инициирован,

00:33:59.826 --> 00:34:09.200
то вы можете закрыть окно лаборторной
работы и страницу в веб-браузере.

00:34:09.200 --> 00:34:17.349
На этом мы завершили лаборторную работу.
Надеюсь, вы получили более полное

00:34:17.373 --> 00:34:27.200
представление о работе с AWS. Если будут
вопросы, пишите, постараемся на все ответить.

00:34:27.200 --> 00:34:32.200
Спасибо за внимание!
Увидимся на следующих наших активностях!
 Добрый день, уважаемые студенты! Я рад вас всех видеть на очередной сессии обзора лабораторной работы. Тема сегодняшней лабораторной работы – это создание VPC Peering Connection. Итак, давайте начнем! Начинаем мы лабораторную работу с основной страницы курса в AWS Academy. Необходимо воспользоваться навигационным меню слева и перейти в модули. Нас интересует седьмой модуль – Connecting Networks. И здесь в списке активностей вы можете увидеть Guided Lab Creating a VPC Peering Connection. Как только вы перейдете на основную страницу лабораторной работы, здесь необходимо будет оставить окно readme и окно терминала можно закрыть. Сегодня в рамках лабораторной работы мы с вами научимся создавать VPC Peering Connection. Очень часто перед нами будет стоять задача обмена данными между несколькими VPC. Peering Connection как раз таки позволяет связать напрямую две VPC и настроить обмен данными. В рамках этой лабораторной работы мы создадим VPC Peering Connection и настроим root тейблы в наших VPC. В конце лабораторной работы мы получим следующую диаграмму. Вы можете видеть, что есть у нас Lab VPC, в котором работает приложение и нам необходимо из инстенса, находящегося в паблик сабнете обратиться в shared VPC, а именно в private сабнет, на котором находится база данных. Приложение для корректной работы. Для приложения для корректной работы необходимо извлекать некоторые данные из этой базы данных и передавать пользователям. Всего на выполнение этой лабораторной работы рекомендуется использовать порядка 20 минут. Напоминаю, что вы можете продлить время лабораторной работы и это никак не отразится на вашей оценке. Для этого необходимо не нажимая кнопку end lab, нажать на кнопку start lab и счетчик он начнет отрабатывать снова. Также напоминаю, что мы работаем в временно созданном AWS аккаунте и так как оно является песочницей, не все AWS сервисы на нем доступны, но те сервисы, которые должны работать в рамках лабораторной работы, он гарантированно будет доступен. Для того, чтобы начать лабораторную работу, первым делом необходимо нажать на кнопку start lab, дождаться, что наша песочница, временный AWS аккаунт будет готов. После этого мы можем путем нажатия на кнопку AWS переходить в AWS Management Console и выполнять нашу лабораторную работу. Мы с вами начинаем первое задание и здесь мы будем создавать Peering Connection. Что такое Peering Connection? Мы с вами проходили на лекционном занятии. Здесь хочу дополнительно напомнить, что мы можем соединять между собой VPC, находящиеся в разных регионах, а также в разных аккаунтах. В рамках лабораторной работы мы будем работать с Lab VPC и Shared VPC. Также внутри Lab VPC находится EC2 Instance и он будет, он будет как раз таки подключаться к базе данных из Shared VPC. Здесь вы можете видеть диаграмму, как у нас все на текущий момент настроено. Для создания Peering Connection необходимо в AWS Management Console воспользоваться строкой поиска сервисов либо из списка сервисов найти VPC. Далее в открывшейся странице, на главной странице VPC необходимо воспользоваться навигационным меню слева и выбрать опцию Peering Connections. Когда вы ее откроете, скорее всего не будет ни одного Peering Connection, нам необходимо создать новый. Верху справа будет кнопка Create Peering Connection, нас перенаправит на страницу ввода входных данных и здесь необходимо как Peering Connection Name так указать Lab Peer как VPC Requestor, то есть какой VPC запрашивает Peering Connection указываем Lab VPC и как VPC Acceptor указываем Shared VPC. Если в нашем случае например Shared VPC находилась бы в другом регионе или в другом AWS аккаунте, то в первом случае необходимо было переключиться на соответствующий регион и перейти в сервис VPC, а в случае с другим аккаунтом необходимо было бы переподключиться под другим аккаунтом и соответственно там найти приглашение, которое необходимо принять. Окей, на этой странице мы закончили, нам необходимо нажать на кнопку Create Peering Connection. В нашем случае в рамках лабораторной работы все упрощено и оба VPC находятся в одном регионе в одном аккаунте, поэтому нам достаточно из списка выбрать Lab Peer, далее вверху справа нажать на кнопку Actions и в выпадающем меню выбрать опцию Accept Request и подтвердить, что мы принимаем приглашение. Судя по всему, VPC Peering Connection ресурс успешно создается и связывает между собой оба VPC, но обратите внимание, что этого недостаточно, вторым шагом необходимо настроить road tables, чтобы внутри VPC оно понимало, куда направлять трафик. Теперь мы с вами переходим ко второй части нашей лабораторной работы и будем как раз таки настраивать наши road tables. На этом слайде вы видите конечное состояние, как должно быть настроение road tables в обоих VPC. Давайте пройдемся по каждому из них. Первый слева это Lab VPC, он у нас является публично доступным, есть выход в интернет, поэтому как третий у нас указан обозначение интернета и как target интернет gateway. Как первый у нас стоит дефолтовый рот, указывается сидроблок этого VPC и как target local, то есть это тот рот, который позволяет ресурсам внутри этого VPC общаться между собой. Теперь нам необходимо здесь добавить дополнительный road, вы видите как destination указан shared VPC, то есть сидроблок shared VPC, а как target указан peering connection ID. Таким образом, если у нас будет трафик, который направляется к любому IP адресу в сидроблоке shared VPC, он этот трафик направляет на peering connection, а peering connection соответственно направляет этот трафик дальше на shared VPC. Теперь если мы посмотрим справа на road table shared VPC, то здесь первым мы также видим дефолтовый рот, когда как destination указывается сидроблок этого VPC и как target указывается local. Это нужно напоминаю для того, чтобы ресурсы в этом VPC могли между собой общаться. Здесь нам необходимо добавить дополнительный road, где destination будет сидроблок lab VPC, а и как target будет peering connection ID. Как только мы настроим оба road table, то мы фактически все необходимые шаги выполним и обмен данными станет возможным. Для того, чтобы это проделать, нам необходимо воспользоваться навигационным меню слева и выбрать пункт road tables. Там уже мы увидим созданные road tables, нам необходимо выбрать lab public road table. Снизу страницы отобразятся несколько вкладок. Нас интересует вкладка roads. Мы увидим, что здесь есть road дефолтовый и road для выхода в интернет. Теперь нам необходимо нажать на кнопку edit roads и открыть список ротов для редактирования. На этой странице необходимо будет нажать на кнопку add road. В destination мы указываем сидроблок shared VPC и как target указываем peering connection. После этого необходимо сохранить изменения и дальше из списка road tables выбрать следующий road table это shared VPC road table. Здесь нам необходимо сделать фактически те же изменения, то есть во вкладках выбрать вкладку roads, далее нажать на кнопку edit roads. В открывшейся странице с рутами этого road table необходимо нажать на кнопку add road, далее как destination мы указываем сидроблок lab VPC и как target указываем peering connection, после чего сохраняем изменения. Теперь мы с вами переходим к последнему заданию в рамках лабораторной работы. Нам необходимо протестировать все внесенные изменения в аккаунты AWS. Для этого необходимо в строке поиска сервисов начать вводить EC2 либо из списка сервисов ее найти и перейти. Как только мы окажемся на основной странице сервиса EC2 необходимо воспользоваться навигационным меню слева и выбрать пункт instances. Там будет один единственный instance, необходимо в метаданах этого instance скопировать его публичный IP адрес. Далее необходимо будет открыть новую вкладку в браузере и вбить это значение. Откроется приложение и вы увидите следующее сообщение, что необходимо сконфигурировать настройки базы данных, чтобы приложение начало работать. Давайте это сделаем. Необходимо будет на странице приложения перейти во вкладку settings. Здесь необходимо будет заполнить все поля. Как endpoint необходимо указать endpoint базы данных. Это мы можем сделать двумя кутями. Первый вариант это перейти на сервис RDS, далее найти instance RDS и в деталях этого instance найти значение endpoint, скопировать и вставить в это поле. Другой вариант, он более упрощенный. В рамках нашей лабораторной работы необходимо вернуться на главную страницу лабораторной работы. Здесь нажать на кнопку details. Далее возле AWS будет кнопка show. Как только вы на нее нажмете отобразится информация, в том числе и endpoint. Необходимо будет скопировать это значение и вставить в поле в приложении. Далее как database указываем inventory, как username admin и как password labpassword. После чего нажимаем на кнопку save. Как только вы нажмете на кнопку save, вас направят на другую страницу и вы должны увидеть записи из базы данных. Если вы это увидели, значит мы все изменения произвели корректно. Peering connection успешно был настроен. Напоминаю, что на стороне shared VPC нет выхода в интернет и единственный вариант добраться до данных в базе данных это через VPC peering connection. Отлично. На этом мы с вами завершили основную часть лабораторной работы. Теперь нам необходимо на основной странице лабораторной работы нажать на кнопку submit. Запустится скрипт автооценивания и вы увидите свои оценки. Если вы набрали максимальный балл, то отлично, я вас поздравляю, все задания были выполнены корректно. Если же балл не максимальный, вы можете посмотреть детали, где баллов не хватило и попробовать выполнить это задание еще раз. Также обращаю внимание, что необходимо будет корректно выйти со всех систем. В первую очередь это касается AWS Management консоли. Далее также необходимо будет завершить лабораторную работу, чтобы у вас не было в будущем проблем с открытием следующих лабораторных работ. На этом мы завершаем разбор лабораторной работы. Спасибо за внимание. Увидимся с вами на следующих наших активностях.

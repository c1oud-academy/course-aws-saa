Добрый день, уважаемые студенты! Рад вас видеть на очередной сессии обзора лабораторной работы. Тема сегодняшней лабораторной работы – создание VPC Peering Connection. Итак, давайте начнем! Начинаем мы лабораторную работу с основной страницы курса в AWS Academy. Необходимо воспользоваться навигационным меню слева и перейти в Modules. Нас интересует седьмой модуль – Connecting Networks. И здесь в списке активностей вы можете увидеть Guided Lab - Creating a VPC Peering Connection. Как только вы перейдете на основную страницу лабораторной работы, здесь необходимо будет оставить окно README и окно Terminal можно закрыть. Сегодня в рамках лабораторной работы мы с вами научимся создавать VPC Peering Connection. Очень часто перед нами будет стоять задача обмена данными между несколькими VPC. Peering Connection как раз таки позволяет связать напрямую две VPC и настроить обмен данными. В рамках лабораторной работы мы создадим VPC Peering Connection и настроим route tables в наших VPC. В конце лабораторной работы мы получим следующую диаграмму. Вы можете видеть, есть Lab VPC, в котором работает приложение и необходимо из инстанса, находящегося в public subnet обратиться в shared VPC, а именно в private subnet, на котором находится база данных. Для корректной работы приложения необходимо извлекать некоторые данные из этой базы данных и передавать пользователям. Всего на выполнение этой лабораторной работы рекомендуется использовать порядка 20 минут. Напоминаю, что вы можете продлить время лабораторной работы и это никак не отразится на вашей оценке. Для этого необходимо не нажимая кнопку End lab, нажать на кнопку Start lab и счетчик начнет отрабатывать снова. Также напоминаю, что мы работаем в временно созданном AWS аккаунте и так как он является песочницей, не все AWS сервисы на нем доступны, но те сервисы и тот функционал, которые должны работать в рамках лабораторной работы, гарантированно будут доступны. Для того, чтобы начать лабораторную работу, первым делом необходимо нажать на кнопку Start lab, дождаться, что наша песочница, временный AWS аккаунт будет готов. После этого мы можем путем нажатия на кнопку AWS переходить в AWS Management Console и выполнять нашу лабораторную работу. Мы с вами начинаем первое задание и здесь мы будем создавать Peering Connection. Что такое Peering Connection, мы с вами проходили на лекционном занятии. Здесь хочу дополнительно напомнить, что мы можем соединять между собой VPC, находящиеся в разных регионах, а также в разных аккаунтах. В рамках лабораторной работы мы будем работать с Lab VPC и Shared VPC. Также внутри Lab VPC находится EC2 Instance и он будет как раз таки подключаться к базе данных из Shared VPC. Здесь вы можете видеть диаграмму, как у нас все на текущий момент настроено. Для создания Peering Connection необходимо в AWS Management Console воспользоваться строкой поиска сервисов либо из списка сервисов найти VPC. Далее в открывшейся странице, на главной странице VPC необходимо воспользоваться навигационным меню слева и выбрать опцию Peering Connections. Когда вы ее откроете, скорее всего не будет ни одного Peering Connection, необходимо создать новый. Вверху справа будет кнопка Create Peering Connection, нас перенаправит на страницу ввода входных данных и здесь необходимо как Peering Connection Name tag указать Lab-Peer как VPC Requester, то есть какой VPC запрашивает Peering Connection, указываем Lab VPC и как VPC Accepter указываем Shared VPC. Если в нашем случае, например, Shared VPC находилась бы в другом регионе или в другом AWS аккаунте, то в первом случае необходимо было переключиться на соответствующий регион и перейти в сервис VPC, а в случае с другим аккаунтом необходимо было бы переподключиться под другим аккаунтом и соответственно там найти приглашение, которое необходимо принять. Окей, на этой странице мы закончили, нам необходимо нажать на кнопку Create Peering Connection. В нашем случае в рамках лабораторной работы все упрощено и оба VPC находятся в одном регионе в одном аккаунте, поэтому нам достаточно из списка выбрать Lab-Peer, далее вверху справа нажать на кнопку Actions и в выпадающем меню выбрать опцию Accept Request и подтвердить, что мы принимаем приглашение. После этого VPC Peering Connection ресурс успешно создается и связывает между собой оба VPC. Но обратите внимание, что этого недостаточно. Вторым шагом необходимо настроить route tables, чтобы внутри VPC оно понимало, куда направлять трафик. Теперь мы с вами переходим ко второй части нашей лабораторной работы и будем как раз таки настраивать наши route tables. На этом слайде вы видите конечное состояние, как должны быть настроены route tables в обоих VPC. Давайте пройдемся по каждому из них. Первый, слева - Lab VPC, публично доступный, есть выход в интернет, поэтому как третий указано обозначение интернета и как Target - Internet gateway. Как первый у нас стоит дефолтовый route, указывается CIDR блок этого VPC и как Target - local, то есть это тот route, который позволяет ресурсам внутри этого VPC общаться между собой. Теперь нам необходимо здесь добавить дополнительный route, вы видите как Destination указан Shared VPC, то есть CIDR блок Shared VPC, акак Target указан Peering connection ID. Таким образом, если у нас будет трафик, который направляется к любому IP адресу в CIDR блоке Shared VPC, он этот трафик направляет на Peering connection, а Peering connection, соответственно, направляет этот трафик дальше на Shared VPC. Теперь если мы посмотрим справа на route table Shared VPC, то здесь первым мы также видим дефолтовый route, когда как Destination указывается CIDR блок этого VPC и как Target указывается local. Это нужно напоминаю для того, чтобы ресурсы в этом VPC могли между собой общаться. Здесь нам необходимо добавить дополнительный route, где Destination будет CIDR блок Lab VPC, а и как Target будет Peering connection ID. Как только мы настроим оба route table, то мы фактически все необходимые шаги выполним и обмен данными станет возможным. Для того, чтобы это проделать, нам необходимо воспользоваться навигационным меню слева и выбрать пункт Route tables. Там уже мы увидим созданные route tables, нам необходимо выбрать Lab public route table. Снизу страницы отобразятся несколько вкладок. Нас интересует вкладка Routes. Мы увидим, что здесь есть дефолтовый route и route для выхода в интернет. Теперь нам необходимо нажать на кнопку Edit routes и открыть список routes для редактирования. На этой странице необходимо будет нажать на кнопку Add route. В Destination мы указываем CIDR блок Shared VPC и как Target указываем Peering connection. После этого необходимо сохранить изменения и дальше из списка route tables выбрать следующий route table это Shared VPC route table. Здесь нам необходимо сделать фактически те же изменения, то есть во вкладках выбрать вкладку Routes, далее нажать на кнопку Edit routes. В открывшейся странице с routes этого route table необходимо нажать на кнопку Add route, далее как Destination указываем CIDR блок Lab VPC и как Target указываем Peering connection, сохраняем изменения. Теперь мы с вами переходим к последнему заданию в рамках лабораторной работы. Нам необходимо протестировать все внесенные изменения в аккаунт AWS. Для этого необходимо в строке поиска сервисов начать вводить EC2 либо из списка сервисов ее найти и перейти. Как только мы окажемся на основной странице сервиса EC2, необходимо воспользоваться навигационным меню слева и выбрать пункт Instances. Там будет один единственный инстанс, необходимо в метаданных этого инстанса скопировать его публичный IP адрес. Далее необходимо будет открыть новую вкладку в браузере и вбить это значение. Откроется приложение и вы увидите следующее сообщение, что необходимо сконфигурировать настройки базы данных, чтобы приложение начало работать. Давайте это сделаем. Необходимо будет на странице приложения перейти во вкладку Settings. Здесь необходимо будет заполнить все поля. Как Endpoint необходимо указать Endpoint базы данных. Это можем сделать двумя путями. Первый вариант - это перейти на сервис RDS, далее найти Instance RDS и в деталях этого инстанса найти значение Endpoint, скопировать и вставить в это поле. Другой вариант, он более упрощенный. В рамках нашей лабораторной работы необходимо вернуться на главную страницу лабораторной работы. Здесь нажать на кнопку Details. Далее возле AWS будет кнопка Show. Как только вы на нее нажмете отобразится информация, в том числе и Endpoint. Необходимо будет скопировать это значение и вставить в поле в приложении. Далее, как Database указываем Inventory, как Username - admin и как Password - lab-password. После чего нажимаем на кнопку Save. Как только вы нажмете на кнопку Save, вас направят на другую страницу и вы должны увидеть записи из базы данных. Если вы это увидели, значит мы все изменения произвели корректно. Peering connection успешно был настроен. Напоминаю, что на стороне Shared VPC нет выхода в интернет и единственный вариант добраться до данных в базе данных это через VPC Peering connection. Отлично. На этом мы с вами завершили основную часть лабораторной работы. Теперь нам необходимо на основной странице лабораторной работы нажать на кнопку Submit. Запустится скрипт автооценивания и вы увидите свои оценки. Если вы набрали максимальный балл, то отлично, поздравляю, все задания были выполнены корректно. Если же балл не максимальный, вы можете посмотреть детали, где баллов не хватило и попробовать выполнить это задание еще раз. Также обращаю внимание, что необходимо будет корректно выйти со всех систем. В первую очередь, это касается AWS Management Console. Далее, также необходимо будет завершить лабораторную работу, чтобы у вас не было в будущем проблем с открытием следующих лабораторных работ. На этом мы завершаем разбор лабораторной работы. Спасибо за внимание. Увидимся с вами на следующих наших активностях.
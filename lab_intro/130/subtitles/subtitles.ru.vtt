WEBVTT

00:00:00.000 --> 00:00:07.880
Добрый день, уважаемые студенты! Рад вас видеть
на очередной сессии обзора лабораторной работы.

00:00:07.880 --> 00:00:16.400
Тема сегодняшней лабораторной работы – создание
VPC Peering Connection. Итак, давайте начнем!

00:00:16.400 --> 00:00:21.920
Начинаем мы лабораторную работу с
основной страницы курса в AWS Academy.

00:00:21.920 --> 00:00:27.080
Необходимо воспользоваться
навигационным меню слева и перейти в Modules.

00:00:27.080 --> 00:00:30.280
Нас интересует седьмой
модуль – Connecting Networks.

00:00:30.280 --> 00:00:37.600
И здесь в списке активностей вы можете увидеть
Guided Lab - Creating a VPC Peering Connection.

00:00:37.600 --> 00:00:42.028
Как только вы перейдете на основную
страницу лабораторной работы, здесь

00:00:42.052 --> 00:00:46.480
необходимо будет оставить окно
README и окно Terminal можно закрыть.

00:00:46.480 --> 00:00:56.960
Сегодня в рамках лабораторной работы мы с
вами научимся создавать VPC Peering Connection.

00:00:56.960 --> 00:01:03.000
Очень часто перед нами будет стоять задача
обмена данными между несколькими VPC.

00:01:03.000 --> 00:01:08.040
Peering Connection как раз таки позволяет связать
напрямую две VPC и настроить обмен данными.

00:01:08.040 --> 00:01:16.000
В рамках лабораторной работы мы создадим VPC Peering
Connection и настроим route tables в наших VPC.

00:01:16.000 --> 00:01:20.280
В конце лабораторной работы
мы получим следующую диаграмму.

00:01:20.280 --> 00:01:29.593
Вы можете видеть, есть Lab VPC, в котором работает
приложение и необходимо из инстанса, находящегося

00:01:29.617 --> 00:01:38.840
в public subnet обратиться в shared VPC, а именно
в private subnet, на котором находится база данных.

00:01:38.840 --> 00:01:43.746
Для корректной работы приложения
необходимо извлекать некоторые

00:01:43.770 --> 00:01:48.200
данные из этой базы данных
и передавать пользователям.

00:01:48.200 --> 00:01:55.560
Всего на выполнение этой лабораторной работы
рекомендуется использовать порядка 20 минут.

00:01:55.560 --> 00:02:01.480
Напоминаю, что вы можете продлить время лабораторной
работы и это никак не отразится на вашей оценке.

00:02:01.480 --> 00:02:04.788
Для этого необходимо не
нажимая кнопку End lab, нажать

00:02:04.812 --> 00:02:08.120
на кнопку Start lab и счетчик
начнет отрабатывать снова.

00:02:08.120 --> 00:02:13.687
Также напоминаю, что мы работаем
в временно созданном AWS аккаунте

00:02:13.711 --> 00:02:18.848
и так как он является песочницей,
не все AWS сервисы на нем

00:02:18.872 --> 00:02:24.353
доступны, но те сервисы и тот
функционал, которые должны работать

00:02:24.377 --> 00:02:29.600
в рамках лабораторной работы,
гарантированно будут доступны.

00:02:29.600 --> 00:02:34.592
Для того, чтобы начать лабораторную
работу, первым делом необходимо нажать на

00:02:34.616 --> 00:02:40.200
кнопку Start lab, дождаться, что наша
песочница, временный AWS аккаунт будет готов.

00:02:40.200 --> 00:02:46.528
После этого мы можем путем
нажатия на кнопку AWS переходить в

00:02:46.552 --> 00:02:52.880
AWS Management Console и
выполнять нашу лабораторную работу.

00:02:52.880 --> 00:02:56.960
Мы с вами начинаем первое задание и
здесь мы будем создавать Peering Connection.

00:02:56.960 --> 00:03:00.720
Что такое Peering Connection, мы с
вами проходили на лекционном занятии.

00:03:00.720 --> 00:03:04.789
Здесь хочу дополнительно напомнить,
что мы можем соединять между

00:03:04.813 --> 00:03:09.400
собой VPC, находящиеся в разных
регионах, а также в разных аккаунтах.

00:03:09.400 --> 00:03:17.360
В рамках лабораторной работы мы
будем работать с Lab VPC и Shared VPC.

00:03:17.360 --> 00:03:22.328
Также внутри Lab VPC
находится EC2 Instance и он будет

00:03:22.352 --> 00:03:27.320
как раз таки подключаться к
базе данных из Shared VPC.

00:03:27.320 --> 00:03:32.680
Здесь вы можете видеть диаграмму, как
у нас все на текущий момент настроено.

00:03:32.680 --> 00:03:38.413
Для создания Peering Connection
необходимо в AWS Management Console

00:03:38.437 --> 00:03:45.040
воспользоваться строкой поиска
сервисов либо из списка сервисов найти VPC.

00:03:45.040 --> 00:03:48.755
Далее в открывшейся странице, на
главной странице VPC необходимо

00:03:48.779 --> 00:03:53.440
воспользоваться навигационным меню
слева и выбрать опцию Peering Connections.

00:03:53.440 --> 00:04:01.560
Когда вы ее откроете, скорее всего не будет ни
одного Peering Connection, необходимо создать новый.

00:04:01.560 --> 00:04:06.867
Вверху справа будет кнопка Create
Peering Connection, нас перенаправит на

00:04:06.891 --> 00:04:12.568
страницу ввода входных данных и здесь
необходимо как Peering Connection Name

00:04:12.592 --> 00:04:18.271
tag указать Lab-Peer как VPC Requester,
то есть какой VPC запрашивает Peering

00:04:18.295 --> 00:04:23.600
Connection, указываем Lab VPC и как
VPC Accepter указываем Shared VPC.

00:04:23.600 --> 00:04:29.898
Если в нашем случае, например, Shared VPC
находилась бы в другом регионе или в другом AWS

00:04:29.922 --> 00:04:36.148
аккаунте, то в первом случае необходимо
было переключиться на соответствующий регион и

00:04:36.172 --> 00:04:42.434
перейти в сервис VPC, а в случае с другим
аккаунтом необходимо было бы переподключиться

00:04:42.458 --> 00:04:48.720
под другим аккаунтом и соответственно там
найти приглашение, которое необходимо принять.

00:04:48.720 --> 00:04:53.760
Окей, на этой странице мы закончили, нам необходимо
нажать на кнопку Create Peering Connection.

00:04:53.760 --> 00:04:59.482
В нашем случае в рамках лабораторной
работы все упрощено и оба VPC находятся

00:04:59.506 --> 00:05:05.228
в одном регионе в одном аккаунте,
поэтому нам достаточно из списка выбрать

00:05:05.252 --> 00:05:10.974
Lab-Peer, далее вверху справа нажать
на кнопку Actions и в выпадающем меню

00:05:10.998 --> 00:05:16.720
выбрать опцию Accept Request и
подтвердить, что мы принимаем приглашение.

00:05:16.720 --> 00:05:21.450
После этого VPC Peering
Connection ресурс успешно создается

00:05:21.474 --> 00:05:26.204
и связывает между собой оба VPC.
Но обратите внимание, что

00:05:26.228 --> 00:05:31.034
этого недостаточно. Вторым шагом 
необходимо настроить route

00:05:31.058 --> 00:05:36.280
tables, чтобы внутри VPC оно
понимало, куда направлять трафик.

00:05:36.280 --> 00:05:40.748
Теперь мы с вами переходим ко
второй части нашей лабораторной

00:05:40.772 --> 00:05:45.240
работы и будем как раз таки
настраивать наши route tables.

00:05:45.240 --> 00:05:51.880
На этом слайде вы видите конечное состояние, как
 должны быть настроены route tables в обоих VPC.

00:05:51.880 --> 00:05:59.906
Давайте пройдемся по каждому из них. Первый,
слева - Lab VPC, публично доступный, есть выход в

00:05:59.930 --> 00:06:07.880
интернет, поэтому как третий указано обозначение
интернета и как Target - Internet gateway.

00:06:07.880 --> 00:06:13.397
Как первый у нас стоит дефолтовый route,
указывается CIDR блок этого VPC и как Target - local,

00:06:13.421 --> 00:06:18.760
то есть это тот route, который позволяет
ресурсам внутри этого VPC общаться между собой.

00:06:18.760 --> 00:06:24.250
Теперь нам необходимо здесь добавить
дополнительный route, вы видите как Destination

00:06:24.274 --> 00:06:30.360
указан Shared VPC, то есть CIDR блок Shared
VPC, акак Target указан Peering connection ID.

00:06:30.360 --> 00:06:34.732
Таким образом, если у нас будет
трафик, который направляется

00:06:34.756 --> 00:06:39.128
к любому IP адресу в CIDR
блоке Shared VPC, он этот трафик

00:06:39.152 --> 00:06:43.257
направляет на Peering
connection, а Peering connection,

00:06:43.281 --> 00:06:47.920
соответственно, направляет
этот трафик дальше на Shared VPC.

00:06:47.920 --> 00:06:54.576
Теперь если мы посмотрим справа на route table
Shared VPC, то здесь первым мы также видим дефолтовый

00:06:54.600 --> 00:07:00.920
route, когда как Destination указывается CIDR
блок этого VPC и как Target указывается local.

00:07:00.920 --> 00:07:06.320
Это нужно напоминаю для того, чтобы
ресурсы в этом VPC могли между собой общаться.

00:07:06.320 --> 00:07:12.448
Здесь нам необходимо добавить
дополнительный route, где Destination

00:07:12.472 --> 00:07:18.600
будет CIDR блок Lab VPC, а и как
Target будет Peering connection ID.

00:07:18.600 --> 00:07:22.948
Как только мы настроим оба
route table, то мы фактически все

00:07:22.972 --> 00:07:27.320
необходимые шаги выполним и
обмен данными станет возможным.

00:07:27.320 --> 00:07:32.294
Для того, чтобы это проделать,
нам необходимо воспользоваться

00:07:32.318 --> 00:07:36.960
навигационным меню слева
и выбрать пункт Route tables.

00:07:36.960 --> 00:07:44.440
Там уже мы увидим созданные route tables,
нам необходимо выбрать Lab public route table.

00:07:44.440 --> 00:07:49.760
Снизу страницы отобразятся несколько 
вкладок. Нас интересует вкладка Routes.

00:07:49.760 --> 00:07:56.040
Мы увидим, что здесь есть дефолтовый
route и route для выхода в интернет.

00:07:56.040 --> 00:08:04.520
Теперь нам необходимо нажать на кнопку Edit
routes и открыть список routes для редактирования.

00:08:04.520 --> 00:08:08.360
На этой странице необходимо
будет нажать на кнопку Add route.

00:08:08.360 --> 00:08:15.200
В Destination мы указываем CIDR блок Shared
VPC и как Target указываем Peering connection.

00:08:15.200 --> 00:08:20.488
После этого необходимо сохранить
изменения и дальше из списка route

00:08:20.512 --> 00:08:25.800
tables выбрать следующий route
table это Shared VPC route table.

00:08:25.800 --> 00:08:30.428
Здесь нам необходимо сделать
фактически те же изменения, то есть во

00:08:30.452 --> 00:08:35.080
вкладках выбрать вкладку Routes,
далее нажать на кнопку Edit routes.

00:08:35.080 --> 00:08:44.373
В открывшейся странице с routes этого route table
необходимо нажать на кнопку Add route, далее как

00:08:44.397 --> 00:08:53.520
Destination указываем CIDR блок Lab VPC и как Target
указываем Peering connection, сохраняем изменения.

00:08:53.520 --> 00:08:57.160
Теперь мы с вами переходим к последнему
заданию в рамках лабораторной работы.

00:08:57.160 --> 00:09:04.880
Нам необходимо протестировать все
внесенные изменения в аккаунт AWS.

00:09:04.880 --> 00:09:08.627
Для этого необходимо в
строке поиска сервисов начать

00:09:08.651 --> 00:09:12.840
вводить EC2 либо из списка
сервисов ее найти и перейти.

00:09:12.840 --> 00:09:16.808
Как только мы окажемся на основной
странице сервиса EC2, необходимо

00:09:16.832 --> 00:09:20.800
воспользоваться навигационным
меню слева и выбрать пункт Instances.

00:09:20.800 --> 00:09:24.317
Там будет один единственный
инстанс, необходимо в метаданных

00:09:24.341 --> 00:09:27.440
этого инстанса скопировать
его публичный IP адрес.

00:09:27.440 --> 00:09:33.040
Далее необходимо будет открыть новую
вкладку в браузере и вбить это значение.

00:09:33.040 --> 00:09:37.384
Откроется приложение и вы увидите
следующее сообщение, что необходимо

00:09:37.408 --> 00:09:42.200
сконфигурировать настройки базы
данных, чтобы приложение начало работать.

00:09:42.200 --> 00:09:48.320
Давайте это сделаем. Необходимо будет на
странице приложения перейти во вкладку Settings.

00:09:48.320 --> 00:09:54.280
Здесь необходимо будет заполнить все поля. Как 
Endpoint необходимо указать Endpoint базы данных.

00:09:54.280 --> 00:10:00.992
Это можем сделать двумя путями. Первый вариант -
это перейти на сервис RDS, далее найти Instance RDS

00:10:01.016 --> 00:10:08.560
и в деталях этого инстанса найти значение
Endpoint, скопировать и вставить в это поле.

00:10:08.560 --> 00:10:12.385
Другой вариант, он более упрощенный.
В рамках нашей лабораторной

00:10:12.409 --> 00:10:16.600
работы необходимо вернуться на
главную страницу лабораторной работы.

00:10:16.600 --> 00:10:22.920
Здесь нажать на кнопку Details.
Далее возле AWS будет кнопка Show.

00:10:22.920 --> 00:10:27.960
Как только вы на нее нажмете отобразится
информация, в том числе и Endpoint.

00:10:27.960 --> 00:10:32.600
Необходимо будет скопировать это
значение и вставить в поле в приложении.

00:10:32.600 --> 00:10:38.600
Далее, как Database указываем Inventory, как
Username - admin и как Password - lab-password.

00:10:38.600 --> 00:10:42.768
После чего нажимаем на кнопку Save.
Как только вы нажмете на кнопку Save,

00:10:42.792 --> 00:10:46.960
вас направят на другую страницу и вы
должны увидеть записи из базы данных.

00:10:46.960 --> 00:10:53.960
Если вы это увидели, значит мы
все изменения произвели корректно.

00:10:53.960 --> 00:11:00.352
Peering connection успешно был настроен.
Напоминаю, что на стороне Shared VPC нет выхода в

00:11:00.376 --> 00:11:07.560
интернет и единственный вариант добраться до данных
в базе данных это через VPC Peering connection.

00:11:07.560 --> 00:11:12.840
Отлично. На этом мы с вами завершили
основную часть лабораторной работы.

00:11:12.840 --> 00:11:18.400
Теперь нам необходимо на основной странице
лабораторной работы нажать на кнопку Submit.

00:11:18.400 --> 00:11:22.720
Запустится скрипт автооценивания
и вы увидите свои оценки.

00:11:22.720 --> 00:11:28.740
Если вы набрали максимальный балл, то отлично,
поздравляю, все задания были выполнены корректно.

00:11:28.740 --> 00:11:34.238
Если же балл не максимальный,
вы можете посмотреть детали, где

00:11:34.262 --> 00:11:39.760
баллов не хватило и попробовать
выполнить это задание еще раз.

00:11:39.760 --> 00:11:44.400
Также обращаю внимание, что необходимо
будет корректно выйти со всех систем.

00:11:44.400 --> 00:11:48.440
В первую очередь, это касается
AWS Management Console.

00:11:48.440 --> 00:11:52.764
Далее, также необходимо будет
завершить лабораторную работу, чтобы у

00:11:52.788 --> 00:11:57.500
вас не было в будущем проблем с
открытием следующих лабораторных работ.

00:11:57.500 --> 00:12:02.020
На этом мы завершаем разбор лабораторной 
работы. Спасибо за внимание.

00:12:02.020 --> 00:12:05.160
Увидимся с вами на
следующих наших активностях.
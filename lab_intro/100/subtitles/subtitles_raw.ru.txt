 Добрый день, уважаемые студенты! Я рад вас всех видеть на очередной сессии обзора лабораторной работы. Тема лабораторной работы – это миграция базы данных в сервис Amazon RDS. Итак, давайте начнем. Обзор лабораторной работы мы с вами начнем с основной страницы курса Cloud Architecting в AWS Academy. Здесь нам необходимо воспользоваться навигационным меню слева и выбрать опцию Modules. Откроется страница со всеми модулями. Нам необходимо спозиционироваться на пятом модуле – Adding a database layer и воспользоваться ссылкой Module 5 – Challenge Lab – Migrating a database to Amazon RDS. Как только вы на нее нажмете, вы перейдете на основную страницу лабораторной работы. Здесь нам необходимо для удобства чтения заданий лабораторной работы убрать окно терминала. Для этого нужно снять галочку с признака терминал. Мы с вами начинаем обзор лабораторной работы. Тема лабораторной работы – миграция базы данных в сервис Amazon RDS. Согласно сценарию, кафе стало достаточно популярным, но на текущий момент и веб-сервер, и база данных, и код приложения, оно работает в одной из эту машине. Это не является достаточно долгосрочным и надежным решением, поэтому принято было решение вынести отдельно базу данных, чтобы оно не требовало дополнительных технических работ и помогло разгрузиться нашим персонажам и заняться другими важными, более важными задачами. Более того, эти данные стали достаточно важными, так как Марта использует эти данные для бухгалтерских расчетов, а Фрэнк использует и смотрит на историю заказов, чтобы придумывать новые виды товаров в своей пекарне. Поэтому в рамках кейса Марта попросила дочку Софию рассмотреть, какие технические решения есть и что можно сделать для того, чтобы улучшить работу базы данных. В рамках лабораторной работы мы будем переносить базу данных, установленную в ISI2 машине, в сервис Amazon RDS, и там и там останется тот же движок, это MariaDB. После выполнения лабораторной работы мы с вами научимся создавать базу данных RDS, также научимся экспортировать и импортировать данные в MariaDB. В случае импорта мы подключимся к инстанцу RDS. Также в рамках этой лабораторной работы мы воспользуемся написанным заранее веб-приложением и с помощью него настроим подключение к инстанцу базы данных сервиса Amazon RDS. В начале лабораторной работы у нас будет следующая схема ресурсов в AWS-эканте. Вы видите, что у нас на ISI2 машине находится веб-сервер, база данных и само приложение. После выполнения лабораторной работы мы базу данных MariaDB перенесем в приватный сабнет в той же availability зоне и оно будет запускаться в рамках сервиса Amazon RDS. Для выполнения этой лабораторной работы рекомендуется использовать 80 минут. Я также напоминаю, что если этого времени мало, вы всегда можете нажать на кнопку Start Lab, нажимая на кнопку End Lab и тогда счетчик возобновится. Обращаю также ваше внимание, что мы работаем в рамках песочницы. Это временно созданный AWS-эканте с соответствующими ограничениями. Все сервисы и функционал этих сервисов в рамках лабораторной работы он для нас будет доступен. Остальные сервисы и функционал могут быть недоступны. Для того, чтобы начать лабораторную работу необходимо в верхней правой части нажать на кнопку Start Lab, откроется окно, там необходимо дождаться, что лабораторная работа может быть начата, временно AWS-эканте создан и теперь вы можете закрывать это всплывающее окно и после нажатия на кнопку AWS вас направят на главную страницу AWS Management Console. Мы с вами начинаем самое первое задание в рамках лабораторной работы. Здесь согласно кейсу София посоветовалась с Оливией, которая является AWS Solution с Архитектом и рассказала свою ситуацию. Оливия посоветовала воспользоваться сервисом Amazon RDS, который поможет разгрузить Софию от административных работ, связанных с базой данных. Также она рассказала все преимущества этого сервиса Amazon RDS и в результате София согласилась последовать этой рекомендации и мы сейчас в рамках этого задания будем создавать инстанс базы данных сервиса Amazon RDS. Первым делом нам необходимо перейти в сервис Amazon RDS, далее нажать на кнопку Create Database. Откроется страница ввода входных данных, там необходимо как движок выбрать MariaDB, как там стоит выбрать DevTest, как DBInstanceIdentifier необходимо ввести cafe database, как username вводим admin, как password необходимо скопировать это значение и вставить в соответствующее поле. Как DBInstanceClass необходимо выбрать t2.micro, может быть такое, что семейство t2 недоступно и единственно доступно это t3, в этом случае выбираем t3.micro. Как storage type выбираем General Purpose SSD, этого более чем достаточно в рамках лаборатурной работы, как allocated storage выбираем 20 гигабайтов, это минимальное возможное значение и также достаточно в рамках лаборатурной работы. Нужно далее выбрать опцию не создавать Standby Instance, в этом случае опция Multi-AZ Deployment будет отключена и Instance будет в единственном экземпляре в создаваемой availability зоне. Как VPC выбираем LabVPC, как Subnet выбираем LabDBSubnetGroup, оно уже было за нас создано, необходимо его выбрать, это тот Subnet, который является приватным. Далее как Security группу необходимо убрать галочку с Security группы Default и выбрать созданную Security группу DBSG. Там где необходимо выбрать availability зону, необходимо выбрать ту, которая заканчивается на A. Например, если у вас временный WS account открылся в регионе Норс-Вирджиния, что есть US East 1, то как availability зону необходимо выбрать US East 1A. Как database порт необходимо использовать TCP порт 3306, это дефолтовый порт для MariaDB базы данных. Также обращаю внимание, что нам необходимо отключить Enhanced Monitoring, так как это не нужно в рамках лаборторной работы. Более того, с отключенной опцией Enhanced Monitoring база данных создаться намного быстрее. Как только вы запустите создание Instance баз данных, вас перенесет на страницу со всеми базами данных и вы увидите сообщение о том, что процесс создания баз данных стартовал. Обратите внимание, что нет необходимости ждать завершения создания базы данных, вы можете сразу переходить ко второму заданию. Мы с вами переходим ко второму заданию и здесь мы будем проверять работу нашего приложения на EC2 Instance. Для этого необходимо перейти в сервис EC2, далее открыть все существующие инстанции и нам необходимо открыть детали инстанца с названием кафе сервер. Как только вы это сделаете, нам необходимо скопировать public IP адрес и в новой вкладке браузере ввести этот IP адрес и в конец добавить слеш кафе. Мы перейдем к нашему веб серверу. Откроется страница веб приложения, давайте проверим, корректно ли она работает с базой данных, для этого перейдем во вкладку меню, укажем ненулевое значение для любой из позиций и в самом внизу нажмем на кнопку submit order. Нас направят на страницу подтверждения, вам необходимо удостовериться, что действительно те товары, которые вы выбрали в том количестве с той суммой и итоговой суммой отображаются на этой странице. Также необходимо перепроверить страницу с историей заказов, если вы ее откроете, самая первая будет отображаться последний заказ, тот заказ, который вы сделали. Если все верно, отлично, приложение работает корректно, мы можем двигаться дальше. Теперь нам необходимо подключиться к нашему EC2 инстанцу, чтобы подключиться к нему мы воспользуемся сервисом AWS Systems Manager. Для этого в строке поиска сервисов вводим Systems Manager и выбираем соответствующую ссылку. Как только откроется страница сервиса AWS Systems Manager, нам необходимо стартовать сессию и выбрать кафе сервер для подключения. Как только вы это сделаете, откроется новая вкладка в веб-браузере, это и будет подключением к вашему EC2 инстанцу. Вы увидите промт, то есть можно вводить команды, здесь нам необходимо переключиться на bash shell, поэтому мы вводим bash. Как только мы это делаем, нам необходимо переключиться на пользователя EC2 user, но чтобы это сделать, мы сперва должны переключиться на root пользователя. Для этого вводим команду sudo su, далее от root аккаунта пользователя мы вводим команду su EC2 user и уже подключаемся под пользователем EC2 user. Если мы введем команду whoami, то вы увидите в ответе, что мы сидим под пользователем EC2 user. И последняя команда, нам необходимо перейти в домашнюю папку пользователя, для этого вводим cd home EC2 user. На этом слайде вы видите введенные команды и выводы, которые ожидается получить, если все так, значит вы все сделали корректно. Здесь хотелось бы отметить, что Systems Manager у нее есть агент, он по умолчанию устанавливается на все Amazon Linux 2 инстанции, также на некоторые другие операционные системы. И для того, чтобы не используя SSH клиент, а напрямую с AWS Management консоли подключаться к вашим инстанциям, вам необходимо сделать два шага. Первый шаг, необходимо в user date запустить SSH агент и также добавить ее в автозагрузку. Второй шаг, необходимо для роли, привязанной к EC2 инстанцию добавить полиси Amazon SSH Managed Instance Core. Оно содержит все необходимые права и доступы для подключения к инстанцию через AWS Systems Manager. Вкратце SSM. Мы с вами добрались до второго блока заданий. Первым заданием в рамках этого блока мы будем экспортировать структуру таблиц и наши данные из существующей таблицы. И вторым заданием попробуем настроить подключение с EC2 инстанция к инстанцию RDS. Итак, начинаем. Нам в окне терминала необходимо ввести следующие команды и посмотреть на статус пазы данных. Если мы видим, что она работает и активна, то можем двигаться дальше. Следующим шагом нам необходимо открыть сервис параметр store, там необходимо найти параметр cafe-db-password и как значение у нас будет пароль к нашей существующей базе данных. Нам необходимо это значение скопировать и вернуться в терминал. В терминале ввести следующую команду, как только мы ее введем, у нас запросит пароль. Необходимо ввести значение, которое мы скопировали ранее. Вы увидите похожие сообщения, как на скриншоте и самая последняя строка будет MariaDB и будет специальный промт, где вы уже можете начать вводить команды в базу данных. Если это так, то мы двигаемся к следующему шагу. На следующем шаге нужно ввести набор из следующих команд. Первым делом необходимо отобразить существующие базы данных. Существующих баз данных необходимо выбрать базу данных cafe-db. Как только мы выберем эту базу данных, мы можем отобразить список существующих таблиц. Для этого введем команду show tables и мы увидим список всех существующих таблиц. Нас интересует содержание таблицы order. Для этого необходимо ввести команду select-**from-order. То есть мы отобразим на странице все строки со всеми столбсами таблицы order. Вы увидите все созданные заказы. Также если вы посмотрите содержание таблицы order item, вы увидите для каждого заказа какой товар в каком количестве был выбран. Отлично! Если мы все это смогли успешно запустить, значит база корректно настроена, все работает корректно, мы можем выходить со SQL клиента. Для этого необходимо ввести команду exit. Как только мы вышли, теперь мы можем создавать дамп базы данных. Для этого введем следующую команду. И здесь обратите внимание, что мы подключаемся к базе данных cafe-db под пользователем root, введем пароль и дамп базы данных сохраним в файле cafe-db-damp.sql. Как только мы ее запустим, если не будет выдана ошибок, значит она отработала успешно. Теперь мы можем посмотреть, что у нас появился файл, если мы введем команду ls и также если мы введем команду cat cafe-db-damp.sql, мы посмотрим содержание этого файла. Там будут команды создания структуры таблиц и команды с пополнениями данными этих таблиц. Мы с вами переходим к четвертому заданию и здесь мы будем настраивать подключение cc2-инстанца до инстанца RDS базы данных. Первым делом нам необходимо дождаться статуса available у инстанца баз данных. Если это так, то мы можем переходить к следующим шагам. Здесь на следующем шаге нам необходимо ответить на несколько вопросов. Для того чтобы добраться до вопросов, нам необходимо на странице лабораторной работы нажать на кнопку details. В выпадающем списке нажать на кнопку show, а далее уже в всплывающем окне нажать на ссылку access the multiple choice questions. Откроется новая вкладка в браузере и вы увидите несколько вопросов. На текущий момент необходимо ответить на 4 вопроса. В первом вопросе говорится о том, что где запускается RDS-инстанц. Второй вопрос спрашивает, есть ли привязанный публичный IP-адрес у RDS-инстанца. Третий вопрос, укажите name, tag, значение для сабнета, на котором находится наш RDS-инстанц. И последний вопрос, какое количество security-групп рулов привязано к нашему RDS-инстанцу. Вам необходимо по очереди ответить на вопросы и не закрывать страницу с этими вопросами. В конце, когда мы будем запускать автоматическое оценивание, ваши ответы на эти вопросы также учтутся. Теперь нам необходимо попробовать подключиться к нашему RDS-инстанцу. Для этого необходимо на странице сервиса Amazon RDS перейти на основную страницу нашей базы данных и скопировать RDS endpoint. Далее, воспользуясь командой, указанной на слайде, попробовать подключиться к базе данных. Обращаю ваше внимание, что пользователь отличается, это admin, и пароль тот пароль, который мы использовали в самом начале, когда создавали инстанц базы данных RDS. Вы увидите, что команда не отработает успешно, и проблема не в том, что пароль не тот, либо пользователь не тот, а на самом деле нет доступа по сети. Здесь рекомендуется подумать самостоятельно, в чем же может быть проблема, и как решение необходимо проверить security-группу RDS-инстанца. Обратите внимание, что там нет правила, которые разрешают входящий трафик по TCP-порту 3306. Давайте ее создадим. Также хотелось бы обратить внимание, что как source, то есть источник этого трафика, не рекомендуется использовать CIP-адреса, а рекомендуется использовать security-группу, которая привязана к нашему EC2-инстанцу. Как ее проверить вы уже знаете. Как только мы создадим необходимые рулы, давайте проверим доступ с EC2-инстанца к нашему RDS-инстанцу. Для этого необходимо ввести команду nmap-pn eRDSEndpoint. Должно выйти сообщение о том, что доступ открыт. После этого мы можем попробовать подключиться к нашему инстанцу, используя предыдущую команду. Как только вы подключитесь успешно, давайте посмотрим, какие базы данных там имеются. Для этого необходимо ввести команду show databases. Как только вы ее введете, вы увидите только 4 системные базы данных и не увидите базу данных cafeDB. Все корректно, так как это пустая база данных, то там нет базы данных нашего приложения cafeDB. Мы эту базу данных будем импортировать в instance RDS. Все отлично, мы смогли подключиться к базе данных. Теперь нам необходимо ввести команду exit для того, чтобы вернуться к командной строке. Мы с вами переходим к третьему блоку задания. И здесь мы будем импортировать базу данных в instance RDS. А также проверим на стороне приложения, что приложение также продолжает корректно работать. Первым делом нам необходимо в терминале ввести следующую команду. Эта команда импортирует там базы данных. И после чего нам необходимо будет подключиться к инстанцу RDS и запустить следующие команды. Мы должны увидеть, что появится база данных cafeDB. Также должна появиться таблица order и order items. Если все действительно так и данные в этой таблице появились, то значит все корректно импортировалось и мы можем выходить со скилл клиента. Переходим к шестому заданию. Здесь нам необходимо произвести некоторые настройки на стороне приложения, чтобы EC2Instance мог работать с RDSInstance. Для этого переходим в параметр store и нам необходимо некоторые параметры обновить. Мне рекомендуется самостоятельно подумать, какие параметры требуют обновления. Как подсказка нам дается следующая. Параметры currency, dbname, timezone и showserverinfo не нуждаются в изменении. Они остаются такими же. Все оставшиеся параметры должны измениться. Следующая подсказка говорит о том, что для параметра db URL мы должны использовать RDSEndpoint значение. Как только мы изменили все необходимые параметры, нам необходимо остановить работу базы данных на EC2Instance. Для этого введем команду sudo service maria-db stop. После этого мы можем попробовать подключиться к нашему веб-приложению по ссылке public IP-адресу EC2Instance.com. Попробуйте сделать заказ. Вы должны увидеть после подтверждения заказа страницу с вашим заказом, со всеми ее деталями. Также при переходе на страницу Order History вы должны увидеть заказ, который вы сделали только что в списке со всеми предыдущими заказами. Если вы это увидели, это говорит о том, что вы все сделали корректно. Согласно кейсу, на этой неделе София является героем недели. Все рады. Больше всего рады Фрэнки и Марта. София также рада, так как она избавилась от административных работ, связанных с базой данных. Фрэнк рад, потому что он уверен, что база данных в сохранности, в безопасности и она надежно работает. Марта также радуется, так как у нее не будет проблем с потерей данных и она продолжит работать с этими данными для своих бухгалтерских расчетов. Как следующий шаг, София планирует сократить размер EBS Volume у EC2 Instance, так как база данных была перенесена отдельно и эти дополнительные места уже не нужны. И в целях экономии расходов на облака рекомендуется убрать лишние Data Volumes, а также сократить Root Data Volume, если оно не требует такого большого размера. На этом мы завершили лабораторную работу. Теперь нам необходимо на основной странице лабораторной работы нажать на кнопку Submit, подтвердить, что мы хотим запустить автоматическое оценивание и дождаться, когда мы увидим свои отынки. Если вы набрали максимальное количество баллов, я вас поздравляю, вы молодцы, все сделали верно. Если же у вас не максимальный балл, то вы можете посмотреть, в каком из заданий произошла ошибка, вернуться к этому заданию и попытаться ее исправить. Также обращаю внимание, что необходимо безопасно выйти со всех систем, это касается AWS Management Console, необходимо разлагиниться, а также завершить лабораторную работу в AWS Academy. На этом мы с вами подошли к концу обзора лабораторной работы. Я надеюсь, что у вас получится проделать все самостоятельно с первого раза и также надеюсь, что вы получили более полное представление о сервисе Amazon RDS. Спасибо за внимание, увидимся с вами на следующих наших активностях.

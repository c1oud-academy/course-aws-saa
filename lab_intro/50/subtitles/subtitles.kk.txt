Қайырлы күн, құрметті студенттер! Келесі «Зертханалық жұмысқа кіріспе» сессиясында көргеніме қуаныштымын.
Зертханалық жұмыстың тақырыбы – бизнес кейсіміз үшін, атап айтқанда кафе, статикалық веб-сайтты құру.
Ендеше, бастайық.
Зертханалық жұмысты AWS Academy-дегі Cloud Architecting курсының негізгі парақшасынан бастаймыз.
Мұнда сол жақтағы шарлау мәзірін пайдаланып, Modules қойындысына өтуіміз керек.
Мұны жасағаннан кейін үшінші модульге Adding a Storage Layer өтейік.
Белсенділіктер тізімін кеңейтсеңіз, соңында 3-модульді көресіз «Challenge Lab – Creating a static website for the cafe».
Зертханалық жұмыстың негізгі парақшасына өту үшін оны шертейік.
Мұнда Terminal терезесін өшіру ұсынылады, оның белгісін алып тастау керек, сонда README терезесі бүкіл парақшаға көрсетіледі.
Сценарий бойынша басты кейіпкерлер – Фрэнк пен Марта.
Олар ерлі-зайыптылар, зейнеткерлер.
Олардың көптен бері армандаған шағын бизнесі бар, наубайханасы бар кафе, онда өздері жұмыс істеп, нан өнімдерін пісіреді.
Бұл бизнеске университетте оқитын қызы София мен жарты күн жұмыс істейтін, сонымен қатар университетте оқитын қызметкер Нихил де көмектеседі.
Қазіргі уақытта басты кейіпкерлердің нақты маркетингтік стратегиясы жоқ, сондықтан бұл мекеме туралы тек таныстары, достары, туыстары және аудан тұрғындары ғана біледі.
Сондықтан София ата-анасы Фрэнк пен Мартаға веб-сайтты әзірлеуге уақыт бөлуді ұсынады.
Ол мәзірді, жұмыс уақытын, мекеменің орналасқан жерін және веб-сайттағы басқа пайдалы ақпаратты қамтуы мүмкін, осылайша жаңа келушілер өздерінің сүйікті мекемелерін оңай таба алатын болады.
Бұл зертханалық жұмыста біз Софияға AWS бұлтында орналастырылған веб-сайтты жасауға көмектесеміз.
Зертханалық жұмыс аясында төрт тапсырма орындаймыз.
Бірінші тапсырма - Amazon S3 сервисінде тұрақты веб-сайттың хостингін орнату.
Екінші - деректеріміздің қауіпсіздігін қамтамасыз ету қажет.
Үшінші - деректерімізді S3 бакетінде оңтайлы сақтау үшін Data Lifecycle Strategy баптауымыз керек.
Соңғысы - Disaster Recovery Strategy (DR) баптауымыз керек, бұл біздің архитектура бүкіл AWS аймағындағы мәселелерге дайын екенін білдіреді.
Мұндай жағдайлар орын алса, біз деректерімізді жоғалтпаймыз.
Слайдтан зертханалық жұмысымыздың нәтижесінде болатын архитектураны көресіз.
Жалпы бір ғана сервис бар - Amazon S3.
Оған екі аймақ қатысады.
Бірінші аймақ - біздің веб-сайт орналасатын негізгі аймақ.
Негізгі S3 бакетіне қосылатын барлық мазмұн екінші аймақтағы бакетке көшіріледі.
Сондай-ақ, бұл Challenge Lab екендігін еске саламын және ең қарапайым әрекеттерді қалай орындау керектігі туралы егжей-тегжейлі мәліметтер берілмейді, бірақ орындалуы қажет тапсырмалардың жалпы сипаттамасы болады.
Дәрістерде, алдыңғы зертханалық жұмыстарда алған білімдерді пайдалана отырып, бұл тапсырманы орындауымыз керек.
Бұл зертханалық жұмысты 60 минут ішінде аяқтау ұсынылады.
Естеріңізге сала кетейін, егер көбірек уақыт қажет болса, зертханалық жұмысты аяқтамай-ақ, Start Lab батырмасын басыңыз, сонда есептегіш бастапқы күйіне оралады.
Есептегішті бастапқы күйіне қайтару жалпы ұпайыңызға әсер етпейді, сондықтан қалған уақытты мезгіл-мезгіл қарап, қажет болған жағдайда тағы қоссаңыз болады.
Бұл зертханалық жұмыс үшін арнайы жасалған AWS аккаунтын қолданамыз.
AWS сервистеріне белгілі бір шектеулер болады, бірақ зертханалық жұмыстарға қатысты сервистер мен функционалдылыққа қажетті қолжетімділікке кепілдік беріледі.
Зертханалық жұмысты орындау үшін AWS Management Console өту керек.
Мұны істеу үшін Start Lab батырмасын басамыз.
Басқаннан кейін уақытша AWS аккаунтын жасау процесі басталады және хабарлама пайда болады.
Қалқымалы терезеде Lab Status: Ready мәтінін көрген бойда терезені жабуға болады.
Әрі қарай, уақытша жасалған AWS аккаунтына өту үшін AWS батырмасын басу керек.
Енді ең бірінші тапсырманы бастаймыз.
Ең алдымен зертханалық жұмыстың тапсырмасындағы сілтеме бойынша өтіп, .zip архивін жүктеп алуымыз керек.
Бұл архивте біздің статикалық веб-сайтымыз үшін барлық қажетті мазмұн бар, атап айтқанда index.html файлы.
Екі папка бар, біріншісі - CSS стильдері, және суреттері бар папка.
Оны жүктеп алып, ықшамдап және жүктеп салуға дайындап болғаннан кейін, AWS Management Console оралып, S3 бакетін құруымыз керек.
Бұл S3 бакет North Virginia аймағында деректерді сақтауы керек.
Анықтама ретінде бізге Block All Public Access опциясын өшіру, сонымен қатар static website hosting белсендіру және негізгі құжат ретінде index.html пайдалану қажет екендігі айтылды.
S3 Bucket жасағаннан кейін, біз барлық файлдарды S3 Bucket ішіне жүктеп салуымыз керек.
Біз мұны бірнеше рет жасадық, сондықтан мұнда ешқандай түсініксіздік болмауы керек.
Осының бәрі жасалғаннан кейін, веб-сайтты ашып көрейік.
Challenge Lab орындау барысында кейбір тест сұрақтарына жауап беруіміз керек.
Оларды ашу үшін Details батырмасын басып, ашылмалы мәзірде Show батырмасын басу керек.
Содан кейін Access the multiple choice questions опциясын таңдаңыз, браузерде бөлек қойынды ашылады және осы зертханалық жұмыстағы барлық сұрақтарды көресіз.
Енді бірінші сұраққа жауап беруіміз керек, ол келесідей.
3-тапсырманы орындағаннан кейін веб-сайтыңызды браузерде көре алдыңыз ба? Жауапты белгілеп, сақтау үшін сұрауды жіберу керек.
Бұл парақшаны жаппаңыз, өйткені оған кейінірек ораламыз.
Енді төртінші тапсырмаға көшейік.
Мұнда S3 Bucket мазмұнына жалпыға ортақ қолжетімділікті беруіміз керек.
Франк Софиядан веб-сайттағы кейбір мәліметтерді жаңартуды сұрады, содан кейін София бұл әрекеттерді үнемі жасау керек екенін түсінді.
Сонымен қатар, жүктегеннен кейін осы объектілердің әрқайсысы үшін Access Control Lists қолмен жаңарту керек.
Ол осы қадамдарды үнемі орындағысы келмеді, сондықтан ол осы S3 Bucket ішіне кіретін барлық объектілерге жалпыға ортақ қолжетімділікті ашатын Bucket Policy жасауды шешті.
Сондықтан барлық интернет пайдаланушыларына жалпыға ортақ қолжетімділікті қамтамасыз ететін S3 Bucket жүйесіне Bucket Policy қосу керек.
Осы Policy-ді жазуда қиындықтар туындаса, AWS Documentation-ге өтіп, оны қалай дұрыс жазу керектігін көруге болады.
Жазып, сақтағаннан кейін веб-сайтыңыздың жалпыға қолжетімді екенін тексеру керек.
Егер өзіңіздің веб-сайтыңыздың басты парақшасын көрсеңіз, құттықтаймыз, бәрін дұрыс жасадыңыз.
Осымен бірінші бөлімді аяқтап, зертханалық жұмысымыздың екінші бөліміне көшеміз.
Екінші бөлімде біз веб-сайттағы деректерімізді қорғауымыз керек.
София веб-сайтты сәтті жасағаннан кейін келесі нәрсе пайда болды.
AWS Solutions Architect болып табылатын және кафеге үнемі баратын Оливия веб-сайтты қорғау үшін кейбір қосымша опцияларды енгізуге кеңес берді.
Веб-сайтымызды оның элементтерін кездейсоқ жоюдан немесе қайта жазудан қорғау үшін versioning функциясын пайдалануды ұсынамыз.
Ең алдымен, оны белсендіру керек.
Әрі қарай, оны іске қосқаннан кейін оның шынымен жұмыс істейтінін тексеруіміз керек.
Мұны тексеру үшін кез келген мәтіндік редакторды жергілікті түрде ашып, сол жерде index.html файлын ашуымыз керек.
Біраз өзгерістер енгізетін боламыз.
Бірінші өзгерту - bgcolor="aquamarine" мәнін тауып, оны bgcolor="gainsboro" мәнімен ауыстыру.
Әрі қарай, bgcolor="orange" мәнін тауып, оны bgcolor="cornsilk" мәнімен ауыстырамыз.
Үшінші өзгеріс - екінші bgcolor="aquamarine" мәнін тауып, оны bgcolor="gainsboro" мәніне ауыстыру.
Өзгерістерді сақтап, S3 бакетіне жүктеп, веб-сайт парақшасын жаңартыңыз.
Кейбір өзгерістер жасағанымызды көресіз.
Енді index.html үшін бірнеше нұсқалар бар екенін тексеру керек және қажет болса, алдыңғы нұсқаға оңай орала аламыз.
Егер бұл шынымен де солай болса, онда жақсы, біз S3 бакеті үшін versioning сәтті іске қостық және әрі қарай жүрейік.
Келесі қадам - сұрақтары бар парақшаны ашып, 2 сұраққа жауап беру.
Сұрақтың мәтіні келесідей.
Қосымша қауіпсіздікті қамтамасыз ету және S3 бакетіндегі объектіні кездейсоқ жою мүмкіндігін болдырмау үшін басқа ықтимал опцияны таңдаңыз.
Жауап беру қиын болса, сілтеме бойынша өтіп, құжаттаманы оқып шығу ұсынылады.
Әрі қарай өтейік.
Best practice сипатталған шағын бөлім бар, онда функционалдылықтың жеткілікті болуы туралы, соның ішінде деректерімізді қорғауға және бизнесімізді сақтауға мүмкіндік беретін Amazon S3 сервисі туралы айтылады.
Бізде versioning қосу мүмкіндігі бар.
Бұл S3 бакетіндегі объектілердің алдыңғы нұсқаларын оңай қалпына келтіруге көмектеседі, сонымен қатар бізді кездейсоқ жоюдан қорғайды.
Әрі қарай, деректерімізге рұқсатсыз кіруден қорғауға мүмкіндік беретін шифрлау опциясы бар.
Енді зертханалық жұмысымыздың үшінші бөліміне көшеміз.
Мұнда Amazon S3 сервисінің құнын азайту үшін қадамдар жасау керек.
Сирек қолданылатын объектілерді басқа сақтау класына тасымалдау және біраз уақыттан кейін оларды толығымен жою үшін lifecycle policy пайдалану ұсынылады.
Толығырақ айтатын болсақ, S3 бакетінде lifecycle configuration бөлімінде екі рул жасау керек.
Бірінші рул объектілердің барлық алдыңғы нұсқаларын 30 күннен кейін Standard Infrequent Access сақтау классына тасымалдайды.
Әрі қарай, объектілердің алдыңғы нұсқаларын 365 күннен кейін жоятын екінші рулды жасау керек.
Сіз қажетті рулдарды жасай алдыңыз деп ойлаймын.
Егер жасай алмасаңыз, құжаттамаға жүгінуге болады.
Сондай-ақ, бізге Well-Architected Framework сәйкес lifecycle strategy құру керек екендігі айтылды.
Бұл өте маңызды, өйткені біз деректеріміздің өмірлік циклін басқарып, оны қажет уақытта сақтауымыз керек, содан кейін оны қажет уақытта басқа сақтау класстарына тасымалдауымыз және нәтижесінде оны жоюымыз керек.
Зертханалық жұмысымыздың соңғы төртінші бөліміне де жеттік.
Мұнда веб-сайтымыздың және жалпы архитектурамыздың сенімділігін арттырамыз.
Идея мынада: біз басқа аймақта қосымша S3 бакетін жасауымыз керек және негізгі аймақтағы S3 бакетінде Cross-region replication баптауымыз керек.
Оны жасаған кезде, бүкіл бакетті көшіретінімізге көз жеткізуіміз керек.
Сондай-ақ, осы репликацияны орындау үшін IAM role ретінде CafeRole көрсетуіміз керек.
Ол біз үшін алдын ала жасалған.
Осы рольге қатысты policy де осы жерде берілген.
Оның бірнеше әрекеттерді Action қамтамасыз ететінін көреміз, соның ішінде ReplicateObject, ReplicateDelete, ReplicateTags.
Resource ретінде жұлдызша, ал Effect: allow көрсетілген.
Production ортасымен жұмыс істегенде, policy-де жұлдызшаның орнына least privilege принципіне сәйкес келетіндей бакеттердің арнайы атауларын көрсету керек екенін ескеріңіз.
Cross-region replication баптағаннан кейін сұрақтар парақшасын ашып, үшінші сұраққа жауап беруіміз керек.
Үшінші сұрақтың мәтіні келесідей.
Репликация орын алатын бакетте негізгі бакеттегі объектілерді көреміз бе? Жақсы, жауап бергеннен кейін келесі қадамға көшеміз.
Біз index.html файлын ашып, кішкене өзгертулер енгізіп, осы жаңа нұсқаны негізгі S3 бакетіне жүктеп салуымыз керек.
Әрі қарай, негізгі S3 бакетінде index.html үшін қазір бізде үш нұсқа бар екеніне көз жеткізіңіз, содан кейін index.html нұсқасы репликация орын алатын бакетте пайда болғанын қайта тексеріңіз.
Қажет болса, парақшаны жаңартып, осы файлдың бар екеніне көз жеткізуге болады.
Енді негізгі S3 бакетіндегі index.html соңғы нұсқасын жоюымыз керек, содан кейін тесттің төртінші сұрағына жауап беруіміз керек.
Сұрақ келесідей.
Негізгі S3 бакетінде index.html соңғы нұсқасын жойғаннан кейін, репликация орын алатын екінші S3 бакетінде не болды? Ол жойылды ма, әлде сол қалпында қалды ма? Сұраққа жауап беріп, оны сақтау керек және мен best practice қамтитын келесі бөлімді қарастырғым келеді.
Атап айтқанда, бұлтта архитектураны құру кезінде деректер мен жүктемелерді сақтау үшін әртүрлі әрекеттерді ескеруіміз керек.
Бүкіл аймаққа қатысты мәселелер туындаса, жүктемелер басқа аймаққа қайта бағытталатындай артық архитектураны құрастырған жөн.
Осылайша сіз пайдаланушыларыңызды жоғалтпайсыз және қолданбаңыз жұмысын жалғастыра береді.
Ал DR-де бәрі оңай емес, бұл - өте қымбат шешім.
Сіз бизнес кейсіңізге байланысты бұл мүмкіндікті қолдау үшін қосымша қаражат бөлуге дайынсыз ба, жоқ па, осыны ескере отырып, жауабыңыз иә болса, онда оны дамыту керек.
AWS бұлты жағында DR баптауға мүмкіндік беретін кең ауқымды сервистер мен функционалдылық қамтамасыз етілген.
Осымен зертханалық жұмыстың барлық тапсырмаларын орындадық.
Енді автоматты бағалау скриптін іске қосуымыз керек.
Ол үшін Submit батырмасын басыңыз.
Содан кейін скриптті біраз уақытқа іске қосыңыз, ол 10 секундқа дейін созылуы мүмкін.
Скрипт жұмысын біткен соң, сіздің ұпайларыңыз және әрбір тапсырма үшін бөлек ұпайлар бар терезе пайда болады.
Егер сіз максималды балл алмасаңыз және оны жақсартқыңыз келсе, тапсырманы қарап шығып, уақытша AWS аккаунтыңызда сәйкес өзгертулер енгізуіңіз керек.
Қажетті өзгерістерді енгізгеннен кейін, автоматты бағалайтын скриптті қайта іске қосу үшін Submit батырмасын қайтадан басу керек.
Осылайша сіз максималды ұпай жинадыңыз деп үміттенемін.
Енді барлық жүйелерден дұрыс шығу керек.
Бұл ең алдымен AWS аккаунтыңызға қатысты.
Жоғарғы оң жақта пайдаланушы атын басып, ашылмалы тізімдегі Log out батырмасын басу керек.
Зертханалық жұмыста да осы әрекеттерді орындау керек.
Оны тоқтату керек, ол үшін End lab батырмасын басып, зертханалық жұмысты тоқтатып жатқаныңызды растаңыз, содан кейін жасалған AWS аккаунтын жою процесі басталғаны туралы хабарды күтіңіз және осы қалқымалы терезені жабуға болады.
Осымен зертханалық жұмысқа кіріспені аяқтап, тапсырманы талдадық.
Сізге енді түсініктірек болды деп үміттенемін, сұрақтарыңыз болса жазыңыз.
Назарларыңызға рахмет, келесі белсенділіктерімізде кездескенше!

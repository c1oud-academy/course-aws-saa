{
    "text": "A company has a web application that uses Amazon CloudFront to distribute its images, videos, and other static contents stored in its S3 bucket to its users around the world. The company has recently introduced a new member-only access feature to some of its high-quality media files. There is a requirement to provide access to multiple private media files only to their paying subscribers without having to change their current URLs.\nWhich of the following is the most suitable solution that you should implement to satisfy this requirement?",
    "answers": [
        {
            "text": "Create a Signed URL with a custom policy which only allows the members to see the private files."
        },
        {
            "text": "Configure your CloudFront distribution to use Field-Level Encryption to protect your private data and only allow access to members."
        },
        {
            "text": "Configure your CloudFront distribution to use Match Viewer as its Origin Protocol Policy which will automatically match the user request. This will allow access to the private content if the request is a paying member and deny it if it is not a member."
        },
        {
            "text": "Use Signed Cookies to control who can access the private files in your CloudFront distribution by modifying your application to determine whether a user should have access to your content. For members, send the required Set-Cookie headers to the viewer which will unlock the content only to them.",
            "right_answer": true
        }
    ]
}
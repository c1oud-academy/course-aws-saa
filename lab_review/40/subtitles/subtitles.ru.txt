Добрый день, уважаемые студенты! 
Я рад вас всех видеть на очередной сессии разбора лабораторной работы.
Тема лабораторной работы – это функционал сервиса Amazon S3, хостинг статических веб-сайтов.
Итак, давайте начнем.
Мы начинаем с основной страницы лабораторной работы в AWS Academy.
Это Guided Lab третьего модуля, называется Hosting a static website.
Здесь нам необходимо нажать на кнопку Start lab, после чего стартует создание временного AWS аккаунта для нашей сессии.
Как только Lab Status станет Ready, вы можете закрывать всплывающее окно, и далее нам необходимо будет нажать на кнопку AWS.
Нажатие этой кнопки направит нас на главную страницу AWS Management Console.
Мы приступаем к выполнению первого задания, и нам необходимо в строке поиска начать вводить S3 и отобразиться нужный нам сервис.
Давайте на него нажмем, чтобы перейти на главную страницу сервиса Amazon S3.
Здесь вы увидите список всех существующих бакетов, они нас не интересуют, нам необходимо создать новый бакет.
Для этого вверху справа нажмем на кнопку Create Bucket.
Нас направит на отдельную страницу, где необходимо ввести некоторые входные данные.
Самое первое - это Bucket Name, его нужно назвать с префиксом website-, далее ввести некоторый рандомный набор цифр, в моем случае это «website-20232023».
Он был не занят на момент создания.
Далее, как AWS Region, необходимо указать us-east-1, это тот регион, на котором будут храниться наши данные.
Прокручиваем чуть ниже, в секции Object Ownership, здесь нам необходимо выбрать ACLs enabled и убедиться в том, что Bucket Owner Preferred был выбран в подсекции Object Ownership.
У нас есть два варианта предоставления публичного доступа S3 бакетам и его объектам.
Первый вариант – это использовать Bucket Policy для того, чтобы предоставить доступ всему бакету.
Это не совсем целесообразно с точки зрения безопасности, и более безопасно – выдать доступ на выбранные объекты.
В этом случае нам необходимо использовать ACL.
Следующая секция – это Block Public Access Settings.
Здесь нам необходимо убрать галочку со всех пунктов и чуть ниже подтвердить, что действительно мы отключаем эту опцию, чтобы предоставить публичный доступ к объектам этого бакета.
Необходимо поставить галочку.
Прокручиваем ниже и нажимаем на кнопку Create Bucket в самом низу страницы.
Как только вы ее нажмете, нас перенаправит на основную страницу сервиса Amazon S3 со списком всех бакетов.
Вы увидите зеленое сообщение о том, что бакет был успешно создан, а также увидите наш новый созданный бакет в списке бакетов.
Давайте теперь нажмем на название бакета, чтобы перейти на главную страницу S3 бакета.
Мы сейчас находимся на главной странице нашего бакета, видим основную информацию, список бакетов и дополнительные вкладки, связанные с этим бакетом.
Сейчас нам необходимо перейти на вкладку Properties и здесь, прокрутив чуть ниже, мы увидим секцию с тегами.
Давайте добавим новую пару ключ-значение, для этого нажмем на кнопку Edit.
Нас направят на отдельную страницу, здесь необходимо нажать на кнопку Add tag.
Появятся два новых поля Key и Value, как Key укажем Department, как Value укажем Marketing и сохраним эти изменения.
Мы остаемся на этой же вкладке Properties нашего бакета, прокрутим в самый низ и увидим секцию, связанную с Static Website Hosting.
Текущий ее статус Disabled, нам необходимо его активировать.
Для этого нажмем на кнопку Edit.
Нас направят на отдельную страницу и здесь мы можем передвинуть переключатель с Disable на Enable.
Далее необходимо убедиться, что Hosting Type выбран Host a Static Website.
Чуть ниже есть поле для ввода имени файла, который выступает файлом по умолчанию, это Index document, давайте введем index.html.
С подобной логикой есть у нас Error document, он опциональный, давайте туда введем error.html и в самом внизу страницы нажмем на кнопку Save changes.
Нас направят на предыдущую страницу, мы увидим сообщение о том, что опция Static Website Hosting была успешно обновлена.
В секции Static Website Hosting мы видим, что она сейчас Enabled, мы видим ее тип.
Также у нас появилось дополнительное поле Bucket Website Endpoint.
Это ссылка, по переходу которой отобразится содержание нашего бакета.
Давайте ее скопируем и откроем в новой вкладке браузера.
Сейчас мы видим, что выходит ошибка 403 Forbidden, это ожидаемо.
Нам необходимо оставить эту вкладку открытой и двигаться дальше к следующему заданию.
Теперь нам необходимо загрузить контент нашего веб-сайта.
Специально для этой лабораторной работы был подготовлен контент.
Для того чтобы его скачать нужно вернуться на страницу лабораторной работы в AWS Academy, под вторым заданием есть три ссылки.
Нам необходимо все три файла скачать, для этого необходимо нажать на правую кнопку мыши и нажать на опцию «Save link as», он сохранит объекты как файл в вашем компьютере.
Как только вы это сделаете, необходимо вернуться к нашему бакету во вкладку Objects и нажать на кнопку Upload в правой части экрана.
Нас направит на страницу загрузки, у нас есть возможность загружать как файлы, так и папки.
Сейчас мы загружаем только файлы, поэтому необходимо нажать на кнопку Add files, вы можете выбрать все три файла сразу и нажать на кнопку Open.
Как только вы это сделаете, отобразится список файлов для загрузки.
Если мы увидим три файла, которые скачали ранее, все отлично.
Необходимо прокрутить вниз страницы и нажать на кнопку Upload.
Нас направит на страницу загрузки этих файлов.
Так как файлы небольшие, количество небольшое, то в течение нескольких секунд загрузка проходит успешно и вы видите зеленое сообщение о том, что процесс загрузки был успешно завершен.
Теперь нам необходимо в правой верхней части нажать на кнопку Close, чтобы вернуться обратно на главную страницу бакета.
Как только мы загрузили, мы можем попробовать открыть нашу ссылку и обновить страницу.
Вы видите, что мы также получаем такую ошибку 403 Forbidden.
Это связано с тем, что мы загрузили наши файлы, но доступ публично еще не выдавали.
Давайте же это сейчас проделаем.
Для этого необходимо на главной странице бакета открыть вкладку Objects.
Далее выбрать все наши три файла, нажать на кнопку Actions и в выпадающем меню в самом низу выбрать опцию Make public using ACL.
Это тот функционал, который мы активировали ранее, поэтому эта опция сейчас активна.
Как только вы на нее нажимаете, нас перенаправляет на отдельную страницу, в котором необходимо подтвердить, что мы выдаем публичный доступ на указанный список файлов.
Да, нам необходимо подтвердить, поэтому нажимаем на кнопку Make public.
Как только мы ее нажимаем, нас направляет на страницу статуса изменения доступности наших объектов, и через буквально короткое время, пару секунд, мы увидим сообщение о том, что все наши файлы, которые мы указывали ранее, теперь доступны публично.
Давайте нажмем на кнопку Close, чтобы вернуться обратно на страницу нашего бакета.
После этого откроем наш веб-сайт и попробуем обновить страницу.
Вы должны увидеть похожую страницу.
Если вы ее видите, то вы все сделали правильно.
Я вас поздравляю, вы создали веб-сайт хостинг, настроили ее с помощью сервиса Amazon S3.
При этом вам не было необходимости поднимать отдельный веб-сервер, его настраивать.
Все готово, все работает.
Это решение изначально высокодоступное и легко масштабируется.
Сейчас мы с вами начинаем последнее четвертое задание.
Необходимо нам попробовать обновить содержание нашего веб-сайта.
Для этого локально в любом текстовом редакторе необходимо открыть файл index.html.
На 40 строчке вы найдете текст «Served from Amazon S3».
Давайте поменяем ее на любое другое значение.
Я вбил «Created by Yelzhan».
Теперь нам необходимо загрузить этот файл в S3 bucket и перезаписать предыдущую версию.
Для этого нажимаем на Upload, выбираем наш файл и обязательно не забываем выдать публичный доступ для этого файла еще раз.
Потому как при загрузке нового файла он становится приватным и публичный доступ нужно выдавать явно.
Для этого необходимо выделить index.html, нажать на кнопку Actions, в выпадающем меню нажать на опцию Make public using ACL.
Далее перепроверить список и подтвердить, что мы выдаем публичный доступ путем нажатия на кнопку Make public.
После того как вы это сделаете, вы можете обновить вашу страницу и вы увидите, что изменения вступили в силу.
В моем случае появился текст «Created by Yelzhan».
Отлично, мы завершили нашу лабораторную работу.
Теперь пару слов о том, как вы можете запустить процесс автоматического оценивания выполнения вашей лабораторной работы.
Для этого необходимо на странице лабораторной работы в AWS Academy нажать на кнопку Submit.
Далее необходимо подтвердить, что мы хотим запустить процесс оценивания.
Нажимаем на кнопку Yes и через какое-то время процесс начнется.
Необходимо подождать несколько секунд, может занимать до 10 секунд.
В зависимости от сложности лабораторной работы вы будете видеть соответствующее сообщение о том, что отчет генерируется и через какое-то время вы увидите всплывающее окно о том, что вы получили n-ное количество баллов.
Я получил 20 баллов из 20.
Мы с вами верно выполнили все задания.
С этим вас поздравляю.
Если у вас не будет максимальное количество баллов и вы хотите получить максимальный балл, вы можете не завершая эту лабораторную работу, внести соответствующие изменения в AWS аккаунте, после чего запустить процесс оценивания еще раз.
Для этого надо нажать кнопку Submit и после этого все ваши изменения будут оцениваться еще раз.
На этом мы завершаем лабораторную работу.
Я хотел бы напомнить, что нам необходимо выйти со всех систем.
В первую очередь это AWS Account.
Необходимо вверху справа нажать на имя нашего пользователя и нажать на кнопку Sign out, чтобы разлогиниться.
Далее в основной странице лабораторной работы в AWS Academy необходимо нажать на кнопку End lab.
Выйдет всплывающее окно с подтверждением, нажимаем на кнопку «Yes» и снова выходит всплывающее окно.
Здесь мы должны увидеть сообщение о том, что процесс удаления ресурсов индицирован и мы можем закрывать это окно и выходить с AWS Academy.
Отлично, на этом мы завершили нашу лабораторную работу.
Я очень надеюсь, что вы получили более полное представление о сервисе Amazon S3, в частности функционал хостинга статических веб-сайтов.
Спасибо за внимание, увидимся с вами на следующих наших активностях.

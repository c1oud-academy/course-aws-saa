WEBVTT

00:00:00.000 --> 00:00:07.000
Добрый день, уважаемые студенты! Рад вас видеть
на очередной сессии разбора лабораторной работы.

00:00:07.000 --> 00:00:11.488
Тема сегодняшней лабораторной
работы - это создание VPC и

00:00:11.512 --> 00:00:16.000
всех ее компонентов в рамках
нашего бизнес-кейса с кафе.

00:00:16.000 --> 00:00:26.000
Итак, давайте начнем. Начинаем с основной 
страницы AWS Management Console.

00:00:26.000 --> 00:00:30.488
Здесь нам необходимо перейти 
в сервис VPC. Для этого необходимо

00:00:30.512 --> 00:00:35.000
воспользоваться строкой поиска
сервисов и начать вводить VPC.

00:00:35.000 --> 00:00:38.000
Самая первая ссылка - это
та ссылка, которая нам нужна.

00:00:38.000 --> 00:00:42.988
На основной странице сервиса
VPC нам необходимо воспользоваться

00:00:43.012 --> 00:00:48.000
навигационным меню слева и
перейти в раздел существующих VPC.

00:00:48.000 --> 00:00:53.645
Здесь мы видим, что для нас уже в
рамках лабораторной работы была создана

00:00:53.669 --> 00:00:59.000
Lab VPC, на базе которой мы будем
создавать оставшиеся компоненты.

00:00:59.000 --> 00:01:03.123
Первым делом необходимо 
создать subnets. Для этого в

00:01:03.147 --> 00:01:08.000
левом навигационном меню
необходимо выбрать пункт Subnets.

00:01:08.000 --> 00:01:15.000
Здесь необходимо в открывшейся странице
вверху справа нажать на кнопку Create Subnet.

00:01:15.000 --> 00:01:22.000
В самом начале необходимо будет
выбрать VPC, в нашем случае Lab VPC.

00:01:22.000 --> 00:01:27.000
Далее необходимо будет ввести Subnet
name, в нашем случае это Public Subnet.

00:01:27.000 --> 00:01:32.776
Чуть ниже необходимо будет 
выбрать Availability Zone. В рамках

00:01:32.800 --> 00:01:40.000
лабораторной работы должна быть
первая Availability Zone и это us-east-1a.

00:01:40.000 --> 00:01:45.529
И как CIDR блок для нашего subnet
нам необходимо скопировать значение

00:01:45.553 --> 00:01:51.000
с задания лабораторной работы и
ввести ее в соответствующее поле.

00:01:51.000 --> 00:01:57.000
После чего необходимо прокрутить до конца
страницы и нажать на кнопку Create Subnet.

00:01:57.000 --> 00:02:02.988
Как только мы нажмем на кнопку
Create Subnet, нас направят на страницу

00:02:03.012 --> 00:02:09.000
со списком всех subnets и отфильтрованные
по нашему созданному subnet.

00:02:09.000 --> 00:02:15.000
Теперь нам необходимо этот Public
Subnet сделать фактически Public.

00:02:15.000 --> 00:02:21.000
Для этого необходимо в левом навигационном
меню перейти в пункт Internet Gateways.

00:02:21.000 --> 00:02:24.988
Здесь мы также создаем
новый ресурс, для этого в верхней

00:02:25.012 --> 00:02:29.000
правой части нажимаем на
кнопку Create Internet Gateway.

00:02:29.000 --> 00:02:35.090
Во время создания Internet gateway много входных
 данных вводить не нужно, достаточно ввести

00:02:35.114 --> 00:02:41.000
имя этого ресурса, в нашем случае это Lab IGW.
То есть сокращенно от Internet Gateway.

00:02:41.000 --> 00:02:47.000
И после чего можем в нижней части страницы
нажать на кнопку Create Internet Gateway.

00:02:47.000 --> 00:02:51.988
Как только мы это сделаем, нас
направят на основную страницу ресурса,

00:02:52.012 --> 00:02:57.000
в нашем случае Internet Gateway, и
вы увидите, что состояние Detached.

00:02:57.000 --> 00:03:03.000
Также в уведомлении зеленым
цветом вы увидите кнопку Attach to VPC.

00:03:03.000 --> 00:03:07.488
Это значит, что нам
необходимо этот Internet Gateway

00:03:07.512 --> 00:03:12.000
привязать к одному из VPC,
в нашем случае это Lab VPC.

00:03:12.000 --> 00:03:15.996
Давайте нажмем на эту
кнопку, нас направят на страницу

00:03:16.020 --> 00:03:21.000
настройки, здесь необходимо
выбрать VPC, в нашем случае Lab VPC.

00:03:21.000 --> 00:03:27.000
Выбираем ее и в нижней части страницы
нажимаем на кнопку Attach Internet Gateway.

00:03:27.000 --> 00:03:31.223
Как только мы это сделаем, вы
увидите соответствующее сообщение,

00:03:31.247 --> 00:03:35.000
что Internet Gateway был
успешно привязан к этому VPC.

00:03:35.000 --> 00:03:38.988
Также вы увидите, что
состояние поменялось на

00:03:39.012 --> 00:03:44.000
Attached, и в поле VPC ID
стоит ссылка на наш Lab VPC.

00:03:44.000 --> 00:03:48.728
Теперь нам необходимо
настроить Route Table, для этого

00:03:48.752 --> 00:03:55.000
воспользуемся навигационным меню
слева и выберем пункт Route Tables.

00:03:55.000 --> 00:04:03.046
Здесь, как мы знаем, при создании VPC
создается дефолтовый Route Table, мы

00:04:03.070 --> 00:04:12.000
можем воспользоваться ею и создать
необходимые Routes для нашего Public Subnet.

00:04:12.000 --> 00:04:16.024
В вашем случае может
отобразиться несколько Route Tables,

00:04:16.048 --> 00:04:20.000
вы можете найти правильные,
посмотрев на столбец VPC.

00:04:20.000 --> 00:04:30.595
Там будет VPC ID и через разделитель название VPC.
Давайте ее выберем и в открывшемся блоке страницы

00:04:30.619 --> 00:04:41.000
с данными этого ресурса необходимо выбрать
вкладку Routes и нажать на кнопку Edit Routes.

00:04:41.000 --> 00:04:45.988
На следующей странице нам необходимо
будет как Destination указать весь

00:04:46.012 --> 00:04:51.000
интернет и через интернет мы будем
выходить через наш Internet Gateway.

00:04:51.000 --> 00:04:57.000
Как только мы заполним необходимые
поля, мы можем сохранить изменения.

00:04:57.000 --> 00:05:04.089
Как только мы это сделаем, мы увидим
соответствующее сообщение, если перейдем на

00:05:04.113 --> 00:05:12.000
страницу subnets, то увидим наш Public Subnet и
все необходимые компоненты для него были созданы.

00:05:12.000 --> 00:05:15.992
И он не только в названии
является Public, а также

00:05:16.016 --> 00:05:21.070
фактически является Public
Subnet, ресурсы созданные в рамках

00:05:21.094 --> 00:05:25.031
этого Subnet могут
выходить в интернет, также из

00:05:25.055 --> 00:05:30.000
интернета можно обращаться
к ресурсам внутри этого Subnet.

00:05:30.000 --> 00:05:37.000
Следующим шагом нам необходимо создать
Bastion Host. Для этого воспользуемся сервисом EC2.

00:05:37.000 --> 00:05:42.000
Необходимо будет в строке поиска сервисов
начать вводить EC2 и перейти по первой ссылке.

00:05:42.000 --> 00:05:46.575
Как только мы окажемся на основной
странице сервиса EC2, необходимо нажать

00:05:46.599 --> 00:05:51.000
на кнопку Launch Instance и нас направит
на страницу ввода входных данных.

00:05:51.000 --> 00:05:57.488
Здесь как Name введем Bastion Host, 
далее как операционную систему

00:05:57.512 --> 00:06:04.000
выберем Amazon Linux и как AMI
выберем Amazon Linux 2 AMI (HVM).

00:06:04.000 --> 00:06:07.712
Прокрутим чуть ниже, как
Instance Type необходимо будет

00:06:07.736 --> 00:06:12.000
выбрать t2.micro, если этого
варианта нет, выберем t3.micro.

00:06:12.000 --> 00:06:20.000
Как Key Pair выберем vockey и в секции Network
Settings необходимо будет нажать на кнопку Edit.

00:06:20.000 --> 00:06:22.000
Мы будем вносить
некоторые изменения.

00:06:22.000 --> 00:06:29.000
Как VPC необходимо будет выбрать Lab VPC,
как Subnet выбираем Public Subnet, нами созданный.

00:06:29.000 --> 00:06:34.488
Для поля Auto-assign Public IP
необходимо будет его отключить, так как

00:06:34.512 --> 00:06:40.000
мы будем создавать Elastic IP
Address и привязывать к этому инстансу.

00:06:40.000 --> 00:06:47.000
Далее необходимо будет выбрать опцию Create
Security Group, как имя ввести Bastion Host SG.

00:06:47.000 --> 00:06:52.988
После чего необходимо будет нажать
на кнопку Add Security Group Rule

00:06:53.012 --> 00:06:59.000
в секции Inbound Security Group
Rules и добавить следующее правило.

00:06:59.000 --> 00:07:05.988
Мы разрешаем SSH трафик, как Source
указываем MyIP, вводится мой публичный IP

00:07:06.012 --> 00:07:13.000
адрес с размером CIDR блока 32, в котором
находится один единственный IP адрес.

00:07:13.000 --> 00:07:17.019
Как Description необходимо будет
указать некоторые значения, чтобы

00:07:17.043 --> 00:07:21.000
вы в будущем могли идентифицировать
для чего оно было создано.

00:07:21.000 --> 00:07:25.000
В моем случае это SSH и
Yelzhan, имя пользователя.

00:07:25.000 --> 00:07:34.000
Как только введем эти настройки, можем в правой
части страницы нажать на кнопку Launch Instance.

00:07:34.000 --> 00:07:44.173
Нас направит на страницу с сообщением, что создание
инстанса было инициировано, мы можем нажать на

00:07:44.197 --> 00:07:55.000
ссылку с ID инстанса и перейти на страницу со списком
инстансов и отфильтрованным по нашему инстансу.

00:07:55.000 --> 00:08:02.988
Через некоторое время состояние инстанса
перейдет в Running и пока это происходит, мы вне

00:08:03.012 --> 00:08:11.000
зависимости от этого можем продолжить
создание следующих ресурсов, это Elastic IP address.

00:08:11.000 --> 00:08:17.000
Для этого в левом навигационном меню
необходимо выбрать опцию Elastic IPs.

00:08:17.000 --> 00:08:23.485
Здесь необходимо будет нажать на
кнопку Allocate Elastic IP Address и на

00:08:23.509 --> 00:08:31.000
странице для ввода входных данных
выбрать опцию Amazon's Pool of IPv4 Addresses.

00:08:31.000 --> 00:08:35.488
Все остальные настройки
оставляем по умолчанию, необходимо

00:08:35.512 --> 00:08:40.000
прокрутить до конца страницы
и нажать на кнопку Allocate.

00:08:40.000 --> 00:08:49.537
Как только мы это сделаем, нас направят на страницу
со списком Elastic IP address, вы также увидите

00:08:49.561 --> 00:08:59.000
в сообщении, что необходимо этот Elastic IP
address ассоциировать с ресурсом, что мы и сделаем.

00:08:59.000 --> 00:09:03.988
Один из вариантов это нажать
на кнопку Associate this Elastic IP

00:09:04.012 --> 00:09:09.000
address вверху страницы, либо
выбрать этот Elastic IP address.

00:09:09.000 --> 00:09:13.488
Далее нажать на кнопку Actions и в
выпадающем меню выбрать опцию

00:09:13.512 --> 00:09:18.000
Associate Elastic IP address.
Он направит нас на ту же страницу.

00:09:18.000 --> 00:09:21.575
На странице настроек необходимо
будет выбрать, к какому ресурсу

00:09:21.599 --> 00:09:25.000
мы привязываем это либо
Network Interface, либо Instance.

00:09:25.000 --> 00:09:31.129
В нашем случае это Instance. Как только 
мы ее выберем, необходимо будет в поле

00:09:31.153 --> 00:09:38.000
ниже, где Instance, выбрать наш
EC2 Instance с именем Bastion Host.

00:09:38.000 --> 00:09:45.000
Как только мы это сделаем, можем прокрутить
до конца страницы и нажать на кнопку Associate.

00:09:45.000 --> 00:09:50.988
Как только мы это проделаем, мы
получим сообщение о том, что Elastic

00:09:51.012 --> 00:09:57.000
IP address был успешно привязан
к ресурсу, к инстансу с таким-то ID.

00:09:57.000 --> 00:10:03.529
Это значит, что наш EC2 инстанс помимо
того, что может выходить в интернет, также

00:10:03.553 --> 00:10:10.000
из интернета он доступен и к нему можно
обратиться по статическому IP Адресу.

00:10:10.000 --> 00:10:19.000
Этот IP Адрес вы
видите на нашем экране.

00:10:19.000 --> 00:10:27.000
Давайте проверим, действительно ли мы можем
подключаться к нашему EC2 инстансу в Public Subnet.

00:10:27.000 --> 00:10:32.988
Для этого необходимо скачать private key.
Мы возвращаемся на страницу лабораторной

00:10:33.012 --> 00:10:39.000
работы, нажимаем на кнопку Details и в
выпадающем списке нажимаем на кнопку Show.

00:10:39.000 --> 00:10:46.988
Во всплывающем окне необходимо скачать PPK
ключ, если это Windows операционная система,

00:10:47.012 --> 00:10:55.000
если вы работаете с Linux операционной системой
или MacOS, необходимо будет скачать PEM ключ.

00:10:55.000 --> 00:10:59.058
Как только вы это сделаете, в
случае с Windows операционной

00:10:59.082 --> 00:11:03.000
системой вам необходимо
будет скачать программу PuTTY.

00:11:03.000 --> 00:11:08.173
Мы неоднократно работали с этой
программой на предыдущих наших лабораторных

00:11:08.197 --> 00:11:14.000
работах, поэтому она скорее всего уже
установлена, необходимо будет ее запустить.

00:11:14.000 --> 00:11:24.000
Также мы с вами ранее уже подключались с
использованием PPK ключа к другим инстансам.

00:11:24.000 --> 00:11:31.037
И если у вас есть сохраненная сессия,
вы можете ее подгрузить, после чего

00:11:31.061 --> 00:11:38.000
ввести в поле для ввода IP адреса
IP адрес нашего Elastic IP ресурса.

00:11:38.000 --> 00:11:49.388
Если созданной сессии нет, можете в левом
навигационном меню программы PuTTY пройти по пути

00:11:49.412 --> 00:12:00.000
Connection, SSH, Auth и Credentials, и для
соответствующего поля указать путь приватного ключа.

00:12:00.000 --> 00:12:04.655
После чего вы можете вернуться
обратно на вкладку Session, самая

00:12:04.679 --> 00:12:10.000
первая вкладка, и здесь ввести
публичный IP адрес нашего EC2 инстанса.

00:12:10.000 --> 00:12:15.635
Как только мы введем все необходимые настройки,
мы можем нажать на кнопку Open. Откроется

00:12:15.659 --> 00:12:22.000
командная строка и вы увидите подобное сообщение,
если вы впервые подключаетесь к этому инстансу.

00:12:22.000 --> 00:12:27.087
Так как это нами созданный
инстанс и мы доверяем ему, мы можем

00:12:27.111 --> 00:12:32.114
нажать на кнопку Accept.
При всех других случаях необходимо

00:12:32.138 --> 00:12:37.185
удостовериться, что вы
подключаетесь к доверенному инстансу,

00:12:37.209 --> 00:12:42.000
и только после этого вы
подтверждаете ваше подключение.

00:12:42.000 --> 00:12:46.419
Как только нажмем на кнопку
Accept, необходимо будет указать

00:12:46.443 --> 00:12:51.988
пользователя, дефолтовые пользователи
для Amazon Linux, это ec2-user.

00:12:52.012 --> 00:12:56.994
Как только мы это введем и нажмем на
кнопку Enter, мы увидим сообщение

00:12:57.018 --> 00:13:02.000
о том, что мы успешно авторизованы
и увидим промпт для ввода команд.

00:13:02.000 --> 00:13:09.988
Это значит, что мы успешно смогли удаленно
подключиться к нашему EC2 инстансу в public subnet,

00:13:10.012 --> 00:13:18.000
используя публичный IP адрес. Отлично, поздравляю,
мы завершили задание и переходим к следующему.

00:13:18.000 --> 00:13:25.198
В рамках следующего задания нам необходимо создать
private subnet и все необходимые для него компоненты.

00:13:25.222 --> 00:13:32.000
Для этого мы в строке поиска сервисов начнем
вводить VPC и перейдем к соответствующему сервису.

00:13:32.000 --> 00:13:35.638
Далее воспользуемся левым
навигационным меню и выберем

00:13:35.662 --> 00:13:39.781
пункт Subnets. Здесь необходимо 
будет создать новый subnet,

00:13:39.805 --> 00:13:43.679
для этого нажмем на кнопку
Create subnet и в открывшейся

00:13:43.703 --> 00:13:48.000
странице для ввода входных
данных начнем эти данные вводить.

00:13:48.000 --> 00:13:51.497
Как VPC ID мы выбираем
Lab VPC и как Subnet Name

00:13:51.521 --> 00:13:55.764
необходимо будет написать 
Private subnet. Прокрутим чуть

00:13:55.788 --> 00:13:59.997
ниже, как Availability zone
выбираем первую availability

00:14:00.021 --> 00:14:04.000
zone в этом регионе, в
нашем случае это us-east-1a.

00:14:04.000 --> 00:14:08.770
И как значение CIDR block
необходимо будет скопировать со

00:14:08.794 --> 00:14:13.564
страницы задания лабораторной
работы, в нашем случае это

00:14:13.588 --> 00:14:18.522
10.0.1.0/24. Как только мы введем
 все эти данные, мы можем

00:14:18.546 --> 00:14:24.000
прокрутить до конца страницы
и нажать на кнопку Create subnet.

00:14:24.000 --> 00:14:30.488
Мы видим, что наш subnet был успешно создан,
теперь мы создаем следующие компоненты,

00:14:30.512 --> 00:14:37.000
для этого воспользуемся левым навигационным
меню и перейдем к пункту NAT gateways.

00:14:37.000 --> 00:14:43.488
У нас созданных NAT gateways не имеется,
поэтому нажмем на кнопку Create NAT gateway.

00:14:43.512 --> 00:14:50.000
Здесь в открывшейся странице для ввода
входных данных как Name введем Lab NAT Gateway.

00:14:50.000 --> 00:14:55.519
Далее, как Subnet выберем Public subnet, то
есть наш NAT Gateway будет находиться в public

00:14:55.543 --> 00:15:01.000
subnet и будет давать возможность ресурсам
из private subnet подключаться к интернету.

00:15:01.000 --> 00:15:06.570
Прокрутим чуть ниже, и мы с вами
помним, что при создании NAT Gateway

00:15:06.594 --> 00:15:12.000
необходимо его ассоциировать с
публичным статическим IP адресом.

00:15:12.000 --> 00:15:20.488
И здесь есть возможность путем нажатия на кнопки
Allocate IP address создать ресурс Elastic IP и так

00:15:20.512 --> 00:15:29.000
как мы ее создаем в рамках создания NAT Gateway,
то ID Elastic IP впишется в соответствующее поле.

00:15:29.000 --> 00:15:36.000
После чего нам необходимо будет прокрутить до
конца страницы и нажать на кнопку Create NAT Gateway.

00:15:36.000 --> 00:15:46.000
Как только мы создадим NAT Gateway, останется
буквально последний шаг, это работа с route table.

00:15:46.000 --> 00:15:52.000
Необходимо будет воспользоваться левым
навигационным меню и перейти к пункту Routes tables.

00:15:52.000 --> 00:16:01.000
Ранее мы с вами использовали дефолтовый
route table для привязки ее к public subnet.

00:16:01.000 --> 00:16:08.000
Сейчас нам необходимо создать отдельный route
table для того чтобы привязать его к private subnet.

00:16:08.000 --> 00:16:13.742
Итак, давайте нажмем на кнопку Create
route table, в открывшейся странице для ввода

00:16:13.766 --> 00:16:20.000
входных данных нам необходимо ввести имя
Private route table и как VPC выбрать Lab VPC.

00:16:20.000 --> 00:16:23.000
После чего мы можем нажать
на кнопку Create route table.

00:16:23.000 --> 00:16:31.000
Наш route table создастся и мы
перейдем на основную страницу ресурса.

00:16:31.000 --> 00:16:35.488
Здесь во вкладке Routes увидим,
что у нас только один единственный

00:16:35.512 --> 00:16:40.000
дефолтовый rule, который помогает
общаться с ресурсом внутри VPC.

00:16:40.000 --> 00:16:48.000
Нам необходимо нажать на кнопку Edit routes и
здесь необходимо будет добавить новый route.

00:16:48.000 --> 00:16:54.000
Как Destination необходимо указать
обозначение интернета, это все нули слеш ноль.

00:16:54.000 --> 00:16:58.988
Далее, как Target указать NAT
gateway, то есть ресурсы находящиеся

00:16:59.012 --> 00:17:04.000
в private subnet будут подключаться
к интернету через NAT gateway.

00:17:04.000 --> 00:17:06.000
А NAT gateway у нас
находится в public subnet.

00:17:06.000 --> 00:17:13.000
Как только мы заполним эти два поля,
мы можем нажать на кнопку Save changes.

00:17:13.000 --> 00:17:18.000
Отлично, на этом мы почти
подготовили наш route table.

00:17:18.000 --> 00:17:23.488
Не забывайте, что route table это
независимый отдельный ресурс и если вы

00:17:23.512 --> 00:17:29.000
работаете с кастомным route table
необходимо явно привязать его к subnet.

00:17:29.000 --> 00:17:38.086
Ранее нам не пришлось привязывать route table
к subnet, так как это был дефолтовый route table

00:17:38.110 --> 00:17:47.000
и дефолтовый route table он привязывается ко
всем subnet, которые создаются в рамках VPC.

00:17:47.000 --> 00:17:51.988
В нашем случае мы создали
кастомный route table и здесь

00:17:52.012 --> 00:17:57.000
необходимо привязать его
явно к нашему private subnet.

00:17:57.000 --> 00:18:01.733
Для этого необходимо перейти
во вкладку Subnet associations

00:18:01.757 --> 00:18:06.000
и здесь нажать на кнопку
Edit subnet associations.

00:18:06.000 --> 00:18:15.000
Нас направят на страницу с subnet, здесь
отображаются все subnets доступные в рамках VPC.

00:18:15.000 --> 00:18:18.000
Вы увидите, что есть
public subnet и private subnet.

00:18:18.000 --> 00:18:23.345
Оба они привязаны к дефолтовому route
table, вы это видите в соответствующем

00:18:23.369 --> 00:18:28.000
столбце, это последний столбец в
рамках этой небольшой таблицы.

00:18:28.000 --> 00:18:37.000
На этой странице нам необходимо будет выбрать
Private subnet и нажать на кнопку Save associations.

00:18:37.000 --> 00:18:43.558
Что произойдет? Мы с вами помним, что subnet
может быть ассоциирован только с одним route table

00:18:43.582 --> 00:18:50.000
в один момент времени, тогда как один route
table может использоваться в нескольких subnet.

00:18:50.000 --> 00:18:58.488
Поэтому привязка private subnet к
дефолтовому route table удалится

00:18:58.512 --> 00:19:07.000
и создается новая связка private
subnet с кастомным route table.

00:19:07.000 --> 00:19:14.000
Отлично, как только мы это сделали, мы можем в списке
Subnet associations увидеть наш private subnet.

00:19:14.000 --> 00:19:20.988
Также увидим соответствующее
сообщение о том, что route table

00:19:21.012 --> 00:19:28.000
с таким то ID был успешно
привязан к нашему private subnet.

00:19:28.000 --> 00:19:35.026
Мы произвели все необходимые настройки, теперь
необходимо проверить все ли корректно работает

00:19:35.050 --> 00:19:42.000
и есть ли возможность подключаться из
интернета к ресурсам, находящимся в private subnet.

00:19:42.000 --> 00:19:49.193
Для этого необходимо создать инстанс, переходим
 к сервису EC2, далее на основной странице

00:19:49.217 --> 00:19:56.000
сервиса EC2 нажимаем на кнопку Launch
instance и начинаем вводить входные данные.

00:19:56.000 --> 00:20:01.529
Как Name указываем Private instance,
далее выбираем как операционную

00:20:01.553 --> 00:20:07.000
систему Amazon Linux, как AMI
выбираем Amazon Linux 2 AMI (HVM).

00:20:07.000 --> 00:20:17.000
Как Instance Type выбираем t2.micro и в секции
приватного ключа нам необходимо будет создать новый.

00:20:17.000 --> 00:20:23.971
Для этого нажимаем на кнопку Create new
key pair указываем отличное от предыдущего

00:20:23.995 --> 00:20:32.000
приватного ключа имя, пусть это будет vockey2 и
необходимо будет выбрать правильный формат.

00:20:32.000 --> 00:20:36.488
Напоминаю, что если вы работаете с
Windows операционной системой вам

00:20:36.512 --> 00:20:41.000
необходимо будет выбрать формат
PPK, он подходит для программы PuTTY.

00:20:41.000 --> 00:20:49.000
Если вы работаете с MacOS либо с Linux операционной
системой вам необходимо выбрать формат PEM.

00:20:49.000 --> 00:20:55.000
Отлично, выбрали формат, ввели имя, теперь
необходимо нажать на кнопку Create key pair.

00:20:55.000 --> 00:21:03.000
Как только вы ее нажмете, вам будет предложено
сохранить приватный ключ на локальном компьютере.

00:21:03.000 --> 00:21:09.000
Это единственный кейс, когда вы этот приватный
ключ можете скачать, поэтому сохраняем ее.

00:21:09.000 --> 00:21:16.071
Далее, в следующей секции настройках сети
необходимо будет выбрать Lab VPC, как Subnet

00:21:16.095 --> 00:21:24.000
выбираем Private subnet и чуть ниже необходимо
 будет выбрать опцию Create security group.

00:21:24.000 --> 00:21:28.488
Мы создаем новую security
группу, нам необходимо будет в

00:21:28.512 --> 00:21:33.000
секции Inbound security group
rules добавить новый rule.

00:21:33.000 --> 00:21:37.578
Здесь мы указываем SSH
traffic, как Source type указываем

00:21:37.602 --> 00:21:43.000
Custom и в Source указываем
security группу нашего bastion host.

00:21:43.000 --> 00:21:49.988
Это значит, что только subnets,
к которым привязана эта security

00:21:50.012 --> 00:21:57.000
группа, может быть использована
как инициатор подключения по SSH.

00:21:57.000 --> 00:22:03.000
Только ресурсы из public subnet
смогут подключаться к этому инстансу.

00:22:03.000 --> 00:22:11.000
Как Description укажем Bastion host SG, чтобы
легче было понимать для чего этот rule был создан.

00:22:11.000 --> 00:22:15.057
Отлично, мы ввели все необходимые
настройки, теперь мы можем

00:22:15.081 --> 00:22:19.000
в правой части экрана нажать
на кнопку Launch instance.

00:22:19.000 --> 00:22:27.000
Пока наш инстанс будет создаваться, давайте
попробуем ответить на следующий вопрос.

00:22:27.000 --> 00:22:35.000
У нас есть созданный bastion host в public subnet, к
нему мы уже можем подключаться, мы это проверили.

00:22:35.000 --> 00:22:42.000
Теперь мы в private subnet создаем другой
инстанс и идея в том, чтобы подключаться к нему.

00:22:42.000 --> 00:22:48.000
Мы создали bastion host специально, чтобы
подключаться к ресурсам в private subnet, это хорошо.

00:22:48.000 --> 00:22:52.988
Но представьте, как это будет выглядеть,
для того чтобы подключиться к bastion

00:22:53.012 --> 00:22:58.000
host, мы используем приватный ключ
сохраненный локально на нашем компьютере.

00:22:58.000 --> 00:23:02.000
И с локального компьютера
инициируем SSH соединение.

00:23:02.000 --> 00:23:08.128
Теперь, для того чтобы с bastion host
инициировать SSH соединение к инстансу из

00:23:08.152 --> 00:23:14.673
private subnet, нам также на bastion
host-е, то есть локально с того места, где мы

00:23:14.697 --> 00:23:21.336
инициируем SSH соединение, необходимо,
чтобы был приватный ключ, а именно тот ключ,

00:23:21.360 --> 00:23:28.000
который мы создали и после чего у нас
получится подключиться к приватному инстансу.

00:23:28.000 --> 00:23:33.988
Это не самый лучший вариант с точки зрения
безопасности, так как bastion host это то место,

00:23:34.012 --> 00:23:40.000
где все сотрудники подключаются к нему, а дальше
от него подключаются к необходимым ресурсам.

00:23:40.000 --> 00:23:44.988
Так как в компании могут работать
различные команды, то и targets,

00:23:45.012 --> 00:23:50.000
куда они в конечном счете будут
подключаться, могут отличаться.

00:23:50.000 --> 00:23:55.804
И эти места используют различные приватные ключи.
Если вы в bastion host сохраните ваш приватный

00:23:55.828 --> 00:24:02.000
ключ, то другие пользователи могут воспользоваться
этим ключом и не авторизованно его использовать.

00:24:02.000 --> 00:24:09.500
Поэтому как решение командой разработки
программы PuTTY, была создана еще одна

00:24:09.524 --> 00:24:18.000
дополнительная программа, это больше как
плагин к программе PuTTY называется Pageant.

00:24:18.000 --> 00:24:25.488
Идея ее в том, что вы можете,
сохранив все ключи локально в месте, где

00:24:25.512 --> 00:24:33.000
инициируется SSH подключение,
подключаться к инстансам последовательно.

00:24:33.000 --> 00:24:38.488
То есть мы можем локально с нашего
компьютера, сохранив приватные ключи только

00:24:38.512 --> 00:24:44.000
на этом компьютере, через bastion host
подключиться к инстансу в private subnet.

00:24:44.000 --> 00:24:48.988
Таким образом, используя эту
программу, нам нет необходимости

00:24:49.012 --> 00:24:54.000
приватный ключ от private
instance хранить в bastion host.

00:24:54.000 --> 00:24:58.232
Согласитесь, это очень
удобная и хорошая программа.

00:24:58.256 --> 00:25:03.000
Давайте теперь посмотрим как она
работает и как ее необходимо настроить.

00:25:03.000 --> 00:25:08.553
Первым делом необходимо ее скачать, устанавливать
 ее не нужно, как только вы запускаете

00:25:08.577 --> 00:25:14.000
exe, запускается сама программа и здесь
необходимо будет нажать на кнопку Add key.

00:25:14.000 --> 00:25:18.488
Далее, необходимо будет
выбрать оба наших ключа и добиться

00:25:18.512 --> 00:25:23.000
того, чтобы они отобразились
в списке приватных ключей.

00:25:23.000 --> 00:25:29.000
После этого мы произвели все необходимые настройки
в программе Pageant, можем нажать на кнопку Close.

00:25:29.000 --> 00:25:34.000
Далее, уже на стороне PuTTY необходимо
активировать соответствующий функционал.

00:25:34.000 --> 00:25:41.488
А именно в левом навигационном меню
необходимо выбрать страницу Auth и на самой

00:25:41.512 --> 00:25:49.000
странице необходимо будет поставить
галочку для опции Allow agent forwarding.

00:25:49.000 --> 00:25:54.109
Как только вы это сделаете,
вам далее останется выбрать

00:25:54.133 --> 00:26:00.000
приватный ключ от bastion
host, это на странице Credentials.

00:26:00.000 --> 00:26:07.000
Самое первое поле необходимо будет нажать на
кнопку Browse и указать путь для нашего PPK ключа.

00:26:07.000 --> 00:26:11.488
После этого необходимо будет
нам скопировать публичный IP

00:26:11.512 --> 00:26:16.000
адрес от bastion host, это мы
можем сделать двумя путями.

00:26:16.000 --> 00:26:20.243
Первый - это в списке EC2
инстансов, если выбрать наш

00:26:20.267 --> 00:26:25.000
bastion host, то в метаданных
есть соответствующее поле.

00:26:25.000 --> 00:26:32.000
Также мы можем подсмотреть публичный
IP адрес в списке Elastic IP адресов.

00:26:32.000 --> 00:26:41.000
Как только мы скопировали IP адрес, необходимо
его вставить в PuTTY и нажать на кнопку Open.

00:26:41.000 --> 00:26:45.844
Здесь необходимо будет ввести
название пользователя в нашем случае

00:26:45.868 --> 00:26:50.488
это ec2-user нажимаем на Enter
и вы увидите промпт, где можно

00:26:50.512 --> 00:26:55.356
будет вводить команды, это означает
то что мы успешно подключились

00:26:55.380 --> 00:27:00.000
к нашему bastion host. Здесь 
отображается приватный IP адрес.

00:27:00.000 --> 00:27:06.000
Теперь нам необходимо попробовать
подключиться к инстансу в private subnet.

00:27:06.000 --> 00:27:14.000
Для этого вернемся обратно на страницу со списками
EC2 инстансов и выберем наш private instance.

00:27:14.000 --> 00:27:19.235
Обратите внимание, что у него отсутствует
публичный IP адрес, это корректно, так как

00:27:19.259 --> 00:27:25.000
этот инстанс был создан в private subnet и из
интернета к нему подключиться не получится.

00:27:25.000 --> 00:27:33.612
Но у него есть private IP адрес и мы будем его
использовать, так как bastion host и этот private

00:27:33.636 --> 00:27:42.000
instance находятся в одном VPC, они могут
подключаться друг к другу через приватный IP адреса.

00:27:42.000 --> 00:27:52.125
Давайте скопируем это значение и инициируем
подключение команды, SSH пробел далее имя

00:27:52.149 --> 00:28:04.000
пользователя это ec2-user и через символ собачкой
приватный IP адрес инстанса в private subnet.

00:28:04.000 --> 00:28:09.296
Как только мы написали команду, нажимаем
на кнопку Enter, далее подтверждаем, что мы

00:28:09.320 --> 00:28:15.000
действительно хотим подключиться к этому
инстансу, вводим команду Yes и нажимаем Enter.

00:28:15.000 --> 00:28:23.000
После чего вы увидите, что появится промпт и IP адрес
поменялся, это IP адрес нашего private instance.

00:28:23.000 --> 00:28:33.000
Отлично, я вас поздравляю, мы смогли успешно
подключиться к private instance в private subnet.

00:28:33.000 --> 00:28:38.950
Теперь самая последняя проверка,
нам необходимо убедиться, что

00:28:38.974 --> 00:28:46.000
действительно этот инстанс в private
subnet может выходить в интернет.

00:28:46.000 --> 00:28:53.488
Для этого можем ввести следующую
команду ping и IP адрес со всеми восьмерками

00:28:53.512 --> 00:29:01.000
это DNS google, либо можем ввести URL
адрес любого из знакомых вам веб-сайтов.

00:29:01.000 --> 00:29:09.988
Давайте введем ping и google.com, вы видите,
что в первом, что во втором случае, обмениваются

00:29:10.012 --> 00:29:19.000
успешно пакеты, что говорит о том, что у
инстансов в private subnet есть выход в интернет.

00:29:19.000 --> 00:29:24.142
Если у вас действительно также,
это говорит о том, что все настройки

00:29:24.166 --> 00:29:30.000
необходимые до этого момента, мы
произвели верно, все корректно настроили.

00:29:30.000 --> 00:29:35.488
Мы с вами переходим к следующему
заданию и у нас остался еще один компонент, это

00:29:35.512 --> 00:29:41.000
Network ACL, еще один компонент VPC,
который является дополнительным слоем защиты.

00:29:41.000 --> 00:29:45.000
Давайте посмотрим, как ее
создавать и как можно с ней работать.

00:29:45.000 --> 00:29:49.397
Для этого в AWS Management
Console перейдем в сервис VPC.

00:29:49.421 --> 00:29:54.212
Далее здесь воспользуемся
навигационным меню слева и выберем

00:29:54.236 --> 00:29:59.106
опцию Network ACL. Обратите 
внимание, что в группе security у

00:29:59.130 --> 00:30:04.000
нас находится два пункта, это
Network ACL и Security groups.

00:30:04.000 --> 00:30:10.232
Как только мы перешли к списку
Network ACLs, обратите внимание, что

00:30:10.256 --> 00:30:16.488
у нас есть дефолтовый Network
ACL, который привязан к Lab VPC, если

00:30:16.512 --> 00:30:22.228
вы ее выберете и перейдете в
секции Metadata на вкладку Subnet

00:30:22.252 --> 00:30:29.000
associations, вы увидите два наших
subnet, это private и public subnet.

00:30:29.000 --> 00:30:35.000
Они по умолчанию ассоциированы
с дефолтовым Network ACL.

00:30:35.000 --> 00:30:41.000
Если мы посмотрим на Inbound rules, мы увидим,
что весь трафик разрешен с приоритетом 100.

00:30:41.000 --> 00:30:48.000
Так как это наивысший приоритет в рамках
Inbound rules, то весь трафик будет разрешен.

00:30:48.000 --> 00:30:51.000
Также обратите внимание, что
это дефолтовый Network ACL.

00:30:51.000 --> 00:30:57.000
А для дефолтового Network ACL весь входящий
и исходящий трафик автоматически разрешен.

00:30:57.000 --> 00:31:01.988
Это же мы можем перепроверить
во вкладке Outbound rules, вы

00:31:02.012 --> 00:31:07.000
видите, что с приоритетом 100
весь outbound трафик разрешен.

00:31:07.000 --> 00:31:10.000
Давайте теперь создадим
кастомный Network ACL.

00:31:10.000 --> 00:31:15.000
Для этого вверху справа необходимо
будет нажать на кнопку Create Network ACL.

00:31:15.000 --> 00:31:19.525
Здесь необходимо будет ввести
имя этого ресурса, в нашем случае

00:31:19.549 --> 00:31:24.000
Lab Network ACL и как VPC
необходимо будет выбрать Lab VPC.

00:31:24.000 --> 00:31:29.000
После чего в нижней части страницы мы
можем нажать на кнопку Create Network ACL.

00:31:29.000 --> 00:31:37.713
Как только создаться наш кастомный Network ACL,
нас направит на список этих ресурсов, и вы увидите

00:31:37.737 --> 00:31:46.000
в соответствующем столбце, что Lab Network
ACL является не дефолтовым Network ACL. Отлично.

00:31:46.000 --> 00:31:52.000
Давайте теперь выберем его и в секции
Inbound rules посмотрим, какие у нас есть rules.

00:31:52.000 --> 00:32:01.000
Вы увидите, что трафик по умолчанию
запрещен, и для inbound rules и для outbound rules.

00:32:01.000 --> 00:32:06.000
Это дефолтовое поведение
кастомного Network ACL.

00:32:06.000 --> 00:32:12.000
Давайте теперь добавим некоторые
rules для того чтобы разрешить трафик.

00:32:12.000 --> 00:32:17.000
Для этого необходимо будет
нажать на кнопку Edit outbound rules.

00:32:17.000 --> 00:32:24.988
Здесь необходимо будет нажать на кнопку
Add new rule и приоритетом 100 разрешить

00:32:25.012 --> 00:32:33.000
весь трафик до CIDR блока публичного subnet.
И после чего сохраняем изменения.

00:32:33.000 --> 00:32:38.000
Все те же самые изменения
необходимо внести для Inbound rules.

00:32:38.000 --> 00:32:45.035
А именно, мы добавляем новый rule с
приоритетом 100, разрешающий весь трафик

00:32:45.059 --> 00:32:52.000
до источника, это CIDR блок публичного
subnet и сохраняем эти изменения.

00:32:52.000 --> 00:32:57.000
Далее, напоминаю здесь, что Network
ACL является самостоятельным ресурсом.

00:32:57.000 --> 00:33:05.000
Поэтому при создании кастомного Network ACL
необходимо явно его привязать к необходимым subnets.

00:33:05.000 --> 00:33:13.000
В нашем случае мы
привяжем его к private subnet.

00:33:13.000 --> 00:33:17.000
Как только мы это сделаем, нам
необходимо провести эксперимент.

00:33:17.000 --> 00:33:23.000
Чтобы это сделать нам необходимо в
public subnet создать тестовый инстанс.

00:33:23.000 --> 00:33:28.101
Поэтому давайте перейдем в сервис EC2.
Далее, нажмем на кнопку Launch

00:33:28.125 --> 00:33:33.000
instance и введем входные данные.
Как Name укажем Test Instance.

00:33:33.000 --> 00:33:41.000
Далее, как операционную систему выберем Amazon
Linux и как AMI выберем Amazon Linux 2 AMI (HVM).

00:33:41.000 --> 00:33:45.000
Как Instance type
выберем t2.micro.

00:33:45.000 --> 00:33:49.000
Приватный ключ можем не указывать,
так как к нему подключаться не будем.

00:33:49.000 --> 00:33:53.000
В настройках сети необходимо
будет внести некоторые изменения.

00:33:53.000 --> 00:33:58.000
В поле VPC необходимо
будет выбрать Lab VPC.

00:33:58.000 --> 00:34:04.000
Как Subnet необходимо будет выбрать
Public subnet и создать новую Security группу.

00:34:04.000 --> 00:34:12.000
Здесь необходимо нажать на кнопку Add security
group rule и ввести соответствующие значения.

00:34:12.000 --> 00:34:22.000
А именно мы разрешаем весь
трафик ICMP по IPv4 протоколу.

00:34:22.000 --> 00:34:30.000
Далее, как Source type указываем Anywhere, то есть
весь интернет и как Description напишем Allow ICMP.

00:34:30.000 --> 00:34:35.000
Это в том числе разрешает трафик
с использованием команды ping.

00:34:35.000 --> 00:34:41.688
Как только мы заполним эти все
поля, необходимо будет в правой части

00:34:41.712 --> 00:34:49.000
экрана прокрутить до конца страницы
и нажать на кнопку Launch instance.

00:34:49.000 --> 00:34:54.590
Пока наш инстанс создается,
нам необходимо будет выбрать

00:34:54.614 --> 00:35:00.000
Test Instance и скопировать
его приватный IP адрес.

00:35:00.000 --> 00:35:06.988
Как только мы скопируем, возвращаемся в
SSH сессию, где мы подключены к инстансу

00:35:07.012 --> 00:35:14.000
в private subnet и запустим команду
ping и IP адрес нашего тестового инстанса.

00:35:14.000 --> 00:35:17.000
Этот тестовый инстанс
находится в public subnet.

00:35:17.000 --> 00:35:26.000
Вы увидите, что у нас обмениваются пакеты, они
успешно уходят и возвращаются, указывается время.

00:35:26.000 --> 00:35:34.000
Давайте оставим обмен пакетами выполняться
дальше и вернемся в AWS Management Console.

00:35:34.000 --> 00:35:39.488
Здесь нам необходимо будет
выбрать кастомный Network ACL, далее

00:35:39.512 --> 00:35:45.000
во вкладке Outbound rules
нажать на кнопку Edit outbound rules.

00:35:45.000 --> 00:35:52.482
Здесь мы сейчас введем новое
правило приоритетом выше, пусть будет

00:35:52.506 --> 00:35:59.988
приоритет 50, и для Type трафика
ICMP по IPv4, для Destination это

00:36:00.012 --> 00:36:07.550
приватный IP адрес тестового
инстанса, CIDR блок размера 32, так как

00:36:07.574 --> 00:36:15.000
мы указываем конкретный IP адрес
и в поле Allow/Deny укажем Deny.

00:36:15.000 --> 00:36:23.000
То есть мы запрещаем ICMP трафик до нашего
тестового инстанса и сохраняем эти изменения.

00:36:23.000 --> 00:36:33.000
Как только мы сохраним изменения, обратите внимание,
что в сессии PuTTY обмен пакетами прекратился.

00:36:33.000 --> 00:36:39.073
Мы можем выйти из программы и
запустить команду ping и приватный IP адрес

00:36:39.097 --> 00:36:45.000
тестового инстанса еще раз и вы
увидите, что пакеты не обмениваются.

00:36:45.000 --> 00:36:50.577
Это говорит о том, что мы воспользовались
дополнительным слоем защиты

00:36:50.601 --> 00:36:57.000
Network ACL и запретили интересующий
нас трафик до интересующего CIDR блока.

00:36:57.000 --> 00:37:06.000
В нашем случае это IP адрес
тестового инстанса в public subnet.

00:37:06.000 --> 00:37:12.000
Отлично, мы с вами выполнили все задания в
рамках лабораторной работы с чем я вас поздравляю.

00:37:12.000 --> 00:37:15.000
Осталось только ответить на
некоторые тестовые вопросы.

00:37:15.000 --> 00:37:22.000
Чтобы до них добраться, необходимо на странице
лабораторной работы нажать на кнопку Details.

00:37:22.000 --> 00:37:27.000
Далее в выпадающем
списке нажать на кнопку Show.

00:37:27.000 --> 00:37:31.488
Во всплывающем окне необходимо
будет прокрутить в самый низ

00:37:31.512 --> 00:37:36.000
и нажать на ссылку Access
the multiple choice questions.

00:37:36.000 --> 00:37:40.000
Вас направят на отдельную страницу
в веб-браузере со списком вопросов.

00:37:40.000 --> 00:37:46.000
Всего дано 6 вопросов. Давайте 
попробуем ответить на каждый из них.

00:37:46.000 --> 00:37:54.000
Самый первый вопрос: для чего
используется Internet gateway с public subnet?

00:37:54.000 --> 00:38:07.000
Вы можете остановить это видео и
попробовать ответить на него самостоятельно.

00:38:07.000 --> 00:38:13.488
Internet gateway используется для того,
чтобы предоставить выход в интернет для

00:38:13.512 --> 00:38:20.000
ресурсов в public subnet и для тех
ресурсов, у которых есть публичный IP адрес.

00:38:20.000 --> 00:38:25.488
Второй вопрос. Что дает 
возможность выходить в интернет

00:38:25.512 --> 00:38:31.000
и устанавливать обновление
ПО ресурсам из private subnet?

00:38:31.000 --> 00:38:39.000
Вы также можете остановить это видео и
попробовать ответить на него самостоятельно.

00:38:39.000 --> 00:38:41.000
Правильный ответ - NAT gateway.

00:38:41.000 --> 00:38:47.000
Переходим к следующему вопросу.
Третий вопрос.

00:38:47.000 --> 00:38:55.000
Можно ли из интернета напрямую
обратиться к инстансу в private subnet?

00:38:55.000 --> 00:39:05.000
Вы можете остановить видео и попытаться
ответить самостоятельно. Правильный ответ - NO.

00:39:05.000 --> 00:39:11.000
То есть к инстансу, находящемуся в private subnet,
напрямую из интернета подключиться невозможно.

00:39:11.000 --> 00:39:18.585
Таким образом, в private subnet мы можем
хранить чувствительные ресурсы, именно

00:39:18.609 --> 00:39:26.000
базу данных, возможно инстансы, где
отрабатывает логика вашего приложения.

00:39:26.000 --> 00:39:34.667
Четвертый вопрос. Почему мы использовали
два различных приватных ключа для private

00:39:34.691 --> 00:39:44.000
instance и bastion host? Можете остановить
видео и попытаться ответить самостоятельно.

00:39:44.000 --> 00:39:49.488
Правильный ответ является то, что
мы создали отдельные ключи, чтобы

00:39:49.512 --> 00:39:55.000
в случае утечки приватного ключа
минимизировать его возможный ущерб.

00:39:55.000 --> 00:40:01.988
То есть в случае если публично станет доступным
приватный ключ от приватного инстанса, пользователи

00:40:02.012 --> 00:40:09.000
все равно добраться до него не смогут, так как не
смогут подключиться с этим ключом к bastion host.

00:40:09.000 --> 00:40:14.899
В обратном случае, если же у нас
уйдет в публичный доступ приватный ключ

00:40:14.923 --> 00:40:21.488
bastion host, то будет возможность
подключиться только к этому bastion host, а

00:40:21.512 --> 00:40:27.744
далее к другим инстансам, в том числе
к нашему private инстансу подключиться

00:40:27.768 --> 00:40:34.000
также не получится, так как к нему
подключается через другой приватный ключ.

00:40:34.000 --> 00:40:41.544
Следующий вопрос. Можно ли запустить 
команду ping на стороне bastion

00:40:41.568 --> 00:40:49.000
host в сторону приватного инстанса
и сможем ли мы получить ответ?

00:40:49.000 --> 00:40:53.000
Подумайте хорошенько и
попытайтесь ответить самостоятельно.

00:40:53.000 --> 00:41:05.000
Помимо того, что вы ответите на вопрос, также
подумайте почему тот или иной ответ является верным.

00:41:05.000 --> 00:41:11.000
Окей, правильным ответом является No.
Отвечаю почему.

00:41:11.000 --> 00:41:17.224
Когда мы настраивали
security group для приватного

00:41:17.248 --> 00:41:25.000
инстанса, мы создавали inbound
rule только для SSH трафика.

00:41:25.000 --> 00:41:32.488
Так как ping не относится к SSH трафику,
он относится к другому виду трафика, то из

00:41:32.512 --> 00:41:40.000
bastion host в инстанс из private subnet мы
не можем успешно выполнить команду ping.

00:41:40.000 --> 00:41:48.000
Шестой вопрос, также очень хороший
вопрос, мне он очень понравился.

00:41:48.000 --> 00:41:56.093
Какие security group rules разрешают
приватному EC2 инстансу получить обратный

00:41:56.117 --> 00:42:04.000
трафик, обратный результат выполнения
команды ping до тестового инстанса?

00:42:04.000 --> 00:42:07.488
Я напоминаю, что приватный
инстанс находится в private

00:42:07.512 --> 00:42:11.000
subnet, а тестовый инстанс
находится в public subnet.

00:42:11.000 --> 00:42:16.000
Хорошенько подумайте, вы можете остановить
видео и попытаться ответить самостоятельно.

00:42:20.000 --> 00:42:26.488
Правильный ответ на шестой
вопрос, это outbound rules для

00:42:26.512 --> 00:42:33.000
private instance и inbound
rules для тестового инстанса.

00:42:33.000 --> 00:42:39.189
Почему? Потому что security group -
stateful, что говорит о том, что трафик, который

00:42:39.213 --> 00:42:46.000
вошел, вне зависимости от того, разрешен ли
outbound трафик или нет, он вернется обратно.

00:42:46.000 --> 00:42:52.651
И обратный случай, тот трафик, который
разрешен как outbound, вне зависимости от

00:42:52.675 --> 00:43:00.000
того, для конкретной security группы
разрешен inbound или нет, он все равно вернется.

00:43:00.000 --> 00:43:07.562
Поэтому, чтобы инициировать команду ping,
нам необходимо, чтобы security группа приватного

00:43:07.586 --> 00:43:16.000
инстанса содержала соответствующие outbound
rules, зная, что inbound трафик обязательно вернется.

00:43:16.000 --> 00:43:20.717
А для тестового инстанса эта
команда является inbound трафиком,

00:43:20.741 --> 00:43:25.000
поэтому необходимо, чтобы
inbound трафик был разрешен.

00:43:25.000 --> 00:43:30.488
А так как security группа является
stateful, то тот трафик, который вошел,

00:43:30.512 --> 00:43:36.000
он обратно вернется, вне зависимости
от того, какие прописаны outbound рулы.

00:43:36.000 --> 00:43:41.488
На этом мы ответили на все вопросы.
Теперь давайте проверим

00:43:41.512 --> 00:43:47.000
результат оценивания выполнения
нашей лабораторной работы.

00:43:47.000 --> 00:43:50.791
Для этого на странице лабораторной
работы необходимо нажать

00:43:50.815 --> 00:43:55.000
на кнопку Submit, подтвердить
его и подождать некоторое время.

00:43:55.000 --> 00:44:01.000
Так как эта лабораторная работа является достаточно
объемной, то проверка займет некоторое время.

00:44:01.000 --> 00:44:07.988
Как только скрипт оценивания отработает, вы
увидите свои баллы. В моем случае, я набрал 56 баллов

00:44:08.012 --> 00:44:15.000
из 56, значит мы с вами все задания выполнили
корректно, а также ответили правильно на все вопросы.

00:44:15.000 --> 00:44:22.151
Если же у вас не набран максимальный балл,
то вы можете прокрутить чуть ниже, посмотреть,

00:44:22.175 --> 00:44:29.000
в каком месте у вас не достают баллы,
исправить ее и запустить оценивание еще раз.

00:44:29.000 --> 00:44:33.610
Если же вы набрали максимальные
баллы, я вас поздравляю.

00:44:33.634 --> 00:44:39.000
Отлично. Теперь нам необходимо 
правильно выйти со всех систем.

00:44:39.000 --> 00:44:44.635
В первую очередь это относится к AWS
Management Console. Нам необходимо в верхней

00:44:44.659 --> 00:44:51.000
правой части нажать на имя пользователя и в
выпадающем списке нажать на кнопку Sign out.

00:44:51.000 --> 00:44:57.000
Далее, необходимо вернуться на страницу с
лабораторной работой и нажать на кнопку End lab.

00:44:57.000 --> 00:45:01.207
Подтвердить, что мы завершаем
лабораторную работу и дождаться

00:45:01.231 --> 00:45:06.000
сообщения, что мы можем закрывать
страницу с лабораторной работой.

00:45:06.000 --> 00:45:11.226
На этом мы завершаем сессию
разбора лабораторной работы.

00:45:11.250 --> 00:45:16.000
Это была достаточно
объемная лабораторная работа.

00:45:16.000 --> 00:45:20.988
Мы познакомились со всеми
компонентами VPC и я очень надеюсь,

00:45:21.012 --> 00:45:26.000
что вы получили полное
представление о VPC и ее компонентах.

00:45:26.000 --> 00:45:31.000
Спасибо за внимание. Увидимся с вами
на следующих наших активностях.
Қайырлы күн, құрметті студенттер! Келесі зертханалық жұмысты талдау сессиясында көргеніме қуаныштымын. Бүгінгі зертханалық жұмыстың тақырыбы - кафе бизнес-кейсіміз аясында VPC және оның барлық компоненттерін құру. Ендеше, бастайық. Зертханалық жұмысты талдауды AWS Management Console негізгі парақшасынан бастаймыз. Мұнда VPC сервисіне бару керек. Ол үшін сервисті іздеу жолағын пайдаланып, VPC деп енгіземіз. Ең бірінші сілтеме - бізге қажет сілтеме. VPC сервисінің негізгі парақшасында сол жақтағы шарлау мәзірін пайдаланып, бар VPC бөліміне өту керек. Мұнда зертханалық жұмыстың аясында Lab VPC жасалғанын көреміз, оның негізінде қалған компоненттерді жасаймыз. Бірінші қадам subnets жасау болып табылады. Ол үшін сол жақ шарлау мәзірінен Subnets таңдаңыз. Мұнда ашылатын парақшаның жоғарғы оң жағындағы Create Subnet батырмасын басу керек. Ең басында VPC - Lab VPC таңдау керек. Әрі қарай Subnet name енгізу керек, біздің жағдайда Public subnet. Сәл төменде Availability zone таңдау керек. Зертханалық жұмыстың аясында бірінші availability zone болуы керек, us-east-1а. Біздің subnet-ке арналған CIDR блогы ретінде зертханалық тапсырмадан мәнді көшіріп, тиісті өріске енгізуіміз керек. Кейін парақшаның төменгі жағына жылжып, Create Subnet батырмасын басу керек. Батырманы басқаннан кейін, барлық subnets тізімі бар парақшаға бағытталамыз және біздің құрылған subnet арқылы фильтрленеді. Енді бұл public subnet-ті шын мәнінде public етуіміз керек. Ол үшін сол жақ шарлау мәзіріндегі Internet Gateways пунктіне өтіңіз. Мұнда жаңа ресурс жасаймыз, ол үшін жоғарғы оң жақтағы Create Internet gateway батырмасын басыңыз. Internet gateway жасау кезінде көп кіріс деректерін енгізудің қажеті жоқ, тек осы ресурстың атын енгізіңіз, бұл - Lab IGW. Яғни, Internet Gateway деген сөздің қысқасы. Кейін парақшаның төменгі жағындағы Create Internet gateway батырмасын басуға болады. Оны істегеннен кейін, біз ресурстың негізгі парақшасына, Internet gateway-ге бағытталамыз және күйдің Detached екенін көресіз. Сондай-ақ, жасыл түсті хабарландыруда Attach to VPC батырмасын көресіз. Бұл осы Internet gateway-ді VPC-лердің біріне байланыстыруымыз керек дегенді білдіреді, біздің жағдайда бұл - Lab VPC. Осы батырманы басайық, параметрлер парақшасына бағытталамыз, мұнда VPC таңдау керек, біздің жағдайда Lab VPC. Оны таңдап, парақшаның төменгі жағындағы Attach Internet gateway батырмасын басыңыз. Одан кейін, Internet gateway осы VPC-ге сәтті байланысқаны туралы сәйкес хабарламаны көресіз. Сондай-ақ, күй Attached күйіне өзгергенін және VPC ID өрісінде Lab VPC сілтемесі бар екенін көресіз. Енді Route Table баптауымыз керек, ол үшін сол жақтағы шарлау мәзірін қолданып, Route tables пунктін таңдаймыз. Мұнда, біз білетініміздей, VPC құру кезінде әдепкі Route table жасалады, оны пайдалана аламыз және public subnet-ке қажетті routes-тарды жасай аламыз. Бірнеше Route tables пайда болуы мүмкін, VPC бағанына қарап дұрыс кестелерді таба аласыз. Ол жерде VPC ID және VPC атауы болады. Оны таңдап алайық және осы ресурстың деректері бар парақша ашылатын блокта Routes қойындысын таңдап, Edit routes батырмасын басыңыз. Келесі парақшада Destination ретінде бүкіл Интернетті көрсетуіміз керек және біз Интернетке Internet gateway арқылы кіреміз. Қажетті өрістерді толтырғаннан кейін өзгертулерді сақтаймыз. Мұны орындағаннан кейін сәйкес хабарламаны көреміз, енді subnets парақшасына өтсек, Public subnet-ті көреміз және барлық қажетті компоненттер жасалған. Және ол тек атымен ғана емес, шын мәнінде Public subnet болып табылады, осы subnet-те жасалған ресурстар Интернетке кіре алады және Интернеттен осы subnet-тегі ресурстарға қол жеткізуге болады. Келесі қадам - Bastion host жасау. Ол үшін EC2 сервисін қолданамыз. Ол үшін сервистерді іздеу жолағына EC2 деп теріп, бірінші сілтемеге өту керек. EC2 сервисінің негізгі парақшасына өткеннен кейін, Launch instance батырмасын басуымыз керек, кіріс деректерін енгізу парақшасына бағытталамыз. Name ретінде Bastion Host, операциялық жүйе ретінде Amazon Linux және AMI ретінде Amazon Linux 2 AMI (HVM) таңдаймыз. Біраз төмен айналдырайық, Instance Type ретінде t2.micro таңдау керек болады, егер бұл опция қол жетімді болмаса, t3.micro таңдаңыз. Key pair ретінде vockey таңдаңыз және Network settings бөлімінде Edit батырмасын басу керек. Біраз өзгерістер енгіземіз. VPC ретінде Lab VPC, Subnet ретінде біз жасаған Public subnet таңдаңыз. Auto-assign public IP өрісінде оны өшіру керек, өйткені біз Elastic IP address жасап, оны осы инстансқа байланыстырамыз. Одан кейін Create security group опциясын таңдап, Bastion Host SG атауын енгізу керек. Содан кейін Inbound security group rules бөліміндегі Add security group rule батырмасын басып, келесі rule-ды қосу керек. SSH трафигіне рұқсат етеміз, Source ретінде MyIP көрсетеміз, CIDR блок өлшемі 32 болатын жалпы IP мекенжайымды енгіземіз, онда бір IP мекенжайы бар. Description ретінде болашақта оның не үшін жасалғанын түсіну үшін кейбір мәндерді көрсету қажет. Менің жағдайда, бұл SSH және Yelzhan, яғни пайдаланушы аты. Параметрлерді енгізгеннен кейін, парақшаның оң жағындағы Launch instance батырмасын басамыз. Инстансты құру басталғаны туралы хабары бар парақшаға бағытталамыз, инстанстың ID бар сілтемені басып, инстанстар тізімі бар және біздің инстансымыз бойынша фильтрленген парақшаға өте аламыз. Біраз уақыттан кейін инстанс күйі Running күйіне ауысады және біз келесі ресурстарды жасауды жалғастырамыз, бұл Elastic IP address. Ол үшін сол жақ шарлау мәзірінде Elastic IPs опциясын таңдаңыз. Мұнда Allocate Elastic IP address батырмасын басу керек және кіріс деректерін енгізу парақшасында Amazon's pool of IPv4 addresses опциясын таңдаңыз. Барлық басқа параметрлерді әдепкі ретінде қалдырамыз, парақшаның төменгі жағына жылжып, Allocate батырмасын басыңыз. Оны жасағаннан кейін Elastic IP address тізімі бар парақшаға бағытталамыз, хабарда осы Elastic IP address-ті ресурспен байланыстыруыңыз керек екенін көресіз, енді оны жасайық. Опциялардың бірі – парақшаның жоғарғы жағындағы Associate this Elastic IP address батырмасын басу немесе осы Elastic IP address-ті таңдау. Әрі қарай, Actions батырмасын басып, ашылмалы мәзірден Associate Elastic IP address опциясын таңдаңыз. Сол парақшаға бағытталамыз. Параметрлер парақшасында оны қай ресурспен байланыстыратынымызды таңдауыңыз керек: Network interface немесе Instance. Біздің жағдайда, бұл - Instance. Оны таңдаған соң, төмендегі өрісте Bastion Host атауы бар EC2 инстансын таңдауымыз керек. Оны істегеннен кейін, парақшаның төменгі жағына жылжып, Associate батырмасын басамыз. Біз Elastic IP address ресурспен, белгілі бір ID бар инстанспен сәтті байланыстырылғаны туралы хабарлама аламыз. Бұл EC2 инстансы Интернетке кіру мүмкіндігінен басқа, Интернеттен де қол жетімді және статикалық IP мекенжайы арқылы қол жеткізуге болатынын білдіреді. Бұл IP мекенжайын экранда көресіз. Енді public subnet-тегі EC2 инстансына шынымен қосыла алатынымызды тексерейік. Ол үшін private key жүктеп алу керек. Зертханалық жұмыстың парақшасына ораламыз, Details батырмасын басыңыз және ашылмалы тізімде Show батырмасын басыңыз. Қалқымалы терезеде PPK кілтін жүктеп алу қажет, егер Windows операциялық жүйесі болса, Linux немесе MacOS операциялық жүйесімен жұмыс істеп жатсаңыз, PEM кілтін жүктеп алуыңыз қажет. Windows операциялық жүйесі жағдайында PuTTY бағдарламасын жүктеп алу қажет болады. Бұл бағдарламамен алдыңғы зертханалық жұмысымызда бірнеше рет жұмыс істедік, сондықтан ол орнатылған, оны іске қосу керек. Сондай-ақ, алдында басқа инстанстарға PPK кілтін пайдаланып қосылған болатынбыз. Егер сізде сақталған сессия болса, оны жүктей аласыз, содан кейін IP мекенжайы өрісіне Elastic IP ресурсының IP мекенжайын енгізіңіз. Ал егер ашылған сессия болмаса, PuTTY бағдарламасының сол жақ шарлау мәзірінде Connection, содан кейін SSH, содан кейін Auth and Credentials жолы бойынша өтіп, сол жерде сәйкес өріс үшін жеке кілттің жолын көрсетуге болады. Осыдан кейін бірінші Session қойындысына оралып, EC2 инстансының жалпы IP мекенжайын енгізіңіз. Барлық қажетті параметрлерді енгізгеннен кейін Open батырмасын басамыз. Команда жолы ашылады және сіз осы инстансқа бірінші рет қосылсаңыз, осыған ұқсас хабарды көресіз. Бұл біз жасаған инстанс болғандықтан, оған сенеміз, Accept батырмасын басамыз. Барлық басқа жағдайларда сенімді инстансқа қосылып жатқаныңызға көз жеткізіп, содан кейін ғана қосылымды растайсыз. Accept батырмасын басқаннан кейін, Amazon Linux үшін әдепкі пайдаланушылар ec2-user көрсетуіміз керек. Enter пернесін басқанда, авторизация сәтті өткені туралы хабарламаны және командаларды енгізуге болатын промпт көреміз. Бұл public subnet-тегі EC2 инстансына оның жалпы IP мекенжайын пайдаланып қашықтан сәтті қосыла алдық дегенді білдіреді. Жақсы, құттықтаймын, бұл тапсырманы орындап, келесі тапсырмаға көшеміз. Келесі тапсырманың аясында private subnet және оған қажетті барлық компоненттерді жасауымыз керек. Ол үшін сервис іздеу жолағына VPC деп енгізуді бастаймыз және сәйкес сервиске барамыз. Содан кейін сол жақ шарлау мәзірі арқылы Subnets пунктін таңдаңыз. Бұл жерде жаңа subnet жасау керек, ол үшін Create Subnet батырмасын басыңыз және кіріс деректерін енгізу үшін ашылатын парақшада осы деректерді енгізуді бастаймыз. VPC ID ретінде Lab VPC таңдаймыз және Subnet name ретінде Private subnet жазуымыз керек. Сәл төменде Availability zone ретінде осы аймақтағы бірінші availability zone таңдаңыз, us-east-1а. Ал CIDR блок мәнін зертханалық тапсырма парақшасынан көшіру қажет, ол 10.0.1.0/24. Осы деректерді енгізгеннен кейін парақшаның төменгі жағына жылжып, Create Subnet батырмасын басамыз. Subnet сәтті жасалғанын көреміз, енді келесі компоненттерді жасаймыз, ол үшін сол жақ шарлау мәзірін қолданамыз және NAT gateways пунктіне өтеміз. Бізде NAT gateway жасалмаған, сондықтан Create NAT gateway батырмасын басайық. Мұнда ашылатын парақшада кіріс деректерінде Name ретінде Lab NAT gateway енгізіңіз. Әрі қарай, Subnet ретінде Public subnet таңдаймыз, яғни біздің NAT gateway public subnet-те орналасады және private subnet-тегі ресурстарға Интернетке қосылуға мүмкіндік береді. Біраз төмен айналдырайық және NAT gateway жасау кезінде оны жалпыға ортақ статикалық IP мекенжайымен байланыстыру керек екенін есте ұстаймыз. Allocate IP address батырмасын басу арқылы Elastic IP ресурсын жасауға болады және оны NAT gateway құру аясында жасап жатқандықтан, Elastic IP ID сәйкес өріске енгізіледі. Осыдан кейін парақшаның төменгі жағына жылжып, Create NAT gateway батырмасын басуымыз керек. NAT gateway жасағаннан кейін, соңғы қадам қалады, бұл - route table-мен жұмыс. Сол жақ шарлау мәзірін пайдаланып, Route tables өтуіңіз керек. Алдында public subnet-ке байланыстыру үшін әдепкі route table пайдаландық. Енді private subnet-ке байланыстыру үшін бөлек route table жасау керек. Сонымен, Create route table батырмасын басайық, кіріс деректерін енгізу үшін ашылатын парақшада Private route table атауын енгізіп, VPC ретінде Lab VPC таңдау керек. Осыдан кейін Create route table батырмасын басамыз. Біздің route table жасалады және біз ресурстың негізгі парақшасына өтеміз. Мұнда Routes қойындысында VPC ішіндегі ресурспен байланысуға көмектесетін бір ғана әдепкі rule бар екенін көреміз. Edit routes батырмасын басуымыз керек және мұнда жаңа route қосуымыз керек. Destination ретінде Интернеттің белгісін көрсетуіңіз керек, барлығы нөлдер, қиғаш сызық және нөлдер. Әрі қарай, Target ретінде NAT gateway көрсетеміз, яғни private subnet-те орналасқан ресурстар Интернетке NAT gateway арқылы қосылады. Біздің NAT gateway public subnet-те орналасқан. Осы екі өрісті толтырғаннан кейін, Save changes батырмасын басамыз. Жақсы, route table дайындап қойдық. Route table тәуелсіз бөлек ресурс екенін және кастомдық route table-де жұмыс істеп жатсаңыз, оны subnet-ке нақты байланыстыруыңыз керек екенін ұмытпаңыз. Алдында route table-ді subnet-ке байланыстырудың қажеті жоқ еді, себебі ол әдепкі route table болды және әдепкі route table VPC ішінде жасалған барлық subnet-термен байланысады. Біздің жағдайда, біз кастомдық route table жасадық және мұнда оны private subnet-ке нақты байланыстыру керек. Ол үшін Subnet associations қойындысына өтіп, Edit subnet associations батырмасын басыңыз. Біз subnet бар парақшаға бағытталамыз, VPC ішіндегі қолжетімді барлық subnet-тер осы жерде көрсетіледі. Сіз public subnet және private subnet бар екенін көресіз. Олардың екеуі де әдепкі route table-ге байланысты, оны сәйкес бағанда көруге болады, осы кестедегі соңғы баған. Бұл парақшада private subnet таңдап, Save associations батырмасын басу керек. Нәтижесінде не болады? Subnet-ті бір уақытта тек бір route table-мен байланыстыруға болатынын, ал бір route table-ді бірнеше subnet-терде пайдалануға болатынын есте ұстаймыз. Сондықтан private subnet-тің әдепкі route table-мен байланысы жойылады және кастомдық route table мен private subnet-тің жаңа байланысы жасалады. Жақсы, оны жасағаннан кейін Subnet associations тізімінде private subnet көре аламыз. Сондай-ақ, осындай ID бар route table біздің private subnet-ке сәтті қосылғаны туралы хабарламаны көреміз. Барлық қажетті параметрлерді жасадық, енді бәрі дұрыс жұмыс істеп тұрғанын және Интернеттен private subnet-те орналасқан ресурстарға қосылу мүмкіндігін тексеру керек. Ол үшін инстанс жасау керек, EC2 сервисіне өтіңіз, содан кейін EC2 сервисінің негізгі парақшасында Launch instance батырмасын басып, кіріс деректерін енгізуді бастау керек. Name ретінде Private instance көрсетеміз, операциялық жүйе ретінде Amazon Linux таңдаймыз, ал AMI ретінде Amazon Linux 2 AMI (HVM) таңдаймыз. Instance type ретінде t2.micro таңдаймыз және жеке кілт бөлімінде жаңасын жасау керек болады. Ол үшін Create new key pair батырмасын басыңыз, алдыңғы жеке кілттен басқа атауды көрсетіңіз, vockey2 болсын және дұрыс форматын таңдау керек. Естеріңізге сала кетейін, егер Windows операциялық жүйесімен жұмыс жасасаңыз, PPK форматын таңдауыңыз керек, ол PuTTY бағдарламасына жарамды. Ал егер MacOS немесе Linux операциялық жүйесімен жұмыс істеп жатсаңыз, PEM форматын таңдауыңыз керек. Жақсы, форматты таңдадық, атын жаздық, енді Create key pair батырмасын басу керек. Оны басқаннан кейін, жеке кілтті жергілікті компьютерде сақтау сұралады. Бұл жеке кілтті жүктеп алуға болатын жалғыз жағдай, сондықтан оны сақтаймыз. Әрі қарай, желі параметрлерінің келесі бөлімінде Lab VPC таңдау керек, Subnet ретінде Private subnet таңдаймыз және сәл төменде Create security group опциясын таңдауымыз керек. Жаңа security group құрып жатырмыз, Inbound security group rules бөлімінде жаңа rule қосу керек. Мұнда SSH трафигін көрсетеміз, Source type ретінде Custom деп көрсетеміз, ал Source ішінде біздің bastion host-тың security тобын көрсетеміз. Бұл тек осы security group байланыстырылған subnet-терді SSH қосылымының бастамашысы ретінде пайдалануға болатындығын білдіреді. Бұл инстансқа public subnet-тегі ресурстар ғана қосыла алады. Description ретінде бұл rule не үшін жасалғанын түсінуді жеңілдету үшін Bastion host SG көрсетейік. Жақсы, барлық қажетті параметрлерді енгіздік, енді экранның оң жағындағы Launch instance батырмасын басуға болады. Біздің инстансымыз жасалып жатқанда, келесі сұраққа жауап берейік. Бізде public subnet-те жасалған bastion host бар, оған қосыла аламыз, оны тексердік. Енді private subnet-те басқа инстанс жасаймыз және оған қосыламыз. Біз private subnet-тегі ресурстарға қосылу үшін арнайы bastion host жасадық, бұл жақсы. Бірақ оның қалай әрекет ететінін елестетіп көріңізші, bastion host-қа қосылу үшін компьютерде жергілікті түрде сақталған жеке кілтті қолданамыз. Және жергілікті компьютерден SSH қосылымын бастаймыз. Енді bastion host-тан private subnet-тегі инстансқа SSH қосылымын бастау үшін bastion host-та, яғни жергілікті түрде SSH қосылымын іске қосатын жерде, жеке кілт болуы керек, атап айтқанда біз жасаған кілт және содан кейін жеке инстансқа қосыла аламыз. Бұл қауіпсіздік тұрғысынан ең жақсы нұсқа емес, өйткені bastion host барлық қызметкерлер оған қосылатын орын болып табылады, содан кейін сол жақтан қажетті ресурстарға қосылады. Компанияда әртүрлі командалар жұмыс істейтіндіктен, олар нәтижесінде қосылатын target-тер әртүрлі болуы мүмкін. Және олар әртүрлі жеке кілттерді пайдаланады. Жеке кілтіңізді bastion host-ында сақтасаңыз, басқа пайдаланушылар бұл кілтті пайдаланып, оны рұқсатсыз пайдалана алады. Сондықтан, PuTTY бағдарламасының әзірлеу тобы шешім ретінде тағы бір қосымша бағдарлама жасады, ол Pageant деп аталатын PuTTY бағдарламасына арналған плагин ретінде жұмыс істейді. Идея мынада: SSH қосылымы іске қосылған жерде барлық кілттерді жергілікті түрде сақтау арқылы инстанстарға дәйекті түрде қосылуға болады. Яғни, жергілікті компьютерден жеке кілттерді тек осы компьютерде сақтай отырып, bastion host арқылы private subnet-тегі инстансқа қосыла аламыз. Осылайша, бұл бағдарламаны пайдалана отырып, bastion host-ында жеке инстанстың жеке кілтін сақтаудың қажеті жоқ. Бұл - өте ыңғайлы және жақсы бағдарлама екен. Енді оның қалай жұмыс істейтінін және оны қалай баптау керектігін көрейік. Ең алдымен, оны жүктеп алу керек, орнатудың қажеті жоқ, exe файлын іске қосқан кезде бағдарламаның өзі қосылады және осы жерде Add key батырмасын басу керек. Одан кейін кілттеріміздің екеуін де таңдап, олардың жеке кілттер тізімінде пайда болуын қамтамасыз ету керек. Осымен Pageant бағдарламасында қажетті параметрлерді жасадық, Close батырмасын басуға болады. Әрі қарай, PuTTY бағдарламасында сәйкес функцияны белсендіру керек. Сол жақ шарлау мәзірінде Auth парақшасын таңдау керек және парақшаның өзінде Allow agent forwarding опциясына құсбелгі қою керек. Бұл әрекетті орындағаннан кейін, bastion host-ының жеке кілтін таңдауыңыз керек, бұл Credentials парақшасында. Ең бірінші өрісте Browse батырмасын басып, PPK кілтінің жолын көрсету керек. Осыдан кейін bastion host-ының жалпыға ортақ IP мекенжайын көшіру керек болады, оны екі жолмен жасай аламыз. Біріншісі - EC2 инстанстарының тізімінде, bastion host таңдасаңыз, метадеректерде сәйкес өріс бар. Сондай-ақ, Elastic IP мекенжайларының тізімінде жалпыға ортақ IP мекенжайын қарай аламыз. IP мекенжайын көшіргеннен кейін, оны PuTTY бағдарламасына қойып, Open батырмасын басуымыз керек. Мұнда пайдаланушы атын енгізу керек, ec2-user, Enter пернесін басыңыз, сонда командаларды енгізуге болатын промпт көресіз, бұл bastion host-ымызға сәтті қосылғанымызды білдіреді. Жеке IP мекенжайы осы жерде көрсетіледі. Енді private subnet-тегі инстансқа қосылып көруіміз керек. Ол үшін EC2 инстанстарының тізімі бар парақшаға ораламыз және private instance таңдаймыз. Оның жалпыға ортақ IP мекенжайы жоқ екенін ескеріңіз, бұл дұрыс, себебі бұл инстанс private subnet-те жасалған және оған Интернеттен қосыла алмайсыз. Бірақ оның жеке IP мекенжайы бар және оны пайдаланатын боламыз, bastion host пен бұл private instance бір VPC-де орналасқандықтан, олар бір-бірімен жеке IP мекенжайлары арқылы қосыла алады. Осы мәнді көшіріп алып, келесі команданы қосамыз, SSH, пайдаланушы аты ec2-user және ит белгісі арқылы private subnet-тегі инстанстың жеке IP мекенжайын жазамыз. Команданы жазғаннан кейін, Enter пернесін басыңыз, содан кейін осы инстансқа шынымен қосылғымыз келетінін растаңыз, Yes деп, Enter пернесін басыңыз. Осыдан кейін промпт пайда болғанын және IP мекенжайының өзгергенін көресіз, бұл біздің private instance-тың IP мекенжайы. Жақсы, құттықтаймын, private subnet-тегі private instance-қа сәтті қосыла алдық. Енді соңғы тексеру үшін private subnet-тегі бұл инстанстың Интернетке шынымен қол жеткізе алатынына көз жеткізуіміз керек. Ол үшін келесі ping командасын және барлық сегіздігі бар IP мекенжайы DNS google немесе сізге таныс кез келген веб-сайттың URL мекенжайын енгізіңіз. Енді ping командасын енгізіп, google.com сайтына кірейік, бірінші және екінші жағдайда пакеттер сәтті алмасуын көресіз, бұл private subnet-тегі инстанстар Интернетке қол жетімді екенін көрсетеді. Егер солай болса, бұл осы уақытқа дейін барлық қажетті параметрлерді дұрыс жасағанымызды, бәрі дұрыс бапталғанын білдіреді. Келесі тапсырмаға көшеміз және бізде тағы бір компонент қалды, бұл Network ACL, VPC компоненті, ол қосымша қорғаныс қабаты болып табылады. Оны қалай жасау керектігін және онымен қалай жұмыс істеуге болатынын көрейік. Ол үшін AWS Management Console-де VPC сервисіне барайық. Содан кейін сол жақтағы шарлау мәзірін қолданып, Network ACL опциясын таңдаймыз. Security тобында екі пункт бар екенін ескеріңіз, Network ACL және Security groups. Network ACLs тізіміне кіргеннен кейін, Lab VPC-ге байланған әдепкі Network ACL бар екенін ескеріңіз, егер оны таңдап, Metadata бөлімінде Subnet associations қойындысына өтсеңіз, біздің екі subnet-ті көресіз, бұл private және public subnet. Олар әдепкі бойынша Default Network ACL-мен байланысты. Inbound rules қарасақ, барлық трафикке 100 басымдылықпен рұқсат етілгенін көреміз. Бұл inbound rules-тағы ең жоғары басымдық болғандықтан, барлық трафикке рұқсат етіледі. Сондай-ақ, бұл Default Network ACL екенін ескеріңіз. Default Network ACL үшін барлық кіріс және шығыс трафикке автоматты түрде рұқсат етіледі. Оны Outbound rules қойындысында тексере аламыз, 100 басымдылықпен барлық шығыс трафикке рұқсат етілгенін көресіз. Енді кастомдық Network ACL жасайық. Жоғарғы оң жақтағы Create Network ACL батырмасын басу керек. Мұнда осы ресурстың атын енгізу керек, Lab Network ACL және VPC ретінде Lab VPC таңдау керек. Содан кейін парақшаның төменгі жағындағы Create Network ACL батырмасын басуға болады. Біздің кастомдық Network ACL жасалғаннан кейін, осы ресурстардың тізіміне бағытталамыз және сәйкес бағанда Lab Network ACL әдепкі емес Network ACL екенін көресіз. Жақсы. Енді оны таңдап, Inbound rules бөлімінде қандай rules бар екенін көреміз. Сіз inbound және outbound rules үшін трафик әдепкі бойынша тыйым салынғанын көресіз. Бұл - кастомдық Network ACL-дің әдепкі әрекеті. Енді трафикке рұқсат беру үшін кейбір rules қосайық. Ол үшін Edit outbound rules батырмасын басу керек. Мұнда Add new rule батырмасын басып, 100 басымдылығымен public subnet-тің CIDR блогына дейінгі барлық трафикке рұқсат беру керек. Содан кейін өзгертулерді сақтаймыз. Inbound rules үшін де тура сол өзгертулер жасалуы керек. 100 басымдылығы бар жаңа rule қосамыз, бұл source-қа дейінгі барлық трафикке рұқсат береді, бұл public subnet-тің CIDR блогы және осы өзгерістерді сақтаңыз. Network ACL тәуелсіз ресурс екенін еске саламын. Сондықтан, кастомдық Network ACL жасағанда, оны қажетті subnet-терге анық байланыстыру керек. Біздің жағдайда оны private subnet-ке байланыстырамыз. Оны жасағаннан кейін, эксперимент жасайық. Ол үшін public subnet-те сынақ инстансын жасау керек. Ендеше EC2 сервисіне көшейік. Launch instance батырмасын басып, кіріс деректерін енгізіңіз. Name ретінде Test Instance көрсетеміз. Операциялық жүйе ретінде Amazon Linux және AMI ретінде Amazon Linux 2 AMI (HVM) таңдаймыз. Instance type ретінде t2.micro таңдайық. Жеке кілтті көрсетудің қажеті жоқ, өйткені оған қосылмаймыз. Желі параметрлеріне кейбір өзгерістер енгізу қажет болады. VPC өрісінде Lab VPC таңдау керек. Subnet ретінде Public subnet таңдап, жаңа Security group жасау керек. Мұнда Add security group rule батырмасын басып, сәйкес мәндерді енгізу керек. IPv4 протоколы арқылы барлық ICMP трафигіне рұқсат етеміз. Source type ретінде Anywhere, яғни бүкіл Интернетті көрсетеміз, ал Description ретінде Allow ICMP деп жазамыз. Бұл сонымен қатар ping командасы арқылы трафикке мүмкіндік береді. Осы өрістердің барлығын толтырғаннан кейін, экранның оң жағындағы парақшаның төменгі жағына жылжып, Launch instance батырмасын басуымыз керек. Инстансымыз жасалып жатқанда, Test Instance таңдап, оның жеке IP мекенжайын көшіру керек болады. Көшіріп алғаннан кейін, SSH сессиясына ораламыз, онда private subnet-тегі инстансқа қосылып, ping командасын және сынақ инстансымыздың IP мекенжайын іске қосамыз. Бұл сынақ инстансы public subnet-те орналасқан. Сіз пакеттердің алмасуын, олар сәтті шығып, қайтарылатынын және уақыт көрсетілгенін көресіз. AWS Management Console-іне оралайық. Мұнда кастомдық Network ACL таңдау керек, содан кейін Outbound rules қойындысында Edit outbound rules батырмасын басыңыз. Мұнда енді жоғарырақ басымдылығы бар жаңа rule енгіземіз, ол 50 басымдылық болсын, Type traffic үшін IPv4 бойынша ICMP, Destination үшін бұл сынақ инстансының жеке IP мекенжайы, CIDR блок өлшемі 32, өйткені біз арнайы IP мекенжайын көрсетеміз және Allow/Deny өрісінде Deny көрсетіңіз. Яғни, сынақ инстансына ICMP трафигіне тыйым саламыз және осы өзгерістерді сақтаймыз. Өзгерістерді сақтағаннан кейін, PuTTY сеансында пакеттердің алмасуы тоқтатылғанын байқайсыз. Бағдарламадан шығып, ping командасын және сынақ инстансының жеке IP мекенжайын қайтадан іске қоссақ, пакеттердің алмаспайтынын көресіз. Бұл Network ACL қорғанысының қосымша қабатын пайдаланғанымызды және бізді қызықтыратын трафикті CIDR блогына дейін тыйым салғанымызды көрсетеді. Біздің жағдайда бұл public subnet-тегі сынақ инстансының IP мекенжайы. Жақсы, біз зертханалық жұмыстың барлық тапсырмаларын орындадық, құттықтаймын. Тек тест сұрақтарына жауап беру ғана қалды. Оларға жету үшін зертханалық жұмыс парақшасындағы Details батырмасын басу керек. Содан кейін ашылмалы тізімде Show батырмасын басыңыз. Қалқымалы терезеде төменге қарай жылжып, Access the multiple choice questions сілтемесін басу керек. Веб-браузерде сұрақтар тізімі бар бөлек парақшаға бағытталасыз. Барлығы 6 сұрақ бар. Олардың әрқайсысына жауап берейік. Ең бірінші сұрақ: Internet gateway мен public subnet не үшін пайдаланылады? Бұл видеоны тоқтатып, өзіңіз жауап беріп көріңіз. Internet gateway public subnet-тегі ресурстарға және жалпы IP мекенжайы бар ресурстарға Интернетке кіруді қамтамасыз ету үшін пайдаланылады. Екінші сұрақ. Private subnet-тегі ресурстарға Интернетке кіруге және бағдарламалық құрал жаңартуларын орнатуға не мүмкіндік береді? Бұл видеоны тоқтатып, оған өзіңіз жауап беріп көріңіз. Дұрыс жауап - NAT gateway. Келесі сұраққа көшейік. Үшінші сұрақ. Private subnet-тегі инстансқа Интернеттен тікелей қол жеткізу мүмкін бе? Видеоны тоқтатып, өзіңіз жауап беріп көріңіз. Дұрыс жауап – No. Яғни, private subnet-тегі инстансқа Интернеттен тікелей қосылу мүмкін емес. Осылайша, private subnet-те ресурстарды, атап айтқанда, дерекқорды, мүмкін сіздің қолданбаңыздың логикасы орындалатын инстанстарды сақтай аламыз. Төртінші сұрақ. Неліктен біз private instance пен bastion host үшін екі түрлі жеке кілтті пайдаландық? Видеоны тоқтатып, өзіңіз жауап беріп көріңіз. Дұрыс жауап - жеке кілттер істен шыққан жағдайда оның ықтимал зақымдануын азайту үшін біз бөлек кілттерді жасадық. Яғни, егер жеке инстанстың жеке кілті жалпыға қолжетімді болса, пайдаланушылар сонда да оған қол жеткізе алмайды, өйткені олар осы кілтпен bastion host-қа қосыла алмайды. Әйтпесе, егер bastion host-ының жеке кілті жалпыға қолжетімді болса, онда тек осы bastion host-қа қосылуға болады, содан кейін басқа инстанстарға, сонымен қатар біздің жеке инстансымызға да қосылу мүмкін болмайды, өйткені ол басқа жеке кілт арқылы қосылған. Келесі сұрақ. Bastion host жағында жеке инстансқа қарай ping командасын іске қосу мүмкін бе және біз жауап ала аламыз ба? Мұқият ойланып, өзіңіз жауап беруге тырысыңыз. Сонымен қатар, белгілі бір жауаптың неліктен дұрыс не дұрыс емес екендігі туралы да ойланыңыз. Жақсы, дұрыс жауап - No. Неге екенін талдайық. Жеке инстансқа security group теңшеген кезде, тек SSH трафигі үшін inbound rule жасадық. Ping SSH трафигіне жатпайтындықтан, ол басқа трафик түріне жатады, онда bastion host-тан private subnet-тегі инстансқа дейін біз ping командасын сәтті орындай алмаймыз. Алтыншы сұрақ та өте жақсы сұрақ. Қандай security group rules жеке EC2 инстансына кері трафикті, сынақ инстансына ping жасаудың кері нәтижесін алуға мүмкіндік береді? Жеке инстанстың private subnet-те, ал сынақ инстансы public subnet-те екенін еске саламын. Видеоны тоқтатып, өзіңіз жауап беріп көріңіз. Алтыншы сұраққа дұрыс жауап - private instance-қа арналған outbound rules және сынақ инстансына арналған inbound rules болып табылады. Неліктен? Security group - stateful болғандықтан, outbound трафикке рұқсат етілгеніне немесе рұқсат етілмегеніне қарамастан, кірген трафик кері қайтарылады. Ал керісінше жағдайда, outbound ретінде рұқсат етілген трафик белгілі бір security group үшін рұқсат етілгеніне немесе рұқсат етілмегеніне қарамастан, ол бәрібір қайтады. Сондықтан, ping командасын бастау үшін бізге жеке инстанстың security тобы inbound трафик міндетті түрде қайтарылатынын біле отырып, тиісті outbound rules қамтуы керек. Ал сынақ инстансы үшін бұл команда inbound трафик болып табылады, сондықтан inbound трафикке рұқсат беру қажет. Security group - stateful болғандықтан, кірген трафик қай outbound ережелері тіркелгеніне қарамастан қайтарылады. Осымен біз барлық сұрақтарға жауап алдық. Енді зертханалық жұмысымыздың бағалау нәтижесін қарайық. Ол үшін зертханалық жұмыс парақшасында Submit батырмасын басып, оны растап, біраз күту керек. Бұл зертханалық жұмыс айтарлықтай ауқымды болғандықтан, тексеру біраз уақытты алады. Бағалау скрипті орындалғаннан кейін ұпайларыңызды көресіз. Мен 56 ұпайдан 56 ұпай жинадым, бұл барлық тапсырмаларды дұрыс орындадық, сонымен қатар барлық сұрақтарға дұрыс жауап бердік дегенді білдіреді. Егер максималды балл болмаса, онда аздап төмен жылжып, қай жерде жетіспейтін ұпайларды көре аласыз, оны түзетіп, бағалауды қайта өткізе аласыз. Егер максималды ұпай жинасаңыз, құттықтаймын. Жақсы. Енді барлық жүйелерден дұрыс шығуымыз керек. Бұл, ең алдымен, AWS Management Console-ге қатысты. Жоғарғы оң жақтағы пайдаланушы атын басып, ашылмалы тізімдегі Sign out батырмасын басу керек. Әрі қарай, зертханалық жұмыс парақшасына оралып, End lab батырмасын басыңыз. Зертханалық жұмысты аяқтағанымызды растаңыз және зертханалық жұмыстың парақшасын жабуға болатындығы туралы хабарды күтіңіз. Осымен зертханалық жұмысты талдау сессиясы аяқталды. Бұл өте ауқымды зертханалық жұмыс болды. VPC барлық құрамдас бөліктерімен таныстық және VPC және оның құрамдас бөліктері туралы толық түсінікке ие болдыңыз деп үміттенемін. Назар аударғаныңызға рахмет. Келесі белсенділіктерде кездескенше.
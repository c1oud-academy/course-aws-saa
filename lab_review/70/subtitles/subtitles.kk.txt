Қайырлы күн, құрметті студенттер! Келесі зертханалық жұмысты талдау сессиясында көргеніме қуаныштымын. Зертхананың тақырыбы - кафе бизнес-кейсімізге арналған динамикалық веб-сайтты құру. Ендеше, бастайық. Біз зертханалық жұмыстың негізгі парақшасынан бастаймыз. Атаудың сәйкес келетініне көз жеткізу керек. Module 4 - Challenge Lab: Creating a Dynamic Website for the Cafe болуы керек. Жақсы. Енді зертханалық жұмысты бастау үшін уақытша AWS аккаунтын жасау керек. Ол үшін Start lab батырмасын басыңыз. Әрі қарай, ашылатын парақшада Lab status мәні Ready мәніне өзгеруін күту керек. Мәні өзгерген соң, осы қалқымалы терезені жабуға болады. Содан кейін зертханалық жұмыстың парақшасында AWS батырмасын басу керек. Бұл батырманы басқаннан кейін AWS Management Console басты парақшасына ауысасыз. EC2 сервисіне өтіп, осы AWS аккаунтында қандай инстанстардың бар екенін көруіміз керек. Оны екі жолмен жасауға болады, сол жақтағы шарлау мәзірі арқылы немесе Instances сілтемесі арқылы. Осы сілтемелердің кез келгенін басқаныңызда, атауында aws-cloud9-CafeWebServer бар бір EC2 инстансы бар екенін көресіз. Ол сәл кейінірек керек болады. Енді зертханалық жұмыстың парақшасына өтейік. Details батырмасын, содан кейін Show батырмасын басыңыз және қалқымалы терезеде Access the multiple choice questions сілтемесіне өтіңіз. Сұрақтары бар парақша ашылады. Бұл зертхананы орындаудан басқа кейбір сұрақтарға жауап беру керек бірінші зертхана болып табылады. Енді бірінші төрт сұраққа жауап беруіміз керек. Олардың әрқайсысына тоқталайық. Бірінші сұрақ келесідей. Бұл инстанс public subnet-те орналасқан ба? Оны тексеріп көрейік. Бұл әрекетті орындау үшін, AWS Management Console оралайық, инстанс мәліметтерін ашып, Networking қойындысындағы Subnet ID қарастырайық. Бұл subnet-тің public екенін көресіз. Бірақ бәрібір бұл сілтемені ашайық. Ол осы subnet-тің мәліметтеріне өтеді және Route table қойындысында біз қандай routes бар екенін көреміз. Destination бүкіл Интернет болса және Target - Internet gateway болатын route болса, бұл анықтама бойынша бұл subnet жалпыға ортақ public екенін білдіреді. Бізде subnet-тегі ресурстарға кіруді басқаруға көмектесетін екі ресурс бар. Subnet-терге қосылатын Network ACL бар. Inbound және Outbound rules бүкіл Интернеттен кіруге мүмкіндік беретінін көре аласыз. Ешқандай шектеулер жоқ. Сондай-ақ, егер біз инстанстың деңгейінде Security group-қа қарасақ, келесі CIDR блоктары үшін 22 портқа кіруге рұқсат етілгенін көреміз. Жақсы. Сұрақтар тізіміне қайта оралып, осы сұраққа жауап берейік. Инстанс public subnet-те болғандықтан, Yes опциясын таңдаймыз. Енді екінші сұраққа көшейік. Сұрақ келесідей, осы EC2 инстансында жалпыға ортақ қолжетімді IP адресі бар ма? Мұны тексеру үшін Details қойындысын ашып, сәйкес өрісте мән бар-жоғын білуіміз керек. Мән бар болса, бұл жалпыға ортақ IP мекенжайы осы инстансқа тағайындалғанын білдіреді. Сондықтан екінші сұраққа Yes деп жауап береміз. Үшінші сұрақ келесідей. Бұл инстансқа қосылу үшін қандай Inbound порттары ашық? Біз оны бағана көрдік. EC2 инстансы туралы мәліметтер бетіне оралайық. Security қойындысын ашайық және белгіленген шаршыда сіз қандай рұқсат берілгенін көре аласыз. Бұл - екі түрлі CIDR блоктарына арналған 22 порт. Сондықтан төртінші опцияны таңдаймыз, TCP port 22 only, open to a specific range of IP addresses - дұрыс жауап. Әрі қарай жүрейік. Төртінші сұрақ. Мұнда келесідей сұраққа жауап беруіміз керек, IAM role EC2 инстансына байланысты ма? Мұны көру үшін EC2 инстансы туралы мәліметтер парақшасына ораламыз. Details қойындысын ашып, сәйкес өрісте IAM role үшін мән бар-жоғын көрейік. Егер role болса, онда оның атын көресіз және оны басу арқылы сол role-дің парақшасына өте аласыз. Ал қазір онда сызықша бар болғандықтан, бұл role қосылмағанын білдіреді. Сондықтан бұл сұраққа No деп жауап береміз. Келесі тапсырмаға көшеміз. Ол тапсырма бойынша Cloud9 сервисіне ауысуымыз керек. Ол үшін іздеу жолағына cloud9 деп теруді бастаңыз, бізге қажет сілтеме шығады. Cloud9 сервисінің негізгі парақшасына өткен бойда, бар Environments тізімін көресіз. CafeWebServer деп аталатын бір ғана environment болады. EC2 инстансы атауында CafeWebServer бар екені есімізде, бұл Cloud9 IDE біздің EC2 инстансында орнатылғанын білдіреді. IDE ашу үшін Open сілтемесін басыңыз. Егер осы уақытта EC2 инстансы тоқтап тұрса, Cloud9 оны автоматты түрде іске қосады, содан кейін біз үшін IDE ашады. Сондай-ақ, уақыт мөлшерін көрсететін параметр бар екенін атап өткім келді. Ал егер IDE мұндай уақыт ішінде пайдаланылмаса, біз қосымша шығындарға ұшырамас үшін ол EC2 инстансын автоматты түрде тоқтатады, бұл өте ыңғайлы. Cloud9 сервисін пайдаланған кезде, тек EC2 инстансы үшін төлейміз. Cloud9 сервисінің өзі тегін. IDE жүктеп алғаннан кейін әзірлеу ортасының негізгі парақшасына өтеміз, ол үш негізгі бөліктен тұрады. Сол жақта шарлау мәзірін, файлдар мен папкаларды көреміз. Төменде bash терминалы бар. Ал ортасында негізгі өріс - файлдармен жұмыс істеу. Мұнда әртүрлі файлдарды көре аламыз, сонымен қатар скрипт пен мәтіндік файлдарды өзгерте аламыз. Тапсырмаға сәйкес, EC2 инстансымызда қандай операциялық жүйе орнатылғанын көруіміз керек. Бұл Amazon Linux екенін көреміз. Мен оны пайдалануды ұсынамын, себебі бұл - AWS-қа қатысты көптеген мүмкіндіктерді қолдайтын операциялық жүйе. AWS оны үнемі жетілдіріп отырады. Қазіргі уақытта екінші нұсқасы қолжетімді, яғни Amazon Linux 2. Әрі қарай, командалар тізімін іске қосамыз, қажет қолданбалардың нұсқасын тексереміз, сондай-ақ олардың күйін тексереміз. Алғашқы екі команда веб-серверді тексереді. Әрі қарай, MySQL дерекқорының нұсқасы мен күйін тексеретін екі команда. Ал соңғы команда PHP бағдарламалау тілінің нұсқасын тексеру үшін. Қолданбалардың тоқтап тұрғанын көріп отырмыз, оларды іске қосу керек. Ол үшін келесі командаларды орындаймыз. Ең алдымен, осы командалардың басталуын іске қосуға енгіземіз, содан кейін осы қолданбаларды іске қосып, күйді тексереміз. httpd веб-сервері сәтті іске қосылғанын көреміз. Әрі қарай, дерекқормен де солай істейміз. Және екі қолданбаның да қазір жұмыс істеп тұрғанын және Running күйінде екенін көреміз. Әрі қарай, var/www жолына символдық сілтеме жасау керек және ол target ретінде /home/ec2-user/environment пайдаланады. Бұл IDE-де қолжетімді файлдардың барлығы, сәйкес html папкасы жасалады және веб-сервер осы папкадағы барлық мазмұнды көрсету үшін пайдаланады. html папкасына өтіп, сол жерде жаңа файл құрайық. Оны index.html деп атаймыз және оның құрамында қарапайым веб-парақша болады. Html тегтерінде Hello from the cafe web server! мәтіні болады. Жақсы, енді веб-серверімізді ашайық. Қажетті қолданбалар жұмыс істеп тұрғанын білеміз, сынақ HTML парақшасын жасадық. Енді EC2 инстансының жалпыға ортақ IP мекенжайын көшіріп, сол бойынша өтейік. Сайттың ашылмағанын көреміз. Мұнда бізге troubleshooting жасау қажет болды. Алдымен, Security group тексеру керек. Security қойындысында, Security group-қа сілтемені көреміз. Оны басайық және Inbound rules-тарда CIDR блоктарының белгілі бір тізіміне тек 22 портта ғана қол жетімді екенін бұрын көрдік. Біз 80-ші портта бүкіл Интернетке қол жеткізуді қамтамасыз етуіміз керек. Ол үшін Edit inbound rules батырмасын басыңыз, содан кейін Add rule батырмасын басу арқылы жаңа rule қосыңыз. Осыдан кейін Type ретінде HTTP таңдаймыз, Protocol және Port range автоматты түрде толтырылады және Source ретінде Anywhere-IPv4 таңдалуы керек. Сіз 0.0.0.0/0 мәні пайда болғанын көресіз, бұл бүкіл Интернеттің CIDR блогы. Барлығы дайын, өзгертулерімізді сақтай аламыз. Inbound rules тізімінде өзгертулерімізді сақтағаннан кейін жаңа жасалған rule көреміз. Енді сынақ веб-парақшасына оралып, оның сәтті ашылғанын көрейік. Hello from the cafe web server! мәтінін көреміз. Келесі тапсырмаға көшеміз, енді динамикалық мазмұны бар қосымшаны орнату керек. Бұл қосымша зертханалық жұмыстың бір бөлігі ретінде біз үшін жазылған. Бізге оны және AWS-ке қатысты барлық нәрсені орнатып, баптау қажет. Зертханалық тапсырманың бөлігі ретінде мұрағаттарды жүктеп алу және осы мұрағаттардың мазмұнын ашу командалары беріледі. Оларды іске қосайық. Осыдан кейін Environment папкасында үш папка пайда болады: cafe, db және setup. Cafe папкасының мазмұнын қарастырайық, атап айтқанда, index.php файлын ашыңыз. Сіз бұл html құжаты екенін көресіз, php кірістірулері де бар, яғни php скрипт іске қосылған. Енді getAppParameters.php файлын іске қосамыз. Осы файлды ашып, онда не бар екенін көрейік. Үшінші жолдың AWSSDK пайдаланатынын және скрипт жеті параметр жасау үшін systems manager клиентін пайдаланатынын көруге болады. Бұл скриптті bash терминалында іске қосайық. Параметрлеріміздің сәтті жасалғанын көре аласыз, бірақ мұны AWS Management Console-те қайта тексеріп көрейік. Мұны істеу үшін systems manager деп енгізуді бастайық және пайда болған нәтижелерде қажетті сілтемені қолданамыз. Systems manager негізгі парақшасына өткеннен кейін сол жақ шарлау мәзірінен Parameter store элементін таңдау керек. Осы сілтемені басқаннан кейін осы AWS аккаунтындағы барлық параметрлері бар парақшаға бағытталамыз және 7 параметр сәтті жасалғанын көреміз. Енді /cafe/dbPassword параметрін ашу керек, өйткені оның мәнін келесі қадамда қолданамыз. Мәнді көшіруіміз керек. Енді деректер қорын баптауымыз керек. Ол үшін bash терминалында db папкасын ашып, сол жерде set-root-password.sh скриптін іске қосу керек. Ол жаңа құпия сөзді сұрайды және мұнда бұрын көшірілген құпия сөзді қою керек. Әрі қарай /create-db.sh скриптін іске қосу керек, ол дерекқорда қажетті параметрлерді жасайды, кестелер жасайды және осы кестелерді сынақ деректерімен толтырады. Сондай-ақ, лог файлдарының мазмұнын қарауға болады, олар set-root-password.log және create-db.log. Дегенмен, дерекқорға қосылып, барлығы бар ма екенін көрейік. Ол үшін келесі команданы енгізіңіз, бізде пароль бар. Қосылғаннан кейін біз MySQL сәлемдесу хабарламаларын және prompt көреміз, яғни біз командаларымызды енгізе аламыз. Келесі командаларды енгізейік, қандай деректер базасы бар екенін көреміз. Егер біз cafe-db-де болсақ, онда қандай кестелер бар екенін көрейік, 4 кесте бар екенін көреміз. Мысал ретінде product кестесінің мазмұнын ашайық, әрбір позиция үшін 9 түрлі позициялар мен мәліметтер бар екенін көреміз. Жақсы, енді соңғы түзетуді жасайық, PHP үшін уақыт белдеуін енгізу керек. Мұны істегеннен кейін веб-серверімізді қайта іске қоса аламыз және /cafe қосу арқылы EC2 инстансының жалпыға қолжетімді IP мекенжайын ашып көреміз. Бұл динамикалық веб-сайтымыз орналасқан жол. Біз тек Cafe тақырыбы көрсетілгенін, ал қалғаны көрсетілмейтінін көреміз. Бұл бірдеңе дұрыс жұмыс істемейді дегенді білдіреді, тапсырманың бір бөлігі ретінде troubleshooting жасау қажет. Қолданбаның PHP жағында қателер болмағандықтан, бізден рұқсаттарды қарауды ұсынылады. Қолжетімділік туралы айтқанда, IAM сервисі еске түседі, оған ауысып, рөлдер тізімін қарастырайық. Рөлдер тізімінде CafeRole бар екенін көреміз, өйткені Trusted entities ретінде EC2 сервисі көрсетілген, оны ашып, оған қандай policy тіркелгенін көрейік. Бірінші policy EC2 import key, keypair әрекетіне рұқсат береді, содан кейін келесі мазмұны бар root деп аталатын басқа policy бар. Parameter store-мен жұмыс істеуге толық құқықтар беріледі. Жақсы, бұл рөл біздің EC2 инстансы және сәйкесінше веб-қосымшасы үшін сәйкес деп ойламайсыз ба? Бұл - сұрақтың жауабы, енді бұл рөлді EC2 инстансына байланыстырайық. Мұны істеу үшін EC2 инстансын таңдауыңыз керек, содан кейін Actions батырмасын басып, Security опциясын таңдаңыз, содан кейін Modify IAM role опциясын таңдаңыз. Оны басқаннан кейін IAM рөлдерінің тізімінен қажетті рөлді таңдауға болатын бөлек парақшаға бағытталасыз. Бұл рөлдердің тізімі IAM сервисінде бұрын көргендерден әлдеқайда аз екенін ескеріңіз, неге? Барлық сервистер EC2 сервисін Trusted entity ретінде көрсетпегендіктен, біз таңдауға болатын екі рөлді ғана көреміз. Бізді CafeRole рөлі қызықтырады, оны таңдап, Update IAM role батырмасын басыңыз. Оны істегеннен кейін, өзгерістердің сәтті аяқталғаны туралы хабарды аламыз және IAM role өрісінде біздің рөлге сілтемені көресіз. Жақсы, енді веб-қосымша парақшасына оралып, оны жаңартып көрейік. Сіз парақшаның толығымен ашылғанын көресіз, кейбір мазмұн бар, сонымен қатар әртүрлі қойындылар бар, бізді Menu қойындысы қызықтырады. Оған басайық және мұнда өнімдерді таңдай аламыз, санын көрсетеміз, үш круассанды таңдайық, төменде жалпы сома көрсетіледі және Submit order батырмасы бар. Оны басқаннан кейін тапсырысымызды растайтын парақшаға ауысамыз. Енді екінші тапсырыс ретінде бір ыстық шоколадқа тапсырыс берейік. Order total дұрыс көрсетіледі, сонымен қатар Submit order батырмасын басыңыз. Оны жасағаннан кейін біз растауды аламыз, енді Order history қойындысын қарастырайық. Жақсы, біз екі тапсырысымыз дұрыс көрсетілгенін көріп отырмыз, барлық мәліметтер дұрыс және мен сізді құттықтаймын, біз қолданбаны сәтті баптадық және бәрі дұрыс жұмыс істейді. Енді келесі тапсырмаға көшеміз, басқа AWS аймағында екінші environment жасаймыз. Бұл үшін бірінші қадам - AMI жасау және AMI жасамас бұрын, олар осы AMI-де қалатындай етіп SSH кілттерін жасауымыз керек және жергілікті компьютерге көшірілген жеке кілтпен біз құрған AMI-ды қолданатын кез келген AWS аймағында кез келген инстансқа қосыла аламыз. Бірақ SSH арқылы қосылудың қажеті жоқ, бұл қазір жай ескеріледі, оны болашақ жұмысыңызда қалай баптауға болатынын көрсетеді. Қауіпсіздік тұрғысынан бұл кілттерді AMI-де сақтау ең жақсы шешімдердің бірі болмауы мүмкін. Қауіпсіздік және дайын функционалдылықты пайдалану тұрғысынан ең жақсы шешім - EC2 инстансын жасау кезінде сәйкес параметрлерді пайдалану, онда сізге қажет жалпыға ортақ кілтті көрсетуге болады. Осы кілтпен жұптастырылған жеке кілтіңіз болса, осы инстансқа сәтті қосыла аласыз. Жақсы, SSH кілтін жасайтын және оны қажетті орынға тасымалдайтын бірқатар командаларды орындау керек. Оны орындағаннан кейін AMI құруды бастай аламыз. Ол үшін инстанстар тізімінде біздің EC2 инстансты таңдауыңыз керек, Actions батырмасын басыңыз, ашылмалы мәзірден Image and Templates опциясын таңдап, Create Image батырмасын басыңыз. Image жасау парақшасына бағытталамыз, бірақ оны толтыруды бастамас бұрын бірнеше сұрақтарға жауап беруіміз керек. Енді біз үш сұраққа жауап беруіміз керек, бұл бесінші, алтыншы және жетінші. Бесінші сұрақ келесідей. Қолданыстағы инстанстан AMI жасағанда, бұл инстанс қайта жүктеледі ме? AMI жасау парақшасына оралып, No Reboot опциясына назар аударайық. Ол әдепкі бойынша қосылмаған. Бұл әдепкі бойынша инстанстың одан AMI жасалған кезде қайта жүктелетінін білдіреді. Егер инстансты қайта жүктеуді қаламасақ, мұнда құсбелгіні қою керек. Сонымен, бесінші сұраққа үшінші жауап нұсқасы дұрыс. Келесі сұраққа көшейік. Ол келесідей. Бар инстанстан AMI жасау кезінде root volume-нің қандай қасиеттерін өзгертуге болады? AMI жасау парақшасына қайта оралып, не істей алатынымызды көрейік. Өлшемін, сондай-ақ, Delete on termination параметрін өзгерте алатынымызды көреміз. Бірақ Volume Type және басқа параметрлерді өзгерте алмаймыз. Сондықтан сұраққа қайта ораламыз және үшінші жауап нұсқасын таңдаймыз, ол дұрыс. Келесі сұраққа көшейік. Жетінші сұрақ келесідей. Бір root volume бар инстанстан AMI жасау кезінде көбірек volume қосуға болады ма? Егер байқасаңыз, Add volume белсенді батырмасы бар, яғни қажет болған жағдайда data volume-нің кез келген санын қоса аламыз. Сондықтан жетінші сұраққа Yes деп жауап береміз. Осымен біз барлық сұрақтарға жауап алдық. AWS Management Console-ге оралайық. Image Name ретінде CafeServer енгізіп, парақшаның төменгі жағындағы Create Image батырмасын басу керек. Image жасауға екі минуттай уақыт кетеді. AMI тізімін көрсету үшін сол жақ шарлау мәзірінен AMI элементін таңдау керек. Бізде қазір жасалып жатқан жалғыз AMI бар екенін көреміз, себебі күй Pending болып тұр. Парақшаны жаңартқан кезде күйдің Available күйіне өзгеруін күтуіміз керек және келесі тапсырмаға көшуімізге болады. Келесі тапсырма: осы AMI көмегімен басқа аймақта инстансты орнату керек. Зертханалық жұмыстың бір бөлігі ретінде мұны өзіңіз жасап көру ұсынылады. Бізге бірінші істеу керек әрекет - AMI көшіру және AWS Management Console-де аймақты өзгерту. Оны US West (Oregon) аймағына өзгертеміз. Мұны істегеннен кейін, AMI тізімі бос екенін көреміз. Көшірілген AMI ID арқылы іздеуді бастасақ та, іздеу ештеңені көрсетпейді. Шешім ретінде AMI көшірмесін жасау ұсынылады, өйткені AMI тек бір аймақта қол жетімді. Егер бұл AMI-ді басқа аймақта пайдалану қажет болса, оны сол жерге көшіру керек, оны қазір жасаймыз. Тізімнен AMI таңдауымыз керек. Содан кейін Actions батырмасын басып, Copy AMI опциясын таңдаңыз. Тиісті парақшаға ауысасыз. Мұнда барлық өрістерді әдепкі мәндерімен қалдырамыз. Сізге қажет өріс - аймақты таңдау. Біздің жағдайда US West (Oregon). Осыдан кейін парақшаның төменгі жағындағы Copy AMI батырмасын басамыз. Жақсы, басқа аймақта AMI көшірмесін жасау процесі басталды. Бұл шамамен бес минутты алады. Сіз target аймақта AMI жасау күйін бақылай аласыз. Сондықтан AWS Management Console-де US West (Oregon) аймағына ауысамыз. Парақшаны жаңартқан кезде күйдің Pending-тен Available күйіне ауысуын күтуіміз керек. Осыдан кейін келесі тапсырмаға көшуге болады. Енді жасалған AMI-ден EC2 инстансын жасай аламыз. Ол үшін AMI таңдап, жоғарғы оң жақ бөліктегі Launch instance from AMI батырмасын басу керек. Мұнда Name ретінде ProdCafeServer енгізуіміз керек. Келесі Instance Type - t2.small. Network Settings ретінде кейбір өзгерістер енгізу қажет, сондықтан Edit батырмасын басу керек. Мұнда VPC - Lab VPC Region 2 таңдау керек. Әрі қарай, Subnet ретінде ұсынылған тізімнен Public Subnet параметрін таңдаңыз. Содан кейін жаңа Security тобын жасау керек болады. Оны CafeSG деп атаймыз. Ол үшін екі Inbound rules жасау қажет. Біріншісі Интернеттен 22 портқа кіруге мүмкіндік береді. Бұл SSH арқылы қосылу қажет болған жағдайда. Егер бәрі дұрыс жасалса, зертханалық жұмыстың бір бөлігі ретінде SSH арқылы қосылмаймыз. Екінші rule - 80-ші портта орналасқан, Интернеттегі кез келген адам біздің веб-сайтты аша алады. Осы параметрлерді енгізгеннен кейін парақшаның ең төменгі жағына жылжып, Advanced Details өрісінде бұрын таңдаған CafeRole рөлін таңдауымыз керек. Осы инстансты жасау процесін бастау үшін Launch Instance батырмасын басыңыз. Оны басқаннан кейін қалқымалы терезе пайда болады, онда SSH кілттері болмайтын инстансты жасап жатырмыз және 22 портқа қосыла алмаймыз деп тұрады. Біздің жағдайда, қажетті SSH кілттері AMI ішінде орналасқан, сондықтан Proceed without Key Pair опциясын таңдай аламыз. Осыдан кейін Proceed without Key Pair батырмасын басыңыз. Жақсы, инстансты жасау процесі сәтті басталғанын және барлық инстанстардың тізіміне өту батырмасы бар екенін көрсететін хабарды көреміз. Оны басайық. Оны басқаннан кейін инстанстың жасалып жатқанын көреміз. Оның барлық жүйелік тексерулерден өтуін күту керек. Барлығы дайын болғаннан кейін инстансты таңдауымыз керек, осы инстансқа арналған метадеректер тізімі көрсетіледі және Details қойындысында жалпы IP мекенжайын көшіру керек. Оны басып, өтейік. Өткеннен кейін, арнайы веб-қосымшаға кірген кезде, бұл IP мекенжайы/cafe, басты парақшаның сәтті көрсетілгенін көреміз. Енді тапсырыс беру үшін Menu қойындысына өтіп көрейік. Menu қойындысын басқаннан кейін ешқандай items жоқ екенін көреміз. Мұнда зертханалық жұмыстың бір бөлігі ретінде мәселенің не екенін анықтап, оны өзіңіз шешуге тырысу керек болды. Жауабын бірден берейін. Мәселе мынада, бізге қажетті параметрлер бұл аймақта жасалмаған. Оларды құру қажет. Бұл шынымен де біздің веб-сайтта өнімдердің болмауының себебі екенін тексерейік. Мұны істеу үшін AWS Management Console-не өтіңіз және мұнда Parameter Store сервисіне өту керек. Parameter Store деп теруді бастасаңыз, қалаған сілтемеге тікелей өтуіңізге болады. Нәтижелерде Features бөліміндегі Parameter Store сілтемені көресіз. Оны басқаннан кейін сервистер тобы болып табылатын Systems Manager-ге өтесіз, бірақ сол жақ шарлау мәзірінде қажет қойындыда боласыз. Oregon аймағында болуыңыз керек екенін ескеріңіз және бәрі дұрыс болса, жаңа параметр жасауды сұрайтын парақшаны көресіз. Бұл параметрлер әлі жасалмағанын көрсетеді. Жақсы, енді негізгі North Virginia аймағына барып, жеке ID ашуымыз керек. Оны ашқаннан кейін set-app-parameters скриптін ашып, кейбір өзгерістер енгізу керек, атап айтқанда region айнымалысы үшін 12-жолда және publicDNS айнымалысы үшін 18-жолда. region ретінде us-west-2 енгізу керек, ал publicDNS ретінде жаңадан жасалған EC2 инстансынан мәндерді көшіру керек. Мұны істегеннен кейін, скрипттің атын тінтуірдің оң жақ түймешігімен басып, Run this file опциясын таңдауға болады. Бұл автоматты түрде жаңа Bash терминал қойындысын ашады және осы скриптті іске қосады. Параметрлердің сәтті жасалғанын көреміз. Енді AWS Management Console-ге оралайық және Parameter Store парақшасын жаңартайық. Біз 7 параметрдің сәтті жасалғанын көреміз және сіз дұрыс аймақта, яғни Oregon аймағында екеніңізді ескереміз. Жақсы, енді сайтқа оралып, парақшаны жаңартайық және Menu қойындысында құрамы бірдей барлық өнімдеріміздің пайда болғанын көреміз. Қазір бір өнімге тапсырыс беріп көрейік. Бұл жолы бір бәлішке тапсырыс беріп, оны жасап көрейік. Тапсырыстың сәтті жасалғанын растауды көреміз және тапсырыстар тарихы парақшасына өтсек, оның біздің тапсырыстарымыздың бірімен толықтырылғанын көреміз. Бұл дұрыс. Жақсы, құттықтаймыз, бұл зертханалық жұмысты сәтті аяқтадық. Енді барлығын дұрыс жасағанымызға көз жеткізу үшін бағалау жүйесін іске қосуымыз керек. Ол үшін зертханалық жұмыс бар парақшаға өтіп, Submit батырмасын басыңыз. Қалқымалы терезе пайда болады, Yes батырмасын басып, біраз күту керек. Мүмкін болатын 30 ұпайдан қанша ұпай жинағаныңызды көрсететін хабарламаны көресіз. Менің жағдайымда 30-дан 30 - ең жоғары балл. Сізде де солай болады деп үміттенемін. Егер олай болмаса, онда сіз ұпайыңыздың талқыламасы бар екенін көресіз және қай кезеңде, қай тапсырмада қате болғанын анықтай аласыз және оны түзетуге болады. Енді барлық жүйелерден дұрыс шығуымыз керек. AWS Management Console үшін жоғарғы оң жақтағы пайдаланушы атын басып, Sign out таңдау керек. Зертханалық жұмыс жазылған парақшада End lab батырмасын басып, растау керек. Қалқымалы терезеде You may close this message box now. Lab resources are terminating... хабарламасын көруіңіз керек. Осыдан кейін қалқымалы терезені және зертханалық жұмыстың терезесін жабуға болады. Осымен зертханалық жұмысты аяқтап, оны толығымен талқыладық. Сіз жақсырақ түсіндіңіз деп үміттенемін. Назарларыңызға рахмет, келесі белсенділіктерде кездескенше.
WEBVTT

00:00:00.000 --> 00:00:07.000
Добрый день, уважаемые студенты! Я рад вас всех видеть на очередной сессии разбора лабораторной работы.

00:00:07.000 --> 00:00:13.000
Тема лабораторной работы это создание динамического веб-сайта для нашего бизнес-кейса кафе.

00:00:13.000 --> 00:00:15.000
Итак, давайте начнем.

00:00:17.000 --> 00:00:21.000
Мы начинаем с вами лабораторную работу с основной страницы лабораторной работы.

00:00:21.000 --> 00:00:24.000
Необходимо убедиться, что название совпадает.

00:00:24.000 --> 00:00:29.000
Должно быть module for Challenge Lab creating dynamic website for the cafe.

00:00:29.000 --> 00:00:31.000
Отлично.

00:00:31.000 --> 00:00:37.000
Сейчас для начала лабораторной работы нам необходимо инициировать создание временного AWS аккаунта.

00:00:37.000 --> 00:00:40.000
Для этого необходимо нажать на кнопку Start Lab.

00:00:40.000 --> 00:00:48.000
Далее в открывшейся странице необходимо дождаться, что Lab status изменит значение на Ready.

00:00:48.000 --> 00:00:53.000
Как только это произойдет, вы можете закрывать это всплывающее окно.

00:00:53.000 --> 00:00:59.000
И далее на странице с лабораторной работой необходимо нажать на кнопку AWS.

00:00:59.000 --> 00:01:04.000
По нажатию на эту кнопку вас направит на главную страницу AWS Management Console.

00:01:04.000 --> 00:01:16.000
Согласно заданию нам необходимо перейти в сервис EC2 и посмотреть какие же инстанции есть в этом AWS аккаунте.

00:01:16.000 --> 00:01:25.000
Сделать вы это можете двумя путями, либо через навигационное меню слева, либо через ссылку instances ранее.

00:01:25.000 --> 00:01:34.000
Как только вы переходите по любой из этих ссылок, вы увидите, что есть один единственный EC2 instance,

00:01:34.000 --> 00:01:39.000
в названии которого содержится AWS Cloud9 Cafe Web Server.

00:01:39.000 --> 00:01:41.000
Оно нам пригодится чуть позже.

00:01:41.000 --> 00:01:46.000
Давайте теперь перейдем на страницу с лабораторной работой.

00:01:46.000 --> 00:01:55.000
Нажмем на кнопку details, далее нажмем на кнопку show и в всплывающем окне перейдем на ссылку access the multiple choice questions.

00:01:55.000 --> 00:01:57.000
Откроется страница с вопросами.

00:01:57.000 --> 00:02:07.000
Это первая лабораторная работа, где мы помимо выполнения этой лабораторной работы также будем отвечать на некоторые вопросы.

00:02:07.000 --> 00:02:14.000
Сейчас нас просят ответить на первые четыре вопроса. Давайте пройдемся по каждому из них.

00:02:14.000 --> 00:02:17.000
Первый вопрос звучит следующим образом.

00:02:17.000 --> 00:02:21.000
Находится ли этот instance в публичном сабнете?

00:02:21.000 --> 00:02:23.000
Давайте это проверим.

00:02:23.000 --> 00:02:31.000
Для этого вернемся в AWS Management Console, откроем детали инстанца и во вкладке networking посмотрим subnet ID.

00:02:31.000 --> 00:02:36.000
Вы видите, что уже есть подсказка, что этот сабнет является паблик.

00:02:36.000 --> 00:02:40.000
Но тем не менее, давайте откроем эту ссылку.

00:02:40.000 --> 00:02:50.000
Она перейдет к деталям этого сабнета и во вкладке road table посмотрим какие road есть.

00:02:50.000 --> 00:02:56.000
Если есть road на destination весь интернет и target является интернет gateway.

00:02:56.000 --> 00:03:02.000
Это по определению значит, что этот сабнет является публичным.

00:03:02.000 --> 00:03:09.000
У нас есть также два ресурса, которые помогают контролировать доступ до наших ресурсов в сабнетах.

00:03:09.000 --> 00:03:13.000
Есть Network.SL, который привязывается к сабнетам.

00:03:13.000 --> 00:03:18.000
Вы видите, что inbound и outbound рули разрешают доступ со всего интернета.

00:03:18.000 --> 00:03:20.000
Ограничений нет.

00:03:20.000 --> 00:03:31.000
Также если мы посмотрим security группу на уровне нашего instance, мы увидим, что разрешен доступ на 22 порт.

00:03:31.000 --> 00:03:36.000
На следующие cedar блоки.

00:03:41.000 --> 00:03:46.000
Отлично. Давайте вернемся обратно к списку вопросов и ответим на этот вопрос.

00:03:46.000 --> 00:03:53.000
Так как instance находится в паблик сабнете, мы выбираем опцию yes.

00:03:56.000 --> 00:03:59.000
Давайте теперь перейдем ко второму вопросу.

00:03:59.000 --> 00:04:06.000
По поводу этого вопроса у нас спрашивают есть ли публичный IP адрес у этого easy2 instance.

00:04:06.000 --> 00:04:13.000
Чтобы это проверить нам достаточно открыть вкладку details и в соответствующем поле посмотреть есть ли значение.

00:04:13.000 --> 00:04:19.000
Если значение есть, это значит, что публичный IP адрес присвоен к этому instance.

00:04:19.000 --> 00:04:22.000
Поэтому на второй вопрос мы отвечаем yes.

00:04:22.000 --> 00:04:25.000
Третий вопрос звучит следующим образом.

00:04:25.000 --> 00:04:35.000
Какие inbound порты открыты для подключения к этому instance?

00:04:35.000 --> 00:04:38.000
Мы с вами это уже посмотрели.

00:04:38.000 --> 00:04:43.000
Давайте вернемся обратно к странице с деталями easy2 instance.

00:04:43.000 --> 00:04:50.000
Откроем вкладку security и в выделенном квадрате вы видите какой доступ предоставлен.

00:04:50.000 --> 00:04:53.000
Это 22 порт на два различных cedar блока.

00:04:53.000 --> 00:04:56.000
Поэтому мы выбираем четвертую опцию.

00:04:56.000 --> 00:05:02.000
То есть easy2 port 22 only open to a specific range of IP addresses является верным ответом.

00:05:02.000 --> 00:05:05.000
Двигаемся дальше. Четвертый вопрос.

00:05:05.000 --> 00:05:18.000
Здесь нам необходимо ответить на вопрос соединен ли соединена ли am роль к easy2 instance.

00:05:18.000 --> 00:05:24.000
Чтобы это посмотреть мы возвращаемся обратно странице с деталями easy2 instance.

00:05:24.000 --> 00:05:31.000
Откроем вкладку details и в соответствующем поле увидим есть ли значение для am role.

00:05:31.000 --> 00:05:39.000
Если бы роль была, то вы бы увидели название роли и по нажатию которой вы могли бы перейти на страницу этой роли.

00:05:39.000 --> 00:05:43.000
Так как там стоит прочерк, значит роль не привязана.

00:05:43.000 --> 00:05:46.000
Поэтому мы отвечаем на этот вопрос no.

00:05:46.000 --> 00:05:51.000
Мы переходим к следующему заданию.

00:05:51.000 --> 00:05:55.000
Согласно нему нам необходимо перейти в сервис cloud9.

00:05:55.000 --> 00:06:02.000
Для этого в строке поиска начнем вводить cloud9 и воспользуемся нужной нам ссылкой.

00:06:02.000 --> 00:06:10.000
Как только вы перейдете на главную страницу сервиса cloud9 вы увидите список существующих environannt.

00:06:10.000 --> 00:06:14.000
Там будет единственный environannt называется кафе web server.

00:06:14.000 --> 00:06:23.000
Мы с вами помним что easy2 instance содержит в имени кафе web server.

00:06:23.000 --> 00:06:30.000
Что означает IDE cloud9 был поднят в нашем easy2 instance.

00:06:30.000 --> 00:06:35.000
Для того чтобы открыть IDE необходимо нажать на ссылку open.

00:06:35.000 --> 00:06:48.000
Если в это время easy2 instance остановлен то cloud9 автоматически его стартует и после этого откроет нам IDE.

00:06:48.000 --> 00:06:56.000
Также я хотел обратить внимание что есть настройка вы указываете количество времени.

00:06:56.000 --> 00:07:11.000
И если такое время IDE не будет использоваться то она автоматически остановит easy2 instance чтобы мы не несли дополнительных расходов.

00:07:11.000 --> 00:07:13.000
Что очень удобно.

00:07:13.000 --> 00:07:21.000
Мы оплачиваем только за easy2 instance когда используем сервис cloud9.

00:07:21.000 --> 00:07:24.000
Сам сервис cloud9 он бесплатный.

00:07:24.000 --> 00:07:31.000
После загрузки IDE мы переходим на основную страницу.

00:07:31.000 --> 00:07:37.000
Этой среды разработки у нас состоит из трех основных частей.

00:07:37.000 --> 00:07:41.000
С левой стороны мы видим навигационное меню, файлы и папки.

00:07:41.000 --> 00:07:43.000
В нижней части есть баш терминал.

00:07:43.000 --> 00:07:47.000
А посередине основное поле это работа с файлами.

00:07:47.000 --> 00:07:56.000
Здесь мы можем просматривать различные файлы, также изменять наши скрипты и текстовые файлы.

00:07:56.000 --> 00:08:04.000
Согласно заданию нам необходимо посмотреть какая операционная система установлена на нашем easy2 instance.

00:08:04.000 --> 00:08:07.000
Мы видим что это Amazon Linux.

00:08:07.000 --> 00:08:20.000
Я рекомендую ее использовать потому что это операционная система нативно поддерживающая многие моменты связанные с AWS.

00:08:20.000 --> 00:08:25.000
AWS занимается постоянным ее улучшением.

00:08:25.000 --> 00:08:34.000
На текущий момент уже доступна вторая версия то есть Amazon Linux 2.

00:08:34.000 --> 00:08:45.000
Далее мы запускаем список команд, проверяем версию необходимых нам приложений и также проверяем их статус.

00:08:45.000 --> 00:08:48.000
Первые две команды проверяют веб-сервер.

00:08:48.000 --> 00:08:56.000
Далее две команды на проверку версии и статуса базы данных MazeQL.

00:08:56.000 --> 00:09:02.000
И последняя команда проверка версии языка программирования PHP.

00:09:02.000 --> 00:09:07.000
Мы видим что приложения остановлены, нам необходимо их стартовать.

00:09:07.000 --> 00:09:11.000
Для этого мы запускаем следующие команды.

00:09:11.000 --> 00:09:20.000
В первую очередь мы заносим старт этих команд в автозагрузку, далее стартуем эти приложения и проверяем статус.

00:09:20.000 --> 00:09:27.000
Мы видим что HTTP D сервис веб-сервер успешно стартовал.

00:09:27.000 --> 00:09:30.000
Далее то же самое проделываем с базой данных.

00:09:30.000 --> 00:09:38.000
И видим что оба приложения на текущий момент запущены и в состоянии ранее.

00:09:41.000 --> 00:09:53.000
Далее нам необходимо создать сим-линк до пути вар www и как target он будет использовать home-ec2user-environment.

00:09:53.000 --> 00:10:09.000
Это все те файлы которые доступны в IDE, будет создана соответствующая папка HTML и веб-сервер будет использовать все содержание из этой папки для отображения.

00:10:14.000 --> 00:10:21.000
Давайте перейдем в папку HTML и создадим там новый файл.

00:10:21.000 --> 00:10:27.000
Назовем ее index.html и она будет содержать себе простейшую веб-страницу.

00:10:27.000 --> 00:10:33.000
В тегах HTML будет текст hello from the cafe-веб-сервер.

00:10:33.000 --> 00:10:37.000
Отлично, теперь попробуем открыть наш веб-сервер.

00:10:37.000 --> 00:10:47.000
Мы знаем что необходимые приложения уже запущены, тестовую HTML страницу мы уже создали.

00:10:47.000 --> 00:10:56.000
И давайте теперь перейдем к нашему EC2-инстанцу для того чтобы скопировать его публичный IP-адрес и попробуем по нему перейти.

00:10:56.000 --> 00:10:59.000
Мы видим что сайт не открывается.

00:11:03.000 --> 00:11:07.000
Здесь нам нужно было провести некоторый troubleshooting.

00:11:07.000 --> 00:11:10.000
В первую очередь необходимо проверить security-группы.

00:11:10.000 --> 00:11:18.000
Если мы перейдем на страницу на вкладку security мы увидим ссылку на security-группу.

00:11:18.000 --> 00:11:31.000
Давайте по нему перейдем и вы видите в inbound-рулах, мы видели ее ранее, что доступ есть только по 22 порту на некоторый список cidre-блоков.

00:11:31.000 --> 00:11:37.000
Нам необходимо предоставить доступ ко всему интернету на 80 порт.

00:11:37.000 --> 00:11:48.000
Для этого необходимо нажать на кнопку edit inbound rules, далее добавить новый rule путем нажатия на кнопку add rule.

00:11:48.000 --> 00:11:59.000
После чего как type выбираем HTTP, протокол и порт рейндж он автоматически заполняется и как source необходимо выбрать anywhere ipv4.

00:11:59.000 --> 00:12:07.000
И вы увидите что появится значение все нули слеш ноль это cidre-блок всего интернета.

00:12:07.000 --> 00:12:11.000
Все готово, мы можем сохранять наши изменения.

00:12:11.000 --> 00:12:18.000
Как только сохранили свои изменения в списке inbound-рулов мы видим новый созданный rule.

00:12:18.000 --> 00:12:35.000
Теперь давайте попробуем вернуться на страницу с нашей тестовой веб-страницы и видим что она успешно открылась.

00:12:35.000 --> 00:12:38.000
Мы видим текст hello from cafe-вебсервер.

00:12:38.000 --> 00:12:51.000
Мы с вами двигаемся дальше к следующему заданию, теперь нам необходимо установить приложение с динамическим контентом.

00:12:51.000 --> 00:12:56.000
Это приложение уже было написано в рамках лабораторной работы за нас.

00:12:56.000 --> 00:13:02.000
Нам лишь необходимо произвести его установку и настройку и все что касается AWS.

00:13:02.000 --> 00:13:15.000
В рамках лабораторного задания даны команды для загрузки архивов и разархивирования содержания этих архивов.

00:13:15.000 --> 00:13:17.000
Давайте их запустим.

00:13:17.000 --> 00:13:29.000
После этого у нас в папке environment появятся три папки это cafe, db и setup.

00:13:29.000 --> 00:13:36.000
Давайте посмотрим содержание папки cafe, а именно откроем файл index.php.

00:13:36.000 --> 00:13:43.000
Вы видите что это HTML документ, также есть PHP вставки, то есть запускается PHP скрипт.

00:13:43.000 --> 00:13:48.000
В этом случае мы запускаем getappparameters.php.

00:13:48.000 --> 00:13:52.000
Давайте теперь откроем этот файл, посмотрим что там есть.

00:13:52.000 --> 00:14:08.000
Вы видите что на третьей строчке используется AWS SDK и скрипт использует клиент systems manager для создания семи параметров.

00:14:08.000 --> 00:14:11.000
Давайте запустим этот скрипт в ваш терминале.

00:14:11.000 --> 00:14:21.000
Вы видите что наши параметры были успешно созданы, тем не менее давайте перепроверим это в AWS Management консоли.

00:14:21.000 --> 00:14:31.000
Для этого начнем вводить systems manager и в появившейся выдаче воспользуемся нужной нам ссылкой.

00:14:31.000 --> 00:14:40.000
Как только мы перейдем на главную страницу systems manager, нам необходимо в левом навигационном меню выбрать пункт параметр store.

00:14:40.000 --> 00:14:54.000
Как только вы нажимаете на эту ссылку, нас направляет на страницу со всеми параметрами в этом AWS аккаунте и мы видим что 7 параметров были успешно созданы.

00:14:54.000 --> 00:15:05.000
Теперь нам необходимо открыть параметр cafeDBPassword, так как мы воспользуемся ее значением в следующем шаге.

00:15:05.000 --> 00:15:08.000
Нам необходимо значение скопировать.

00:15:08.000 --> 00:15:11.000
Теперь нам необходимо произвести настройку баз данных.

00:15:11.000 --> 00:15:21.000
Для этого необходимо в ваш терминале открыть папку db, там запустить скрипт setRootPassword.sh.

00:15:21.000 --> 00:15:28.000
Он запросит новый пароль и здесь вам необходимо вставить скопированный ранее пароль.

00:15:28.000 --> 00:15:41.000
Далее необходимо запустить скрипт createDB.sh, он произведет необходимые настройки в базе данных, создаст таблицы и наполнит эти таблицы тестовыми данными.

00:15:41.000 --> 00:15:51.000
Вы также можете посмотреть содержание лог файлов, это setRootPassword.log и createDB.log.

00:15:51.000 --> 00:15:58.000
Тем не менее давайте попробуем подключиться к базе данных и посмотреть действительно ли все там на месте.

00:15:58.000 --> 00:16:01.000
Для этого введем следующую команду, пароль у нас есть.

00:16:01.000 --> 00:16:11.000
Как только мы подключимся мы увидим приветственные сообщения MESKILL и увидим prompt, то есть мы уже можем вводить наши команды.

00:16:11.000 --> 00:16:16.000
Давайте введем следующие команды, мы посмотрим какие базы данных есть.

00:16:16.000 --> 00:16:25.000
Если мы спозиционируемся на cafeDB, посмотрим какие есть таблицы, мы видим что у нас есть 4 таблицы.

00:16:25.000 --> 00:16:39.000
Давайте как пример откроем содержание таблицы product, мы увидим что у нас есть 9 различных позиций и деталей по каждой из позиций.

00:16:39.000 --> 00:16:51.000
Отлично, давайте теперь произведем последнюю настройку, нам необходимо ввести тайм зону для PHP.

00:16:51.000 --> 00:17:08.000
Как только мы это сделаем, мы можем рестартовать наш веб сервер и можем попробовать открыть публичный IP адрес EC2 инстанца с добавлением slash кафе.

00:17:08.000 --> 00:17:14.000
Это тот путь где находится наш динамический веб сайт.

00:17:14.000 --> 00:17:20.000
Мы видим что отображается только header кафе, а оставшаяся часть не отображается.

00:17:20.000 --> 00:17:28.000
Значит что-то работает некорректно, здесь в рамках задания необходимо произвести некоторый troubleshooting.

00:17:28.000 --> 00:17:42.000
Как подсказка нам предлагается посмотреть в сторону доступов, так как ошибок на стороне PHP приложения нет.

00:17:42.000 --> 00:17:52.000
Когда мы говорим про доступы, сразу вспоминается сервис IEM, давайте попробуем на нее перейти, посмотрим список ролей.

00:17:52.000 --> 00:18:02.000
В списке ролей мы видим есть кафе роль, как trusted entity указано сервис EC2, давайте ее откроем и посмотрим какие полиси к ней привязаны.

00:18:02.000 --> 00:18:15.000
Первая полиси разрешает действие EC2 import key, keypair, далее есть другая полиси, называется root следующего содержания.

00:18:15.000 --> 00:18:22.000
Предоставляется полные права для работы с параметр store.

00:18:22.000 --> 00:18:31.000
Отлично, вам не кажется что эта роль идеально бы подошла для нашего EC2 инстанца и соответственно веб приложения?

00:18:31.000 --> 00:18:39.000
Это и есть ответ на вопрос, давайте теперь привяжем эту роль к нашему EC2 инстанцу.

00:18:39.000 --> 00:18:55.000
Для этого необходимо выбрать наш EC2 инстанц, далее нажать на кнопку actions, выбрать опцию security и далее выбрать опцию modify IEM роль.

00:18:55.000 --> 00:19:04.000
Как только вы на нее нажмете, вас направят на отдельную страницу, где вы можете выбрать из списка IEM ролей нужны.

00:19:04.000 --> 00:19:12.000
Обратите внимание, что в этом списке ролей намного меньше, которые мы видели ранее в сервисе IEM, почему?

00:19:12.000 --> 00:19:22.000
Потому что не все сервисы указали как trusted entity, сервис EC2, поэтому мы видим только две роли, которые мы можем выбрать.

00:19:22.000 --> 00:19:31.000
Нас интересует роль cafe-role, давайте ее выберем и нажмем на кнопку update IEM роль.

00:19:31.000 --> 00:19:43.000
Как только мы это сделаем, мы получим сообщение о том, что изменения успешно выполнены и также вы увидите в поле IEM роль ссылку на нашу роль.

00:19:43.000 --> 00:19:49.000
Отлично, давайте теперь вернемся на страницу с нашим веб приложением и попробуем ее обновить.

00:19:49.000 --> 00:20:00.000
Вы видите, что страница полностью открылась, у нас появилось некоторое содержание, также различные вкладки и нас интересует вкладка меню.

00:20:00.000 --> 00:20:18.000
Давайте на нее перейдем и мы увидим, что здесь мы можем выбрать продукцию, указать количество, давайте выберем три круассана, внизу отображается общая сумма и есть кнопка submit order.

00:20:18.000 --> 00:20:31.000
Как только мы на нее нажмем, мы перейдем на страницу с подтверждением нашего заказа, давайте теперь для разнообразия сделаем второй заказ и закажем горячий шоколад в одном количестве.

00:20:31.000 --> 00:20:36.000
Order total отображается корректно, также нажмем на кнопку submit order.

00:20:36.000 --> 00:20:44.000
Как только мы это сделаем, мы получаем подтверждение, теперь давайте посмотрим на вкладку order history.

00:20:44.000 --> 00:21:02.000
Отлично, мы видим, что оба наших заказа корректно отображаются, все детали верны и я вас поздравляю с этим, мы успешно настроили приложение и все корректно работает.

00:21:02.000 --> 00:21:14.000
Теперь мы переходим к следующему заданию, мы будем создавать второй environment в другом AWS регионе.

00:21:14.000 --> 00:21:25.000
Первым шагом для этого является создание AMI, а перед созданием AMI нам необходимо создать SSH ключи, чтобы они остались в этом AMI

00:21:25.000 --> 00:21:39.000
и можно было с копированным на локальный компьютер приватным ключом подключаться к любому инстанцию в любом AWS регионе, который использует созданный нами AMI.

00:21:39.000 --> 00:21:53.000
Но подключаться по SSH нет необходимости, это лишь сейчас сообщается и показывается как это можно настроить в будущей вашей работе.

00:21:53.000 --> 00:22:10.000
С точки зрения безопасности хранение этих ключей в AMI может быть не самым лучшим решением, это лишь один из вариантов.

00:22:10.000 --> 00:22:22.000
Самым лучшим с точки зрения безопасности и использования готового функционала является использование соответствующей настройки при создании сетей инстанции,

00:22:22.000 --> 00:22:36.000
где вы можете указать нужный вам публичный ключ. Если у вас есть приватный ключ пара от этого публичного ключа, то вы успешно сможете подключиться к этому инстанцию.

00:22:36.000 --> 00:22:43.000
Отлично, нам необходимо запустить серию команд, которые создаст SSH ключ и перенесет ее в нужное место.

00:22:43.000 --> 00:22:53.000
После того как мы это проделаем, мы можем начать создание AMI. Для этого необходимо в списке инстанций выбрать наш EC2 Instance,

00:22:53.000 --> 00:23:02.000
нажать на кнопку Actions, в выпадающем меню выбрать опцию Image and Templates и нажать на кнопку Create Image.

00:23:02.000 --> 00:23:15.000
Нас направят на страницу создания имидж, но перед тем как мы начнем ее заполнять, нам необходимо ответить на несколько вопросов.

00:23:15.000 --> 00:23:22.000
Сейчас нам необходимо ответить на три вопроса, это пятый, шестой и седьмой.

00:23:22.000 --> 00:23:31.000
Пятый вопрос звучит следующим образом. Когда мы создаем AMI от существующего инстанца, будет ли этот инстанц перезагружен?

00:23:31.000 --> 00:23:42.000
Давайте вернемся на страницу создания AMI и обратим внимание на параметр NoReboot. По умолчанию он не включен.

00:23:42.000 --> 00:23:50.000
Это говорит о том, что по умолчанию инстанц при создании от него AMI будет перезагружен.

00:23:50.000 --> 00:23:58.000
Если мы не хотим, чтобы инстанц перезагружался, то здесь необходимо поставить галочку.

00:23:58.000 --> 00:24:04.000
Таким образом для пятого вопроса третий вариант ответа является верным.

00:24:04.000 --> 00:24:08.000
Переходим к следующему вопросу. Звучит он следующим образом.

00:24:08.000 --> 00:24:17.000
Какие свойства root volume мы можем изменять при создании AMI от существующего инстанца?

00:24:17.000 --> 00:24:23.000
Давайте вернемся обратно на страницу создания AMI и посмотрим, что мы можем сделать.

00:24:23.000 --> 00:24:32.000
Вы видите, что мы можем изменить размер. Также мы видим, что мы можем менять параметр delete on termination.

00:24:32.000 --> 00:24:37.000
Но тип volume и другие параметры мы менять не можем.

00:24:37.000 --> 00:24:49.000
Поэтому возвращаемся обратно к вопросу и выбираем третий вариант ответа, который является верным.

00:24:49.000 --> 00:24:54.000
Переходим к следующему вопросу. Седьмой. Звучит он следующим образом.

00:24:54.000 --> 00:25:03.000
Можем ли мы добавить больше volume при создании AMI от инстанца, у которого есть один root volume?

00:25:03.000 --> 00:25:15.000
Если вы обратили внимание, у нас активная кнопка add volume, что означает, что мы можем добавлять любое количество data volume при необходимости.

00:25:15.000 --> 00:25:20.000
Поэтому на седьмой вопрос мы отвечаем yes.

00:25:20.000 --> 00:25:23.000
На этом мы ответили на все вопросы.

00:25:23.000 --> 00:25:28.000
Возвращаемся к AWS Management консоли.

00:25:28.000 --> 00:25:35.000
Необходимо как иммажняем ввести кафе сервер и внизу страницы нажать на кнопку Create Image.

00:25:35.000 --> 00:25:39.000
Image будет создаваться порядка двух минут.

00:25:39.000 --> 00:25:48.000
Для того, чтобы отобразить список AMI, нам необходимо в левом навигационном меню выбрать пункт AMI.

00:25:48.000 --> 00:25:57.000
Мы увидим, что у нас есть один единственный AMI, который сейчас создается, так как статус pending.

00:25:57.000 --> 00:26:10.000
Убирая страницу, нам необходимо дождаться, что статус поменяется на available и мы можем переходить к следующему заданию.

00:26:10.000 --> 00:26:22.000
Следующее задание необходимо нам поднять instance в другом регионе, используя этот AMI.

00:26:22.000 --> 00:26:27.000
В рамках лабораторной работы предлагается самостоятельно попробовать это сделать.

00:26:27.000 --> 00:26:36.000
И первым делом нам нужно скопировать AMI и сменить регион в AWS Management консоли.

00:26:36.000 --> 00:26:40.000
Мы меняем ее на регион US West Oregon.

00:26:40.000 --> 00:26:43.000
Как только мы это сделаем, мы видим, что список AMI пуст.

00:26:43.000 --> 00:26:51.000
Даже если мы начнем искать по скопированному AMI ID, то поиск тоже ничего не выдает.

00:26:51.000 --> 00:27:04.000
Как решение предлагается скопировать AMI, так как AMI доступен только в рамках одного региона.

00:27:04.000 --> 00:27:11.000
Если вам нужно этот AMI использовать в другом регионе, то необходимо его туда скопировать.

00:27:11.000 --> 00:27:13.000
Что мы сейчас и сделаем?

00:27:13.000 --> 00:27:16.000
Нам необходимо выбрать AMI из списка.

00:27:16.000 --> 00:27:22.000
Далее нажать на кнопку actions и выбрать опцию копии AMI.

00:27:22.000 --> 00:27:25.000
Вы перейдете на соответствующую страницу.

00:27:25.000 --> 00:27:32.000
Здесь оставляем все поля с значениями по умолчанию.

00:27:32.000 --> 00:27:34.000
Единственно необходимо выбрать регион.

00:27:34.000 --> 00:27:36.000
В нашем случае US West Oregon.

00:27:36.000 --> 00:27:41.000
После чего мы можем нажимать на кнопку копия AMI в нижней части страницы.

00:27:41.000 --> 00:27:47.000
Отлично, процесс создания копии AMI в другом регионе был запущен.

00:27:47.000 --> 00:27:50.000
Занимает это порядка пяти минут.

00:27:50.000 --> 00:27:59.000
Вы можете наблюдать за статусом создания AMI уже в target регионе.

00:27:59.000 --> 00:28:06.000
Поэтому мы переходим в AWS Management Console на регион US West Oregon.

00:28:06.000 --> 00:28:16.000
Обновляя страницу, нам необходимо дождаться, что статус из состояния pending поменяет состояние на available.

00:28:16.000 --> 00:28:21.000
Как только это произойдет, мы можем двигаться к следующему заданию.

00:28:21.000 --> 00:28:29.000
Теперь от созданного AMI мы можем создать EC2 instance.

00:28:29.000 --> 00:28:35.000
Для этого необходимо выделить AMI и в верхней правой части нажать на кнопку launch instance from AMI.

00:28:35.000 --> 00:28:41.000
Здесь нам необходимо как name ввести prot cafe server.

00:28:41.000 --> 00:28:45.000
Далее выбрать тип instance t2 small.

00:28:45.000 --> 00:28:54.000
Как Network Settings необходимо будет ввести некоторые вправки, поэтому необходимо нажать на кнопку edit.

00:28:54.000 --> 00:28:58.000
Здесь нужно будет выбрать VPC, Lab VPC, Region 2.

00:28:58.000 --> 00:29:02.000
Далее как Subnet выбираем Public Subnet из предложенного списка.

00:29:02.000 --> 00:29:07.000
И далее необходимо будет создать новую Security группу.

00:29:07.000 --> 00:29:10.000
Ее мы назовем cafe SG.

00:29:10.000 --> 00:29:13.000
Для него необходимо будет создать два inbound рула.

00:29:13.000 --> 00:29:17.000
Первый будет разрешать доступ из интернета на 22 порт.

00:29:17.000 --> 00:29:21.000
Это на тот случай, если нам нужно будет подключаться по SSH.

00:29:21.000 --> 00:29:29.000
Если все будет корректно выполнено, то в рамках лабораторной работы мы по SSH подключаться не будем.

00:29:29.000 --> 00:29:41.000
Второй рул это на 80 порт доступ со всего интернета, чтобы любой из интернета мог открыть наш веб-сайт.

00:29:41.000 --> 00:29:54.000
Как только мы введем эти настройки, нам необходимо прокрутить самые низ страницы и в Advanced Details выбрать роль cafe role, который мы выбирали ранее.

00:29:54.000 --> 00:30:07.000
И нажать на кнопку Launch Instance, чтобы запустить процесс создания этого инстанса.

00:30:07.000 --> 00:30:22.000
Как только вы ее нажмете, выйдет всплывающее окно о том, что мы создаем инстанс, где не будет SSH ключей и мы не сможем подключиться под 22 порту.

00:30:22.000 --> 00:30:31.000
В нашем случае нужные SSH ключи находятся внутри AMA, поэтому мы можем выбрать опцию Proceed without Key Pair.

00:30:31.000 --> 00:30:36.000
После этого нажимаем на кнопку Proceed without Key Pair.

00:30:36.000 --> 00:30:47.000
Отлично, мы увидим сообщение о том, что процесс создания инстанса успешно запущен и есть кнопка для перехода к списку всех инстанцев.

00:30:47.000 --> 00:30:49.000
Давайте на нее нажмем.

00:30:49.000 --> 00:30:54.000
Как только мы на нее нажмем, мы увидим, что инстанс создается.

00:30:54.000 --> 00:30:59.000
Необходимо дождаться, чтобы он прошел все системные проверки.

00:30:59.000 --> 00:31:12.000
Как только все будет готово, нам необходимо будет выбрать наш инстанс, отобразиться список метаданных этого инстанса и во вкладке Details необходимо скопировать публичный IP адрес.

00:31:12.000 --> 00:31:15.000
Давайте попробуем по нему перейти.

00:31:15.000 --> 00:31:29.000
Как только мы по нему перейдем и перейдем именно на наше веб-приложение, это IP-адрес слеш кафе, мы увидим, что главная страница успешно отображается.

00:31:29.000 --> 00:31:34.000
Давайте теперь попробуем перейти на вкладку меню, чтобы сделать заказ.

00:31:34.000 --> 00:31:41.000
Как только мы нажимаем на вкладку меню, мы видим, что никакие айтемы не существуют.

00:31:41.000 --> 00:31:50.000
Здесь в рамках лабораторной работы необходимо было по-трабблшутить, в чем же является проблема и попробовать самостоятельно ее решить.

00:31:50.000 --> 00:31:53.000
Я сразу дам ответ.

00:31:53.000 --> 00:32:00.000
Проблема в том, что в этом регионе не созданы нужные нам параметры.

00:32:00.000 --> 00:32:02.000
Необходимо их создать.

00:32:02.000 --> 00:32:14.000
Давайте проверим, действительно ли это является причиной отсутствия продуктов на нашем веб-сайте.

00:32:14.000 --> 00:32:23.000
Для этого переходим к AWS Management консоли и здесь необходимо перейти в сервис Parameter Store.

00:32:23.000 --> 00:32:32.000
Вы можете переходить напрямую на нужную вам ссылку, если начнете вводить Parameter Store.

00:32:32.000 --> 00:32:36.000
В выдаче в секции Features вы увидите ссылку на Parameter Store.

00:32:36.000 --> 00:32:47.000
Как только вы на нее нажмете, вы также перейдете на Systems Manager, это группа сервисов, но уже окажетесь на нужные вам вкладки в левом навигационном меню.

00:32:47.000 --> 00:32:59.000
Обратите внимание, что вы должны находиться в регионе Oregon и если все верно, вы увидите страницу с предложением создать новый параметр.

00:32:59.000 --> 00:33:05.000
Это говорит о том, что параметры еще не создавались.

00:33:05.000 --> 00:33:16.000
Отлично, теперь нам необходимо перейти на основной регион, нож свержения и открыть наш ID.

00:33:16.000 --> 00:33:40.000
Как только мы ее откроем, необходимо также открыть скрипт Setup Parameters и внести некоторые изменения, а именно на строке 12 для переменной регион и на строке 18 для переменной Public DNS.

00:33:40.000 --> 00:33:49.000
Как регион нам необходимо ввести US West 2, а как Public DNS необходимо скопировать значения у нового созданного из situ инстанса.

00:33:49.000 --> 00:33:58.000
Как только мы это сделаем, мы можем нажать правой кнопкой мыши на название нашего скрипта и выбрать опцию Run this file.

00:33:58.000 --> 00:34:05.000
Автоматически откроется новая вкладка Bash терминала и запустит этот скрипт.

00:34:05.000 --> 00:34:15.000
Мы увидим, что параметры были успешно созданы. Давайте теперь вернемся к AWS Management консоли и обновим страницу с параметр Store.

00:34:15.000 --> 00:34:28.000
Мы увидим, что 7 параметров были успешно созданы и также обратите внимание, что вы находитесь в нужном регионе, то есть регион Oregon.

00:34:28.000 --> 00:34:40.000
Отлично, давайте теперь вернемся на сайт и обновим страницу и в вкладке меню мы видим, что появились все наши продукты с тем же составом.

00:34:40.000 --> 00:34:52.000
Давайте теперь попробуем что-нибудь заказать. В этот раз закажем донат в одном количестве и попробуем создать заказ.

00:34:52.000 --> 00:35:04.000
Мы увидим подтверждение, что заказ успешно создан и если перейдем на страницу с историей заказов, также видим, что оно пополнилось одним нашим заказом.

00:35:04.000 --> 00:35:13.000
Все верно. Отлично, я вас поздравляю, на этом мы успешно завершили эту лабортуру на работу.

00:35:13.000 --> 00:35:20.000
Теперь нам необходимо запустить систему оценивания, чтобы убедиться, что мы действительно все правильно сделали.

00:35:20.000 --> 00:35:25.000
Для этого необходимо перейти на страницу с лаборатурной работой и нажать на кнопку submit.

00:35:25.000 --> 00:35:31.000
Выйдет всплывающее окно, необходимо нажать на кнопку yes и подождать некоторое время.

00:35:31.000 --> 00:35:38.000
Вы увидите сообщение о том, что вы набрали столько-то баллов из 30 возможных.

00:35:38.000 --> 00:35:43.000
В моем случае 30 из 30 это максимальный балл. Надеюсь, что у вас так же.

00:35:43.000 --> 00:35:56.000
Если не так, то вы видите, что есть расшифровка баллов и сможете определить, на каком этапе, в какой задачи была ошибка и попробовать ее исправить.

00:35:56.000 --> 00:36:01.000
Сейчас нам необходимо правильно выйти со всех систем.

00:36:01.000 --> 00:36:11.000
Для AWS Management Console необходимо в верхней правой части нажать на название пользователя и выбрать опцию sign out.

00:36:11.000 --> 00:36:18.000
На странице с лаборатурной работой необходимо нажать на кнопку end lab и подтвердить.

00:36:18.000 --> 00:36:23.000
Во всплывающем окне мы должны увидеть сообщение you may close this message box now.

00:36:23.000 --> 00:36:26.000
Lab resources are terminating.

00:36:26.000 --> 00:36:32.000
После этого мы закрываем всплывающее окно и можем закрывать окно с лаборатурной работой.

00:36:32.000 --> 00:36:38.000
На этом мы завершили лаборатурную работу, полностью ее разобрали.

00:36:38.000 --> 00:36:43.000
Я очень надеюсь, что вы получили более полное представление.

00:36:43.000 --> 00:37:09.000
Спасибо за внимание, увидимся с вами на следующих наших активностях.
WEBVTT

00:00:00.000 --> 00:00:08.000
Добрый день, уважаемые студенты! Я рад вас всех видеть на очередной сессии разбора лабораторной работы.

00:00:08.000 --> 00:00:16.000
Тема лабораторной работы это создание статик-вебсайта для нашего бизнес-кейса, а именно кафе.

00:00:16.000 --> 00:00:26.000
Эта лабораторная работа является Challenge Lab, поэтому меньше деталей было указано в задании.

00:00:26.000 --> 00:00:32.000
И теперь мы сейчас попробуем вместе это все проделать со всеми необходимыми деталями.

00:00:32.000 --> 00:00:34.000
Итак, давайте начнем!

00:00:34.000 --> 00:00:38.000
Мы начинаем разбор лабораторной работы.

00:00:38.000 --> 00:00:42.000
Необходимо нам открыть главную страницу лабораторной работы.

00:00:42.000 --> 00:00:49.000
Здесь необходимо нажать на кнопку Start Lab, после чего откроется всплывающее окно.

00:00:49.000 --> 00:00:55.000
Необходимо дождаться, что Lab Status из состояния In Creation перейдет в состояние Ready.

00:00:55.000 --> 00:01:01.000
После чего можно закрывать эту страницу и нажимать на кнопку AWS.

00:01:01.000 --> 00:01:07.000
После нажатия этой кнопки нас перекинет на главную страницу AWS Management Console.

00:01:07.000 --> 00:01:16.000
Здесь нам первым делом необходимо скачать zip-архив, в котором содержание нашего веб-сайта,

00:01:16.000 --> 00:01:23.000
разархивировать его локально на нашем компьютере и подготовить для загрузки на S3 Bucket.

00:01:23.000 --> 00:01:31.000
Переходим обратно на AWS Management Console и здесь необходимо открыть сервис Amazon S3.

00:01:31.000 --> 00:01:36.000
Для этого в строке поиска сервисов начнем вводить S3.

00:01:36.000 --> 00:01:40.000
В выдаче увидим нужную нам ссылку и нажмем на нее.

00:01:40.000 --> 00:01:47.000
После того, как мы перейдем на главную страницу сервиса Amazon S3, мы увидим, что у нас есть системный бакет.

00:01:47.000 --> 00:01:51.000
На нее мы не обращаем внимания, нам необходимо создать новый.

00:01:51.000 --> 00:01:56.000
Поэтому к правой части экрана необходимо нажать на кнопку Create Bucket.

00:01:56.000 --> 00:02:03.000
Давайте назовем его следующим образом, пусть будет Yeljan Dash Lab Dash Review Dash 50.

00:02:03.000 --> 00:02:13.000
Вы можете назвать любое другое название, самое главное помните, что это название S3 Bucket должно быть глобально уникальным.

00:02:13.000 --> 00:02:18.000
Как регион необходимо выбрать Норс-Вирджиния.

00:02:18.000 --> 00:02:25.000
Мы с вами помним, что этот S3 Bucket будет использоваться для публичного доступа, а именно для хостинга веб-сайта.

00:02:25.000 --> 00:02:42.000
Поэтому в секции Object Ownership выберем ACLS Enabled и удостоверимся, что Object Ownership отмечен как Bucket Owner Preferred.

00:02:42.000 --> 00:02:51.000
Далее необходимо прокрутить чуть ниже и убрать галочку с опции Block All Public Access.

00:02:51.000 --> 00:02:58.000
Чуть ниже нам необходимо подтвердить, что мы будем открывать публичный доступ и поставить галочку.

00:02:58.000 --> 00:03:08.000
Прокручиваем в самый низ экрана и страницы и нажимаем на кнопку Create Bucket.

00:03:08.000 --> 00:03:18.000
Нас направят на страницу со списком Bucket. Вы увидите соответствующее сообщение с зеленым фоном о том, что Bucket был успешно создан.

00:03:18.000 --> 00:03:32.000
Теперь давайте нажмем на название Bucket, чтобы перейти на основную страницу этого S3 Bucket.

00:03:32.000 --> 00:03:46.000
Далее нам необходимо нажать на вкладку Properties. Здесь необходимо прокрутить самый низ и активировать Static Website Hosting опцию.

00:03:46.000 --> 00:03:55.000
На текущий момент мы видим, что она отключена, поэтому необходимо нажать кнопку Edit. Откроется соответствующая страница.

00:03:55.000 --> 00:04:03.000
Необходимо выбрать опцию Enable. Далее как Hosting Type мы выбираем Hosting Static Website.

00:04:03.000 --> 00:04:16.000
Как Index Document указываем наш Index.html. Как Error Document указываем Error.html и нажимаем на кнопку Save Changes.

00:04:16.000 --> 00:04:27.000
Как только мы это сделали, мы активировали Static Website Hosting опцию, теперь нам необходимо загрузить контент нашего веб-сайта.

00:04:27.000 --> 00:04:33.000
Для этого переходим на вкладку Objects и нажимаем на кнопку Upload.

00:04:33.000 --> 00:04:48.000
Так как у нас есть еще и папки помимо отдельных файлов, мы можем воспользоваться кнопкой Add Files и Add Folder и добавить все необходимые файлы.

00:04:48.000 --> 00:04:56.000
Вы видите список этих файлов, всего у нас 10 объектов, весит порядка 22 мегабайтов.

00:04:56.000 --> 00:05:04.000
Если все совпадает, в нижней части страницы необходимо нажать на кнопку Upload.

00:05:04.000 --> 00:05:12.000
Как только мы ее нажмем, нам необходимо проверить, как отображается наша веб-страница.

00:05:12.000 --> 00:05:22.000
Нам необходимо открыть вкладку Properties, прокрутить чуть ниже и опуститься до секции Static Website Hosting.

00:05:22.000 --> 00:05:30.000
Там как раз таки находится bucket website endpoint, необходимо ее скопировать и открыть в новой вкладке браузера.

00:05:30.000 --> 00:05:35.000
Как только мы ее откроем, мы увидим, что выходит ошибка 403.

00:05:35.000 --> 00:05:41.000
Это связано с тем, что мы еще не выдавали для наших объектов публичный доступ.

00:05:41.000 --> 00:05:52.000
Перед тем, как мы перейдем к следующему заданию, нам сейчас необходимо ответить на вопрос теста.

00:05:52.000 --> 00:05:59.000
Для этого на странице лабораторной работы необходимо нажать на кнопку Details.

00:05:59.000 --> 00:06:04.000
Будет выпадающий список, необходимо нажать на кнопку Show.

00:06:04.000 --> 00:06:14.000
И в всплывающем окне нажать на текст, это ссылка Access the multiple choice questions.

00:06:14.000 --> 00:06:21.000
Откроется отдельная вкладка, ее нам закрывать не нужно, мы ее сохраняем до конца лабораторной работы.

00:06:21.000 --> 00:06:24.000
И сейчас нам необходимо ответить на первый вопрос.

00:06:24.000 --> 00:06:27.000
Первый вопрос звучит следующим образом.

00:06:27.000 --> 00:06:34.000
Если выполнение третьего задания, смогли ли вы увидеть ваш веб-сайт в отдельной вкладке браузера?

00:06:34.000 --> 00:06:41.000
Мы увидеть его не смогли, поэтому мы отмечаем опцию No, the files are not publicly accessible.

00:06:41.000 --> 00:06:49.000
Нажимаем на кнопку Submit и двигаемся дальше.

00:06:49.000 --> 00:06:56.000
Для того, чтобы веб-сайт отобразился, нам необходимо предоставить публичный доступ.

00:06:56.000 --> 00:07:04.000
После этого, на вкладке Objects нашего стрибакета выделяем все объекты, нажимаем на кнопку Actions.

00:07:04.000 --> 00:07:12.000
И самым последним пунктом находим опцию Make public using ACL.

00:07:12.000 --> 00:07:21.000
Необходимо ее нажать, после чего подтвердить, что мы хотим сделать наши объекты доступными публично.

00:07:21.000 --> 00:07:29.000
Как только мы это сделаем, вернемся на страницу нашего веб-сайта и обновим страницу, мы увидим наш веб-сайт.

00:07:29.000 --> 00:07:31.000
Отлично.

00:07:31.000 --> 00:07:37.000
Теперь давайте проведем эксперимент и загрузим папку с картинками еще раз.

00:07:37.000 --> 00:07:42.000
Как только мы ее загрузили, попробуем открыть наш веб-сайт.

00:07:42.000 --> 00:07:59.000
Вы видите, что картинки поломались, так как повторная загрузка перевела публичный доступ к папке и файлам в значение по умолчанию, то есть они защищены и приватные.

00:07:59.000 --> 00:08:07.000
Для того, чтобы они снова отобразились, необходимо проделать предыдущее действие еще раз.

00:08:07.000 --> 00:08:17.000
Но это достаточно неудобно, поэтому согласно нашему бизнес-кейсу, София решила написать Bucket Policy.

00:08:17.000 --> 00:08:30.000
Для того, чтобы его написать, нам необходимо открыть вкладку Permissions для нашего S3 Bucket и опуститься до секции Bucket Policy.

00:08:30.000 --> 00:08:36.000
Мы сейчас его будем изменять. Для этого необходимо нажать на кнопку Edit, откроется соответствующее окно.

00:08:36.000 --> 00:08:43.000
Здесь необходимо было вам ознакомиться с AWS-документацией и найти подходящие policy.

00:08:43.000 --> 00:08:46.000
Правильным ответом является следующий документ.

00:08:46.000 --> 00:08:54.000
Мы здесь прописываем, что принципом является звездочка, то есть это любой анонимный пользователь интернета.

00:08:54.000 --> 00:09:03.000
Далее Effect Allow, то есть мы разрешаем доступ на единственное действие Get Object, то есть это режим чтения.

00:09:03.000 --> 00:09:15.000
И как ресурс указываем конкретно наш Bucket слэш звездочка для того, чтобы изменения затронули только объекты внутри нашего Bucket.

00:09:15.000 --> 00:09:21.000
Отлично. Прокручиваем вниз страницы и нажимаем на кнопку Save Changes.

00:09:21.000 --> 00:09:30.000
Мы увидим на следующей странице сообщение о том, что Bucket Policy был успешно изменен. Это сообщение зеленым фоном.

00:09:30.000 --> 00:09:38.000
Также мы увидим возле названия Bucket флажок красным цветом Publicly Accessible.

00:09:38.000 --> 00:09:43.000
Отлично. Давайте теперь попробуем обновить страницу с нашим веб-сайтом.

00:09:43.000 --> 00:09:50.000
И здесь мы увидим, что наши картинки вновь вернулись и все корректно отображается.

00:09:50.000 --> 00:09:54.000
Теперь мы переходим к следующему заданию.

00:09:54.000 --> 00:10:04.000
Нам необходимо предоставить дополнительную безопасность от случайных удалений и случайного переписывания объектов внутри S3 Bucket.

00:10:04.000 --> 00:10:08.000
Для этого нам необходимо активировать Bucket versioning.

00:10:08.000 --> 00:10:17.000
Чтобы это сделать, нам необходимо перейти на вкладку Properties и прокрутить до секции Bucket versioning.

00:10:17.000 --> 00:10:24.000
Мы видим, что она сейчас у нас деактивирована. Нам необходимо нажать на кнопку Edit, чтобы это изменить.

00:10:24.000 --> 00:10:36.000
Мы видим, что у нас есть две опции. Это Suspend или Enable. Так как он у нас сейчас все еще не включен, Suspend логически не подходит.

00:10:36.000 --> 00:10:40.000
Нам необходимо сейчас включить versioning.

00:10:40.000 --> 00:10:45.000
Я напоминаю, что после того, как вы включаете versioning, его отключить не получится.

00:10:45.000 --> 00:10:53.000
Единственный вариант – приостановить versioning. В этом случае новые версии не создаются.

00:10:53.000 --> 00:10:58.000
При необходимости вы можете versioning включить обратно.

00:10:58.000 --> 00:11:05.000
Отлично! Выбираем опцию Enable и нажимаем на кнопку Save changes внизу страницы.

00:11:05.000 --> 00:11:17.000
Теперь нам необходимо протестировать, как работает versioning. На локальном компьютере откроем в любом текстовом редакторе наш индекс HTML-файл.

00:11:17.000 --> 00:11:25.000
Нам необходимо было найти вхождение bagcolor aquamarine, два вхождения, и одно вхождение bagcolor orange.

00:11:25.000 --> 00:11:34.000
Эти значения заменить на, соответственно, bagcolor равно Gain сбору и orange заменить на corn silk.

00:11:34.000 --> 00:11:46.000
Как только мы это сделали, давайте перейдем на список объектов в нашем Stribucket, нажмем на кнопку Upload для того, чтобы загрузить обновленный индекс HTML.

00:11:46.000 --> 00:12:02.000
Как только мы ее загрузим, мы увидим уже после обновления страницы веб-сайта, что фон блоков в нижней части страницы обновились.

00:12:02.000 --> 00:12:15.000
Отлично. Теперь нам необходимо открыть главную страницу объекта индекса HTML, далее открыть вкладку versions и убедиться в том, что действительно versioning включен.

00:12:15.000 --> 00:12:26.000
На текущий момент у нас имеется две версии и текущим является последняя версия, которую мы загрузили.

00:12:26.000 --> 00:12:32.000
Теперь мы переходим обратно к нашим тестовым вопросам и нам необходимо ответить на второй вопрос.

00:12:32.000 --> 00:12:48.000
Вопрос звучал следующим образом. Выберите опцию, которая помогает нам максимально защитить и избежать от случайного удаления объектов в нашем Stribucket.

00:12:48.000 --> 00:13:08.000
Давайте посмотрим какие варианты есть. Первый вариант Cross Region Replication. Это немного не подходящий вариант, так как оно лишь реплицирует наши данные на другой бакет, при этом на текущем бакете удалить эти файлы возможно.

00:13:08.000 --> 00:13:19.000
Другой вариант это Multi-Factor Authentication, так называемый MFA. Это является правильным ответом, но необходимо его отметить. Почему оно является правильным?

00:13:19.000 --> 00:13:30.000
Так потому что мы можем привязать MFA верификацию при удалении объектов в Stribucket. Как это происходит?

00:13:30.000 --> 00:13:45.000
Ваш IAM-юзер подключается к AWS Management Console, будь то CLI, неважно. Далее вводит ключ временно генерируемый для того, чтобы подтвердить MFA устройство.

00:13:45.000 --> 00:13:57.000
Обычно это виртуальное MFA устройство, и после чего у него стоит пометка на некоторое время под пользователем, что он может производить действия, где требуется MFA.

00:13:57.000 --> 00:14:06.000
В момент удаления происходит эта проверка. Если MFA не пройдено, то он не сможет удалить эти объекты.

00:14:06.000 --> 00:14:15.000
Пользователи, у которых MFA даже не включен, не смогут удалять объекты, защищённые MFA.

00:14:15.000 --> 00:14:28.000
Третья опция это Cross-Origin Resource Sharing course. Он относится больше к взаимодействию двух веб-сайтов между собой, поэтому не относится к безопасности.

00:14:28.000 --> 00:14:40.000
А именно к безопасности касательно удаления объектов в Stribucket. И четвертая это Bucket Policy. Тоже не совсем подходящий вариант в нашем случае.

00:14:40.000 --> 00:14:49.000
Отлично. Мы отметили второй вариант как верный, субмитнули ее и двигаемся дальше.

00:14:49.000 --> 00:14:58.000
Мы с вами переходим к следующему заданию. Здесь нам необходимо оптимизировать затраты на хранение в Stribucket.

00:14:58.000 --> 00:15:05.000
Для этого мы настроим Lifecycle Rules. Чтобы это сделать, необходимо перейти на вкладку Management.

00:15:05.000 --> 00:15:17.000
Первая секция это та секция, которая нам нужна. Она называется Lifecycle Rules. Мы видим, что у нас нет созданных рулов, поэтому нажмем на кнопку Create Lifecycle Rule.

00:15:17.000 --> 00:15:23.000
Нас перенаправят на соответствующую страницу, где необходимо ввести входные данные.

00:15:23.000 --> 00:15:28.000
Как Rule Name можем указать Move to IA, то есть Infrequent Access.

00:15:28.000 --> 00:15:38.000
Как Choose a Rule Scope выберем опцию Apply to all objects in the Bucket, то есть оно будет относиться ко всем объектам в Bucket.

00:15:38.000 --> 00:15:46.000
И необходимо в поле с подтверждением поставить галочку.

00:15:46.000 --> 00:16:03.000
Как Lifecycle Rule Actions нам необходимо выбрать вторую опцию. Она означает то, что мы будем не текущей версии объектов перемещать на другой Storage Class.

00:16:03.000 --> 00:16:14.000
Чуть ниже в следующей секции нам необходимо дать детали этого Storage Class. В нашем случае это стандарт IA, на который он переходит через 30 дней.

00:16:14.000 --> 00:16:25.000
На этом мы ввели все необходимые данные. Необходимо прокрутить до конца страницы и нажать на кнопку Create Rule.

00:16:25.000 --> 00:16:34.000
Нас направят на страницу со списком Lifecycle Rules. Мы видим, что созданный номер Rule уже отображается. Он активен.

00:16:34.000 --> 00:16:42.000
Теперь необходимо создать второй. Также нажмем на кнопку Create Lifecycle Rule. Откроется аналогичная страница.

00:16:42.000 --> 00:16:53.000
В этом случае ведем как Rule Name Delete Rule. Также отметим, что оно относится ко всем объектам в Bucket и подтвердим этот выбор.

00:16:53.000 --> 00:17:07.000
Для Lifecycle Rule Actions выберем предпоследний вариант, который говорит нам, что необходимо удалить все не текущие версии объектов.

00:17:07.000 --> 00:17:15.000
Чуть ниже необходимо указать количество дней, после которого вступает силу этот Rule. Это 365 дней.

00:17:15.000 --> 00:17:22.000
На этом ввели все необходимые данные. Прокручиваем до конца страницы и нажимаем на кнопку Create Rule.

00:17:22.000 --> 00:17:29.000
Отлично! Вы видите в списке 2 рула, созданных нами. Они обе активированы.

00:17:29.000 --> 00:17:43.000
Мы двигаемся дальше. Переходим к следующему заданию. Здесь нам необходимо создать другой Bucket в другом регионе для того, чтобы настроить Cross-Region репликацию.

00:17:43.000 --> 00:17:53.000
Открываем основную страницу сервиса Amazon S3. Нажимаем на кнопку Create Bucket и вводим необходимые входные данные.

00:17:53.000 --> 00:18:01.000
Здесь нам необходимо указать Bucket Name. В моем случае я указал Yeljan Replication Destination Bucket. Он уникальный.

00:18:01.000 --> 00:18:11.000
Далее как регион указываем Oregon. Это US West 2. Чуть ниже мы включаем вершиник.

00:18:11.000 --> 00:18:16.000
И в самом низу страницы нажимаем на кнопку Create Bucket, чтобы его создать.

00:18:16.000 --> 00:18:30.000
Как только мы на нее нажимаем, мы увидим зеленое сообщение о том, что Bucket был успешно создан. Также в списке Bucket мы видим, что у нас есть основной Bucket, созданный ранее. Он находится в регионе North Virginia.

00:18:30.000 --> 00:18:37.000
Мы видим второй созданный Bucket. Он находится в регионе Oregon. Все отлично! Двигаемся дальше.

00:18:37.000 --> 00:18:54.000
Теперь нам необходимо на основном S3 Bucket настроить Replication Rules. Для этого открываем основную страницу S3 Bucket, переходим на вкладку Management и опускаемся до секции Replication Rules.

00:18:54.000 --> 00:19:02.000
На текущий момент у нас рулов нет, поэтому нажимаем на кнопку Create Replication Rule. Откроется отдельная страница.

00:19:02.000 --> 00:19:12.000
В этой странице необходимо ввести входные данные. Как Replication Rule Name укажем Replication Rule 1. Вы можете указать любое другое название по желанию.

00:19:12.000 --> 00:19:16.000
Status будет у нас Enabled. Здесь ничего не меняется.

00:19:16.000 --> 00:19:25.000
Как Source Bucket нам необходимо в подсекции Choose a Rule Scope выбрать опцию Apply to all objects in the Bucket.

00:19:25.000 --> 00:19:34.000
Таким образом все объекты, которые находятся в основном S3 Bucket будут реплицироваться на второй S3 Bucket.

00:19:34.000 --> 00:19:44.000
Далее как в Destination необходимо выбрать опцию Choose a Bucket in this Account и выбрать наш второй созданный S3 Bucket.

00:19:44.000 --> 00:19:48.000
В моем случае это Yelzhan Replication Destination Bucket.

00:19:48.000 --> 00:19:59.000
После того как мы ее выбрали в подсекции Destination Region укажется регион этого Bucket. В нашем случае это Oregon.

00:19:59.000 --> 00:20:01.000
Все верно. Двигаемся дальше.

00:20:01.000 --> 00:20:06.000
Секция IAMROL это та роль, которая будет производить действия по репликации.

00:20:06.000 --> 00:20:12.000
Для нас уже в рамках лабораторной работы уже была создана роль.

00:20:12.000 --> 00:20:17.000
Поэтому выбираем Choose from existing IAMROL и из списка выбираем роль CafeROL.

00:20:17.000 --> 00:20:22.000
На этом мы ввели все необходимые данные.

00:20:22.000 --> 00:20:27.000
Давайте прокрутим до конца страницы и нажмем на кнопку Save.

00:20:27.000 --> 00:20:35.000
Отлично. Теперь нас направят на страницу с S3 Bucket в соответствующую вкладку.

00:20:35.000 --> 00:20:44.000
И мы видим, что в списке Replication Rules у нас созданы � улы, которые в состоянии Enabled.

00:20:44.000 --> 00:20:54.000
Отлично. Давайте теперь перейдем на Replication Bucket и проверим какое количество объектов сейчас там есть.

00:20:54.000 --> 00:20:58.000
Мы видим, что там сейчас объектов нет.

00:20:58.000 --> 00:21:07.000
И теперь нам необходимо перейти на страницу с тестовыми вопросами и ответить на третий вопрос.

00:21:07.000 --> 00:21:09.000
Третий вопрос звучит следующим образом.

00:21:09.000 --> 00:21:18.000
Увидели ли вы объекты из основного бакета в бакете, на который это все реплицируется?

00:21:18.000 --> 00:21:23.000
Мы отвечаем нет, так как файлы не появились и отправляем наш ответ.

00:21:23.000 --> 00:21:28.000
Теперь дам некоторые комментарии касательно того, почему же эти файлы там не появились.

00:21:28.000 --> 00:21:34.000
Все просто. На самом деле, когда мы загружали наши файлы, Replication еще не работал.

00:21:34.000 --> 00:21:48.000
С того момента, как он был активирован, теперь все изменения, которые произойдут в основном бакете, будут появляться и в Destination Bucket.

00:21:52.000 --> 00:21:54.000
Давайте попробуем это проверить.

00:21:54.000 --> 00:22:00.000
Для этого локально в файле index.html сделаем абсолютно любые изменения.

00:22:00.000 --> 00:22:04.000
Вы здесь видите пример моих изменений.

00:22:04.000 --> 00:22:10.000
Далее мы возвращаемся к основному S3 Bucket, нажимаем на кнопку Upload.

00:22:10.000 --> 00:22:20.000
Далее нажимаем на Add Files, выбираем наш обновленный index.html, нажимаем на кнопку Open и подтверждаем нашу загрузку.

00:22:20.000 --> 00:22:27.000
Если мы откроем список версии для объекта index.html, мы увидим, что у нас три версии.

00:22:27.000 --> 00:22:33.000
Последняя загрузка является текущей версии для этого файла.

00:22:33.000 --> 00:22:44.000
Теперь, если мы откроем наш второй S3 Bucket, который является Destination Bucket при Cross-Region Replication, мы увидим, что у нас появился один объект.

00:22:44.000 --> 00:22:52.000
Это index.html. Это последняя версия этого файла, которую мы загрузили после активации Cross-Region Replication.

00:22:52.000 --> 00:23:02.000
Теперь, что мы сделаем? На основном S3 Bucket удалим последнюю версию index.html.

00:23:02.000 --> 00:23:06.000
Для этого необходимо из списка выбрать последнюю версию, нажать на кнопку Delete.

00:23:06.000 --> 00:23:10.000
Откроются отдельные страницы с подтверждением списка объектов.

00:23:10.000 --> 00:23:20.000
В поле Permanently Delete Objects необходимо подтвердить это удаление и написать руками Permanently Delete.

00:23:20.000 --> 00:23:23.000
После чего кнопка Delete Objects активируется.

00:23:23.000 --> 00:23:28.000
Давайте на нее нажмем и нас направят на предыдущую страницу.

00:23:28.000 --> 00:23:31.000
Здесь мы увидим, что у нас остались две версии.

00:23:31.000 --> 00:23:34.000
Предыдущая версия стала текущей версией.

00:23:34.000 --> 00:23:36.000
Отлично.

00:23:36.000 --> 00:23:47.000
Теперь, если мы откроем второй S3 Bucket и обновим страницу, мы увидим, что index.html никуда не делся, новых версий не добавилось.

00:23:47.000 --> 00:23:53.000
На текущий момент у нас видна третья версия файла index.html.

00:23:53.000 --> 00:24:02.000
Давайте теперь откроем страницу с тестовыми вопросами и попробуем ответить на четвертый вопрос.

00:24:02.000 --> 00:24:04.000
Звучит он следующим образом.

00:24:04.000 --> 00:24:16.000
После удаления версии файла в основном S3 Bucket удалился ли также объект в Destination Bucket?

00:24:16.000 --> 00:24:18.000
В нашем случае ответ No.

00:24:18.000 --> 00:24:22.000
Дам некоторые комментарии, почему так произошло.

00:24:22.000 --> 00:24:28.000
По умолчанию Delete Маркеры не реплицируются в Replication Bucket.

00:24:28.000 --> 00:24:35.000
Поэтому удаление, которое произошло на основном Bucket не отразилось на Replication Bucket.

00:24:35.000 --> 00:24:49.000
Если вы хотите также передавать удаление Delete Маркеры на Destination Bucket, для этого необходимо произвести дополнительные действия и эту опцию включить.

00:24:49.000 --> 00:24:52.000
Отлично.

00:24:52.000 --> 00:24:53.000
Я вас поздравляю.

00:24:53.000 --> 00:24:56.000
Мы завершили все задания лаборторной работы.

00:24:56.000 --> 00:25:06.000
Теперь нам необходимо запустить скрипт для автооценивания и убедиться в том, что мы корректно выполнили все задания.

00:25:06.000 --> 00:25:13.000
Для этого нам необходимо нажать на кнопку Submit на странице с лаборторным заданием.

00:25:13.000 --> 00:25:20.000
Как только вы ее нажмете, необходимо подтвердить, что мы хотим запустить автооценивание.

00:25:20.000 --> 00:25:23.000
Здесь нам необходимо подождать некоторое время.

00:25:23.000 --> 00:25:34.000
В моем случае я набрал максимальное количество баллов, 29 из 29, что говорит о том, что все задания были выполнены корректно.

00:25:34.000 --> 00:25:35.000
Отлично.

00:25:35.000 --> 00:25:40.000
Теперь нам необходимо безопасно завершить работу всех систем.

00:25:40.000 --> 00:25:46.000
Начнем мы с AWS аккаунта.

00:25:46.000 --> 00:25:53.000
Нам необходимо вверху вправо нажать на имя пользователя, в выпадающем списке нажать на кнопку Sign out.

00:25:53.000 --> 00:25:58.000
Мы это проделывали несколько раз, но я не перестаю об этом повторять.

00:25:58.000 --> 00:26:02.000
Мы возвращаемся на страницу с лаборторным заданием.

00:26:02.000 --> 00:26:15.000
Здесь нам необходимо нажать на кнопку End lab, подтвердить, что мы завершаем лаборторную работу и увидеть сообщение о том, что процесс удаления временных созданных ресурсов запущен.

00:26:15.000 --> 00:26:19.000
Мы можем закрывать это окно и выходить с AWS Academy.

00:26:19.000 --> 00:26:20.000
Отлично.

00:26:20.000 --> 00:26:21.000
Я вас поздравляю.

00:26:21.000 --> 00:26:25.000
Мы завершили разбор лаборторной работы.

00:26:25.000 --> 00:26:30.000
Я очень надеюсь, что все вопросы, которые у вас были, вы получили на них ответы.

00:26:30.000 --> 00:26:33.000
Если же остались еще вопросы, пожалуйста их задавайте.

00:26:33.000 --> 00:26:35.000
С радостью на них также ответим.

00:26:35.000 --> 00:26:37.000
Спасибо за внимание.

00:26:37.000 --> 00:26:47.000
Увидимся с вами на следующих наших активностях.
WEBVTT

00:00:00.000 --> 00:00:06.000
Добрый день уважаемые студенты! Я рад вас всех видеть на очередной сессии демо.

00:00:06.000 --> 00:00:17.000
Сегодня мы попробуем с вами создать EC2 Instance, вписать туда демо user data и посмотреть как это все сработает.

00:00:17.000 --> 00:00:18.000
Итак, давайте начнем.

00:00:20.000 --> 00:00:27.000
Начинаем мы с вами наше демо с основной страницы AWS Management Console.

00:00:27.000 --> 00:00:33.000
Перед тем как мы перейдем к созданию EC2 Instance, нам необходимо подготовить VPC.

00:00:33.000 --> 00:00:41.000
Для этого в строке поиска начнем вводить VPC и перейдем в выдаче на нужный нам сервис.

00:00:41.000 --> 00:00:48.000
Как только мы окажемся на основной странице сервиса AWS VPC, необходимо нажать на кнопку Create VPC.

00:00:48.000 --> 00:00:56.000
Здесь мы указываем что мы создаем не только VPC, но и в том числе связанные ресурсы это subnets, root tables и так далее.

00:00:56.000 --> 00:01:11.000
Нам необходимо обязательно указать cidre block. Давайте укажем 10.0.0.0.24. Этот cidre block состоит из 256 IP адресов.

00:01:11.000 --> 00:01:24.000
Прокручиваем чуть ниже. Давайте укажем количество availability zone равным 1 так как этого более чем достаточно в рамках нашего демо.

00:01:24.000 --> 00:01:34.000
Далее количество публичных и приватных subnets укажем по одному. Тоже достаточно в рамках лабораторной работы.

00:01:34.000 --> 00:01:44.000
Not gay и VPC endpoint укажем как none. И в самом внизу страницы нажмем на кнопку Create VPC.

00:01:47.000 --> 00:01:53.000
Нас направят на страницу со статусом создания всех необходимых ресурсов.

00:01:53.000 --> 00:02:00.000
Как только она закончится, вы увидите статусы, где-то будут доступны ссылки на эти ресурсы.

00:02:00.000 --> 00:02:07.000
Нам сейчас необходимо нажать на кнопку View VPC. Мы окажемся на основной странице VPC.

00:02:07.000 --> 00:02:15.000
Теперь давайте проверим все ли нормально создалось с точки зрения других ресурсов.

00:02:15.000 --> 00:02:23.000
Нас интересуют subnets, а именно public subnet. Поэтому в левом навигационном меню необходимо нажать на пункт subnets.

00:02:23.000 --> 00:02:34.000
Как только мы на нее перейдем, мы увидим список существующих subnets в рамках нашего AWS аккаунта.

00:02:34.000 --> 00:02:45.000
Вы увидите, что у нас есть subnet public1. Это тот subnet, который находится в новом созданном VPC.

00:02:45.000 --> 00:02:53.000
Все отлично! Мы подготовили все необходимое с точки зрения NETWORK.

00:02:53.000 --> 00:02:58.000
Давайте теперь перейдем к созданию нашего EC2 Instance.

00:02:58.000 --> 00:03:05.000
Для этого нам необходимо в строке поиска сервисов начать вводить EC2 и в выдаче нажать на соответствующий сервис.

00:03:05.000 --> 00:03:14.000
Как только мы попадаем на главную страницу сервиса EC2, нам необходимо сразу перейти к созданию Instance.

00:03:14.000 --> 00:03:19.000
Поэтому нажмем на кнопку Launch Instance, откроется выпадающий список.

00:03:19.000 --> 00:03:28.000
Там также необходимо выбрать опцию Launch Instance, после чего направить нас на отдельную страницу для ввода некоторых входных данных.

00:03:28.000 --> 00:03:39.000
Самым первым делом просят указать name. Оно также продублируется в тег с ключом name и с тем значением, которое мы введем.

00:03:39.000 --> 00:03:53.000
Я введу demo EC2 User Data по теме нашего demo. Далее как операционную систему выберу Amazon Linux и AMA выберу Amazon Linux 2.

00:03:53.000 --> 00:04:00.000
Прокручиваем чуть ниже. Здесь необходимо выбрать Instance Type. Я выбираю T2 Micro.

00:04:00.000 --> 00:04:16.000
Это тот тип Instance, который доступен в рамках Free Tier. Если вы будете это демо проделывать самостоятельно, у вас также будет возможность бесплатно ее выбрать, использовать и после демо отключить.

00:04:16.000 --> 00:04:22.000
В следующей секции необходимо выбрать Key Pair. Если оно у вас не создано, давайте создадим.

00:04:22.000 --> 00:04:34.000
Я напоминаю, что Key Pair это специальный приватный ключ, который помогает вам безопасно подключаться по SSH удаленно к вашим веб-серверам, к виртуальным серверам.

00:04:34.000 --> 00:04:45.000
На этой странице необходимо указать Key Pair Name. Здесь рекомендую написать то имя, которое будет понятно для вас.

00:04:45.000 --> 00:04:54.000
Это же имя будет отображаться как Key Pair необходимый для подключения по SSH на странице EC2 Instance.

00:04:54.000 --> 00:05:03.000
Более того, не рекомендую этот файл после этого не переименовывать, так как вы можете потенциально запутаться.

00:05:03.000 --> 00:05:07.000
Потом разобраться, что к чему относится, будет не так-то просто.

00:05:07.000 --> 00:05:19.000
Чуть ниже есть возможность выбрать формат приватного ключа. Нам нужен PPK, так как мы будем использовать программу PUTTI для подключения.

00:05:19.000 --> 00:05:26.000
Как только мы ввели все необходимые данные, давайте нажмем на кнопку Create Key Pair.

00:05:26.000 --> 00:05:40.000
Как только вы ее нажмете, вам будет предложено сохранить файл. Это PPK файл, ровно с тем названием, которое мы написали ранее. Можете сохранить ее локально.

00:05:40.000 --> 00:05:49.000
Мы переходим к следующей секции. Эта секция связана с Network. Здесь необходимо нажать на кнопку Edit, чтобы внести некоторые изменения.

00:05:49.000 --> 00:05:57.000
Как VPC нужно выбрать тот VPC, который мы создали. Вы видите, это тот cydro блок, который мы прописывали ранее во время создания VPC.

00:05:57.000 --> 00:06:05.000
После этого нам необходимо выбрать Subnet, который является Public. Не забываем, что мы также создали private Subnet.

00:06:05.000 --> 00:06:09.000
И необходимо нам выбрать правильную, а именно Public.

00:06:09.000 --> 00:06:25.000
В пункте Auto Assign Public IP необходимо обязательно указать Enable. Это нужно для того, чтобы все инстанции, которые создаются в этом VPC, автоматически привязывался к публичной IP-адрес.

00:06:25.000 --> 00:06:35.000
Чуть ниже нам необходимо выбрать опцию Create Security Group, так как мы Security Group еще не создавали и у нас есть возможность прямо здесь ее создать.

00:06:35.000 --> 00:06:45.000
Описание и название Security Group вы можете вписать любое по желанию. Я оставляю значение по умолчанию и перехожу чуть ниже.

00:06:45.000 --> 00:06:58.000
Здесь мы можем указать Inbound Security Group Rules, то есть это те правила, которые описывают по какому порту, по какому протоколу к этому инстанцу можно будет подключаться.

00:06:58.000 --> 00:07:17.000
Здесь необходимо выбрать тип SSH, далее остальные поля автоматически заполнятся, как Source Type необходимо выбрать Anywhere, то есть при наличии ключа мы через интернет с любого компьютера сможем подключиться.

00:07:17.000 --> 00:07:31.000
Если мы бы подключались с локального компьютера, либо, может быть, с корпоративной сети и мы знаем ее cedarblock, то здесь можно было ее ввести для того, чтобы еще больше обезопасить наше подключение.

00:07:31.000 --> 00:07:51.000
Прокручиваем чуть ниже, здесь необходимо будет два раза нажать на кнопку Add Security Group Rule и необходимо открыть доступ к портам 80, это HTTP порт, и к 443 это HTTPS защищенное подключение.

00:07:51.000 --> 00:08:05.000
В нашем случае оно не пригодится, так как чтобы она заработала необходимо также настраивать сертификаты. Это не входит в рамках лаборатурной работы, но как минимум вы видите, как это достаточно просто делается.

00:08:05.000 --> 00:08:20.000
Прокручиваем чуть ниже, как Storage укажем то, что предлагается, это General Purpose SSD диски на 8 ГБ, более чем достаточно в рамках нашей задачи.

00:08:20.000 --> 00:08:39.000
В самом низу есть последняя секция Advanced Details, давайте ее раскроем и прокрутим в самый низ. Вы видите, что здесь есть опциональное поле, называется UserData, это то, что нам нужно.

00:08:39.000 --> 00:08:53.000
В рамках этого дема мы подготовили специальный Bash Script, чтобы запустить веб-сервер, создать тестовую страницу и попробовать обратиться к ней через интернет.

00:08:53.000 --> 00:09:17.000
Давайте пройдемся по каждой из строчек. Первая строчка это Shebang, это та строка, которая носит информативный характер и идея в том, чтобы объявить на каком языке будут следующие команды. В нашем случае это Bash Script.

00:09:17.000 --> 00:09:30.000
Вторая строчка, она обновляет все существующее ПО на этом сервере. Третья строчка также использует yum для того, чтобы установить компонент веб-сервера.

00:09:30.000 --> 00:09:51.000
HTTPD это простейший веб-сервер. Четвертая строчка использует команду System.ctl для того, чтобы добавить HTTPD в автозагрузку. Далее System.ctl start httpd запускает наш веб-сервер.

00:09:51.000 --> 00:10:20.000
Самая последняя строчка, она не поместилась на одну строчку, но она полностью должна находиться в одной строке. Идея в том, что мы текст с простейшей html страницы записываем в файл index.html, она находится по следующему пути это slash var, slash www, slash html и slash index.html.

00:10:20.000 --> 00:10:32.000
После того как мы ввели все эти команды, мы готовы к созданию инстанца, поэтому нам необходимо нажать в правой части экрана на кнопку Launch Instance.

00:10:32.000 --> 00:10:54.000
Как только мы ее нажимаем, мы видим детали создания наших ресурсов. Как только она закончится, выйдет соответствующее уведомление зеленого цвета и также будет отдельная кнопка для перехода на страницу со списком всех ICT инстанцев.

00:10:54.000 --> 00:11:13.000
Давайте на нее нажмем и перейдем. Мы видим, что на этом AWS аккаунте у нас есть единственный инстанц, тот инстанц, который мы создали. Вы видите, что статус у нее Initializing, что говорит о том, что он только-только создается и еще не готов к работе.

00:11:13.000 --> 00:11:34.000
Нам необходимо нажимать на кнопку Refresh в верхней части страницы, либо обновлять всю страницу кнопкой F5. Через какое-то время мы увидим, что мы прошли стандартные статус чеки, два из двух, все отлично и инстанц готов к работе.

00:11:34.000 --> 00:11:56.000
Сейчас нам необходимо получить некоторую информацию об этом инстанце. Для этого необходимо в списке ее выбрать, отобразится отдельная страница в нижней части экрана и вы там увидите публичный IPv4 адрес. Давайте ее скопируем, она нам еще понадобится.

00:11:56.000 --> 00:12:16.000
Перед тем, как мы откроем нашу демо страницу в интернете, давайте попробуем подключиться удаленно по SSH к нашему серверу и убедиться в том, что все настройки были применены успешно.

00:12:16.000 --> 00:12:33.000
Для этого необходимо открыть программу PUTTI. Как только она откроется в левом навигационном меню, необходимо открыть вкладку Credentials. Как только вы это сделаете, вы увидите, откроется страница с тремя полями.

00:12:33.000 --> 00:12:46.000
Нас интересует первое, здесь необходимо указать путь до вашего PPK файла. Для удобства можете нажать на кнопку Browse и добраться до нужной папки.

00:12:46.000 --> 00:13:06.000
Как только вы указали путь, мы можем возвращаться обратно к главной странице программы PUTTI, а именно в левом навигационном меню нажать на вкладку Session, вы увидите следующее окно. Нам необходимо сейчас для удобства работы сохранить подключение.

00:13:06.000 --> 00:13:15.000
В нашем случае мы сохраняем именно настройку путь до PPK файла, чтобы каждый раз это не указывать.

00:13:15.000 --> 00:13:24.000
В поле Saved Sessions давайте введем любое значение удобное для вас, в моем случае это Cloud Academy и нажмем на кнопку Save.

00:13:24.000 --> 00:13:40.000
Вы увидите, что в списке ниже появилось подключение с тем названием, которое вы указали. Теперь если вы закройте и откройте программу еще раз, вы увидите, что в списке ваше подключение сохранилось.

00:13:40.000 --> 00:13:53.000
И вам достаточно теперь выбрать это подключение, нажать на кнопку Load, загрузятся все настройки, в том числе путь до PPK файла, вы можете это самостоятельно проверить.

00:13:53.000 --> 00:14:09.000
Далее необходимо в поле Hostname или IP-адрес указать IP-адрес нашего сервера, это именно публичный IP-адрес и после чего нажать на кнопку Open.

00:14:09.000 --> 00:14:26.000
Откроется страница, необходимо указать пользователя, под которым мы войдем в сервер, в нашем случае это EC2 Dash User, это стандартные пользователи для Linux EC2 Instances внутри AWS.

00:14:26.000 --> 00:14:40.000
Как только вы ее введете, вас пропустят, вы увидите welcome сообщения и также увидите prompt, на который можно уже вводить команды.

00:14:40.000 --> 00:14:56.000
Давайте введем команду Systemctl status hcpd, как только вы ее введете, вы увидите достаточно объемное сообщение, но зеленым будет выделено, что этот сервис активен.

00:14:56.000 --> 00:15:13.000
Отлично, давайте введем еще парочку команд, чтобы убедиться, что все работает корректно. Давайте отобразим список файлов, которые находятся по пути slash var, slash 3w, slash html.

00:15:13.000 --> 00:15:29.000
Должно отобразиться один файл, это наш индекс HTML, теперь если мы по тому же пути попробуем отобразить содержание файла, мы должны увидеть тот текст, который мы вводили ранее в UserData.

00:15:29.000 --> 00:15:43.000
Если это действительно так, то все настройки были выполнены и применены корректно. Я вас поздравляю, теперь мы можем переходить в браузер и можем ввести IP адрес нашего сервера.

00:15:43.000 --> 00:15:50.000
И вы увидите то сообщение, которое мы ввели ранее. Hello from Cloud Academy demo session.

00:15:50.000 --> 00:16:02.000
Отлично, я вас поздравляю, вы подробнее ознакомились с функционалом UserData, мы повторили процесс создания нового EC2 Instance, некоторые ее нюансы.

00:16:02.000 --> 00:16:20.000
Я надеюсь, вы получили более полное представление о сервисе EC2, в частности, о функционале UserData. Спасибо за внимание, увидимся с вами на следующих наших активностях.
WEBVTT

00:00:00.000 --> 00:00:06.000
Добрый день уважаемые студенты!
Я рад вас всех видеть на очередной сессии Демо.

00:00:06.000 --> 00:00:12.035
Сегодня мы попробуем создать
EC2 Instance, вписать туда демо user

00:00:12.059 --> 00:00:18.000
data и посмотреть как это все сработает.
Итак, давайте начнем.

00:00:20.000 --> 00:00:27.000
Начинаем демо с основной
страницы AWS Management Console.

00:00:27.000 --> 00:00:33.000
Перед тем как мы перейдем к созданию
EC2 Instance, нам необходимо подготовить VPC.

00:00:33.000 --> 00:00:41.000
Для этого в строке поиска начнем вводить
VPC и перейдем в выдаче на нужный нам сервис.

00:00:41.000 --> 00:00:48.000
Как только мы окажемся на основной странице сервиса
AWS VPC, необходимо нажать на кнопку Create VPC.

00:00:48.000 --> 00:00:51.988
Здесь мы указываем, что мы
создаем не только VPC, но и в том

00:00:52.012 --> 00:00:56.000
числе связанные ресурсы это
subnets, root tables и так далее.

00:00:56.000 --> 00:01:03.680
Нам необходимо обязательно 
указать CIDR block. Давайте укажем

00:01:03.704 --> 00:01:11.000
10.0.0.0/24. Этот CIDR block 
состоит из 256 IP адресов.

00:01:11.000 --> 00:01:17.488
Прокручиваем чуть ниже.
Давайте укажем количество availability zone

00:01:17.512 --> 00:01:24.000
равным 1, так как этого более чем
достаточно в рамках нашего Демо.

00:01:24.000 --> 00:01:28.988
Далее, как количество публичных
и приватных subnets укажем

00:01:29.012 --> 00:01:34.000
по одному. Тоже достаточно в 
рамках лабораторной работы.

00:01:34.000 --> 00:01:44.000
NAT Gateways и VPC endpoints укажем None.
Внизу страницы нажмем на кнопку Create VPC.

00:01:47.000 --> 00:01:53.000
Нас направят на страницу со статусом
создания всех необходимых ресурсов.

00:01:53.000 --> 00:02:00.000
Как только она закончится, вы увидите статусы,
где-то будут доступны ссылки на эти ресурсы.

00:02:00.000 --> 00:02:07.000
Нам сейчас необходимо нажать на кнопку View VPC.
Мы окажемся на основной странице VPC.

00:02:07.000 --> 00:02:15.000
Теперь давайте проверим все ли нормально
создалось с точки зрения других ресурсов.

00:02:15.000 --> 00:02:18.785
Нас интересуют subnets,
а именно public subnet.

00:02:18.809 --> 00:02:23.000
Поэтому в левом навигационном меню
необходимо нажать на пункт Subnets.

00:02:23.000 --> 00:02:34.000
Как только мы на нее перейдем, мы увидим список
существующих subnets в рамках нашего AWS аккаунта.

00:02:34.000 --> 00:02:45.000
Вы увидите, что у нас есть subnet-public1. Это тот
subnet, который находится в новом созданном VPC.

00:02:45.000 --> 00:02:53.000
Все отлично! Мы подготовили все
необходимое с точки зрения network.

00:02:53.000 --> 00:02:58.000
Давайте теперь перейдем к
созданию нашего EC2 Instance.

00:02:58.000 --> 00:03:01.488
Для этого нам необходимо в
строке поиска сервисов начать

00:03:01.512 --> 00:03:05.000
вводить EC2 и в выдаче нажать
на соответствующий сервис.

00:03:05.000 --> 00:03:14.000
Как только мы попадаем на главную страницу сервиса
EC2, нам необходимо перейти к созданию Instance.

00:03:14.000 --> 00:03:19.000
Поэтому нажмем на кнопку Launch
Instance, откроется выпадающий список.

00:03:19.000 --> 00:03:23.116
Там также необходимо выбрать
опцию Launch Instance, после чего

00:03:23.140 --> 00:03:28.000
направит нас на отдельную страницу
для ввода некоторых входных данных.

00:03:28.000 --> 00:03:33.668
Самым первым делом просят указать Name.
Оно также продублируется

00:03:33.692 --> 00:03:39.000
в тег с ключом name и с тем
значением, которое мы введем.

00:03:39.000 --> 00:03:45.222
Я введу demo-ec2-user-data 
по теме нашего Демо. Далее, как

00:03:45.246 --> 00:03:53.000
операционную систему выберу Amazon
Linux и AMI выберу Amazon Linux 2.

00:03:53.000 --> 00:04:00.000
Прокручиваем чуть ниже. Здесь необходимо
выбрать Instance Type. Я выбираю t2.micro.

00:04:00.000 --> 00:04:07.658
Это тот тип Instance, который доступен в рамках
Free Tier. Если вы будете это Демо проделывать

00:04:07.682 --> 00:04:16.000
самостоятельно, у вас будет возможность бесплатно
 ее выбрать, использовать и после отключить.

00:04:16.000 --> 00:04:22.000
В следующей секции необходимо выбрать Key Pair.
Если оно у вас не создано, давайте создадим.

00:04:22.000 --> 00:04:27.657
Я напоминаю, что Key Pair это специальный
приватный ключ, который помогает вам

00:04:27.681 --> 00:04:34.000
безопасно подключаться по SSH удаленно к
вашим веб-серверам, к виртуальным серверам.

00:04:34.000 --> 00:04:39.488
На этой странице необходимо
указать Key Pair Name.

00:04:39.512 --> 00:04:45.000
Здесь рекомендую написать то имя,
которое будет понятно для вас.

00:04:45.000 --> 00:04:54.000
Это имя будет отображаться как Key Pair необходимый
для подключения по SSH на странице EC2 Instance.

00:04:54.000 --> 00:04:57.997
Более того, не рекомендую
этот файл после этого не

00:04:58.021 --> 00:05:03.000
переименовывать, так как вы
можете потенциально запутаться.

00:05:03.000 --> 00:05:07.000
Потом разобраться, что к чему
относится, будет не так-то просто.

00:05:07.000 --> 00:05:12.988
Чуть ниже есть возможность выбрать
формат приватного ключа. Нам нужен

00:05:13.012 --> 00:05:19.000
.ppk, так как мы будем использовать
программу PuTTY для подключения.

00:05:19.000 --> 00:05:26.000
Как только мы ввели все необходимые данные, 
давайте нажмем на кнопку Create Key Pair.

00:05:26.000 --> 00:05:33.034
Как только вы ее нажмете, вам будет
предложено сохранить файл. Это .ppk файл,

00:05:33.058 --> 00:05:40.000
с тем названием, которое мы написали ранее.
Можете сохранить ее локально.

00:05:40.000 --> 00:05:44.488
Мы переходим к следующей секции.
Эта секция связана с Network.

00:05:44.512 --> 00:05:49.000
Здесь необходимо нажать на кнопку Edit,
чтобы внести некоторые изменения.

00:05:49.000 --> 00:05:52.988
Как VPC нужно выбрать тот VPC, 
который мы создали. Вы видите, это

00:05:53.012 --> 00:05:57.000
тот CIDR block, который мы
прописывали ранее во время создания VPC.

00:05:57.000 --> 00:06:00.988
После этого нам необходимо выбрать
Subnet, который является Public.

00:06:01.012 --> 00:06:05.000
Не забываем, что мы
также создали Private Subnet.

00:06:05.000 --> 00:06:09.000
И необходимо нам выбрать
правильную, а именно Public.

00:06:09.000 --> 00:06:16.988
В пункте Auto-assign Public IP необходимо
обязательно указать Enable. Это нужно, чтобы

00:06:17.012 --> 00:06:25.000
все инстансы, которые создаются в этом VPC,
автоматически привязывались к публичной IP-адрес.

00:06:25.000 --> 00:06:29.629
Чуть ниже нам необходимо выбрать
опцию Create Security Group, так как мы

00:06:29.653 --> 00:06:35.000
Security Group еще не создавали и у нас
есть возможность прямо здесь ее создать.

00:06:35.000 --> 00:06:39.660
Описание и название Security
Group можете вписать любое по

00:06:39.684 --> 00:06:45.000
желанию. Я оставляю значение
по умолчанию и перехожу чуть ниже.

00:06:45.000 --> 00:06:51.189
Здесь мы можем указать Inbound Security
Group Rules, то есть это те правила, которые

00:06:51.213 --> 00:06:58.000
описывают по какому порту, по какому протоколу
к этому инстансу можно будет подключаться.

00:06:58.000 --> 00:07:07.488
Необходимо выбрать тип SSH, остальные поля
автоматически заполнятся, как Source Type выбрать

00:07:07.512 --> 00:07:17.000
Anywhere, то есть при наличии ключа мы через
интернет с любого компьютера сможем подключиться.

00:07:17.000 --> 00:07:23.988
Если бы мы подключались с локального компьютера,
либо с корпоративной сети и мы знаем ее CIDR

00:07:24.012 --> 00:07:31.000
block, то здесь можно было ее ввести для того,
чтобы еще больше обезопасить наше подключение.

00:07:31.000 --> 00:07:40.988
Прокручиваем чуть ниже, здесь необходимо будет
два раза нажать на кнопку Add Security Group Rule

00:07:41.012 --> 00:07:51.000
и необходимо открыть доступ к портам 80, это HTTP
порт, и к 443 это HTTPS защищенное подключение.

00:07:51.000 --> 00:07:57.799
В нашем случае оно не пригодится, так как
чтобы она заработала необходимо также настраивать

00:07:57.823 --> 00:08:05.000
сертификаты. Это не входит в рамки лабораторной
работы, но вы видите, как это просто делается.

00:08:05.000 --> 00:08:12.641
Прокручиваем чуть ниже, как Storage
укажем то, что предлагается, это General

00:08:12.665 --> 00:08:20.000
Purpose SSD диски на 8 ГБ, более
чем достаточно в рамках нашей задачи.

00:08:20.000 --> 00:08:29.488
В самом низу есть последняя секция Advanced
Details, давайте ее раскроем и прокрутим в самый

00:08:29.512 --> 00:08:39.000
низ. Вы видите, что здесь есть опциональное
поле, называется User data, это то, что нам нужно.

00:08:39.000 --> 00:08:45.463
В рамках этого Демо мы подготовили
специальный Bash Script, чтобы запустить

00:08:45.487 --> 00:08:53.000
веб-сервер, создать тестовую страницу и
попробовать обратиться к ней через интернет.

00:08:53.000 --> 00:09:04.519
Пройдемся по каждой из строчек. Первая -
Shebang, носит информативный характер и идея в

00:09:04.543 --> 00:09:17.000
том, чтобы объявить на каком языке будут
следующие команды. В нашем случае Bash Script.

00:09:17.000 --> 00:09:23.146
Вторая строчка, она обновляет все
существующее ПО на этом сервере.

00:09:23.170 --> 00:09:30.000
Третья строчка также использует yum для того,
чтобы установить компонент веб-сервера.

00:09:30.000 --> 00:09:40.488
httpd это простейший веб-сервер. Четвертая
строчка использует команду systemctl для того,

00:09:40.512 --> 00:09:51.000
чтобы добавить httpd в автозагрузку. Далее 
systemctl start httpd запускает наш веб-сервер.

00:09:51.000 --> 00:09:58.232
Самая последняя строчка, она
не поместилась на одну строчку, но

00:09:58.256 --> 00:10:05.488
она полностью должна находиться 
в одной строке. Идея в том, что

00:10:05.512 --> 00:10:12.801
мы текст с простейшей html
страницы записываем в файл index.html,

00:10:12.825 --> 00:10:20.000
она находится по следующему
пути это /var/www/html/index.html.

00:10:20.000 --> 00:10:25.588
После того как мы ввели все эти
команды, мы готовы к созданию инстанса,

00:10:25.612 --> 00:10:32.000
поэтому нам необходимо нажать в правой
части экрана на кнопку Launch Instance.

00:10:32.000 --> 00:10:37.506
Как только мы ее нажимаем,
мы видим детали создания наших

00:10:37.530 --> 00:10:43.036
ресурсов. Как только она закончится, 
выйдет соответствующее

00:10:43.060 --> 00:10:48.518
уведомление зеленого цвета и
также будет отдельная кнопка

00:10:48.542 --> 00:10:54.000
для перехода на страницу со
списком всех EC2 инстансов.

00:10:54.000 --> 00:10:58.426
Давайте на нее нажмем и перейдем.
Мы видим, что на этом AWS

00:10:58.450 --> 00:11:03.488
аккаунте у нас есть единственный
инстанс, тот инстанс, который мы

00:11:03.512 --> 00:11:08.244
создали. Вы видите, что статус 
у нее Initializing, что говорит

00:11:08.268 --> 00:11:13.000
о том, что он только-только
создается и еще не готов к работе.

00:11:13.000 --> 00:11:18.232
Нам необходимо нажимать на
кнопку Refresh в верхней части

00:11:18.256 --> 00:11:23.488
страницы, либо обновлять
всю страницу кнопкой F5.

00:11:23.512 --> 00:11:28.744
Через какое-то время мы увидим, что
мы прошли стандартные статус

00:11:28.768 --> 00:11:34.000
чеки, два из двух, все отлично
и инстанс готов к работе.

00:11:34.000 --> 00:11:39.086
Сейчас нам необходимо получить
некоторую информацию об этом

00:11:39.110 --> 00:11:44.724
инстансе. Для этого необходимо 
в списке ее выбрать, отобразится

00:11:44.748 --> 00:11:50.677
отдельная страница в нижней части
экрана и вы там увидите публичный

00:11:50.701 --> 00:11:56.000
IPv4 адрес. Давайте ее скопируем, 
она нам еще понадобится.

00:11:56.000 --> 00:12:05.548
Перед тем, как мы откроем нашу Демо страницу
в интернете, давайте попробуем подключиться

00:12:05.572 --> 00:12:16.000
удаленно по SSH к нашему серверу и убедиться в
том, что все настройки были применены успешно.

00:12:16.000 --> 00:12:24.192
Для этого необходимо открыть программу PuTTY.
Как только она откроется в левом навигационном меню,

00:12:24.216 --> 00:12:33.000
необходимо открыть вкладку Credentials. Как только
вы это сделаете, откроется страница с тремя полями.

00:12:33.000 --> 00:12:39.488
Нас интересует первое, здесь необходимо
указать путь до вашего .ppk файла.

00:12:39.512 --> 00:12:46.000
Для удобства можете нажать на кнопку Browse...
и добраться до нужной папки.

00:12:46.000 --> 00:12:50.698
Как только вы указали путь, мы
можем возвращаться обратно к

00:12:50.722 --> 00:12:55.988
главной странице программы PuTTY,
а именно в левом навигационном

00:12:56.012 --> 00:13:00.994
меню нажать на вкладку Session,
вы увидите следующее окно.

00:13:01.018 --> 00:13:06.000
Нам необходимо сейчас для удобства
работы сохранить подключение.

00:13:06.000 --> 00:13:15.000
В нашем случае мы сохраняем именно настройку путь
до .ppk файла, чтобы каждый раз это не указывать.

00:13:15.000 --> 00:13:19.488
В поле Saved Sessions давайте
введем любое значение удобное для

00:13:19.512 --> 00:13:24.000
вас, в моем случае это
c1oud_academy и нажмем на кнопку Save.

00:13:24.000 --> 00:13:32.029
Вы увидите, что в списке ниже появилось подключение
с тем названием, которое вы указали. Теперь если

00:13:32.053 --> 00:13:40.000
вы закроете и откроете программу еще раз, вы
увидите, что в списке ваше подключение сохранилось.

00:13:40.000 --> 00:13:46.219
И вам достаточно теперь выбрать это
подключение, нажать на кнопку Load, загрузятся

00:13:46.243 --> 00:13:53.000
все настройки, в том числе путь до .ppk
файла, вы можете это самостоятельно проверить.

00:13:53.000 --> 00:14:00.988
Далее необходимо в поле Host Name
или IP address указать IP-адрес нашего

00:14:01.012 --> 00:14:09.000
сервера, это именно публичный IP-адрес
и после чего нажать на кнопку Open.

00:14:09.000 --> 00:14:17.106
Откроется страница, необходимо указать
пользователя, под которым мы войдем в сервер, в

00:14:17.130 --> 00:14:26.000
нашем случае это ec2-user, это стандартные
пользователи для Linux EC2 Instances внутри AWS.

00:14:26.000 --> 00:14:33.255
Как только вы ее введете, вас
пропустят, вы увидите welcome сообщения

00:14:33.279 --> 00:14:40.000
и также увидите prompt, на
который можно уже вводить команды.

00:14:40.000 --> 00:14:47.988
Давайте введем команду systemctl status
httpd, как только вы ее введете, вы увидите

00:14:48.012 --> 00:14:56.000
достаточно объемное сообщение, но зеленым
будет выделено, что этот сервис активен.

00:14:56.000 --> 00:15:03.963
Отлично, давайте введем еще парочку
команд, чтобы убедиться, что все работает

00:15:03.987 --> 00:15:13.000
корректно. Давайте отобразим список
файлов, которые находятся по пути /var/www/html.

00:15:13.000 --> 00:15:20.689
Должен отобразиться один файл, это наш index.html,
теперь если мы по тому же пути попробуем

00:15:20.713 --> 00:15:29.000
отобразить содержание файла, мы должны увидеть
тот текст, который мы вводили ранее в User Data.

00:15:29.000 --> 00:15:35.988
Если это действительно так, то все настройки
были выполнены и применены корректно. Я вас

00:15:36.012 --> 00:15:43.000
поздравляю, теперь мы можем переходить в
браузер и можем ввести IP адрес нашего сервера.

00:15:43.000 --> 00:15:50.000
И вы увидите то сообщение, которое мы ввели 
ранее. Hello from C1oud Academy demo session.

00:15:50.000 --> 00:15:55.668
Отлично, я вас поздравляю, вы подробнее
ознакомились с функционалом

00:15:55.692 --> 00:16:02.000
User Data, мы повторили процесс создания
нового EC2 Instance, некоторые ее нюансы.

00:16:02.000 --> 00:16:10.199
Я надеюсь, вы получили более полное
представление о сервисе EC2, в частности,

00:16:10.223 --> 00:16:16.000
о функционале User Data. Спасибо за внимание,
увидимся с вами на следующих наших активностях.

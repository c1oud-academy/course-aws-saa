Добрый день уважаемые студенты! Я рад вас всех видеть на очередной сессии Демо.
Сегодня мы попробуем создать EC2 Instance, вписать туда демо user data и посмотреть как это все сработает.
Итак, давайте начнем.
Начинаем демо с основной страницы AWS Management Console.
Перед тем как мы перейдем к созданию EC2 Instance, нам необходимо подготовить VPC.
Для этого в строке поиска начнем вводить VPC и перейдем в выдаче на нужный нам сервис.
Как только мы окажемся на основной странице сервиса AWS VPC, необходимо нажать на кнопку Create VPC.
Здесь мы указываем, что мы создаем не только VPC, но и в том числе связанные ресурсы это subnets, root tables и так далее.
Нам необходимо обязательно указать CIDR block.
Давайте укажем 10.0.0.0/24.
Этот CIDR block состоит из 256 IP адресов.
Прокручиваем чуть ниже.
Давайте укажем количество availability zone равным 1, так как этого более чем достаточно в рамках нашего Демо.
Далее, как количество публичных и приватных subnets укажем по одному.
Тоже достаточно в рамках лабораторной работы.
NAT Gateways и VPC endpoints укажем None.
Внизу страницы нажмем на кнопку Create VPC.
Нас направят на страницу со статусом создания всех необходимых ресурсов.
Как только она закончится, вы увидите статусы, где-то будут доступны ссылки на эти ресурсы.
Нам сейчас необходимо нажать на кнопку View VPC.
Мы окажемся на основной странице VPC.
Теперь давайте проверим все ли нормально создалось с точки зрения других ресурсов.
Нас интересуют subnets, а именно public subnet.
Поэтому в левом навигационном меню необходимо нажать на пункт Subnets.
Как только мы на нее перейдем, мы увидим список существующих subnets в рамках нашего AWS аккаунта.
Вы увидите, что у нас есть subnet-public1.
Это тот subnet, который находится в новом созданном VPC.
Все отлично! Мы подготовили все необходимое с точки зрения network.
Давайте теперь перейдем к созданию нашего EC2 Instance.
Для этого нам необходимо в строке поиска сервисов начать вводить EC2 и в выдаче нажать на соответствующий сервис.
Как только мы попадаем на главную страницу сервиса EC2, нам необходимо перейти к созданию Instance.
Поэтому нажмем на кнопку Launch Instance, откроется выпадающий список.
Там также необходимо выбрать опцию Launch Instance, после чего направит нас на отдельную страницу для ввода некоторых входных данных.
Самым первым делом просят указать Name.
Оно также продублируется в тег с ключом name и с тем значением, которое мы введем.
Я введу demo-ec2-user-data по теме нашего Демо.
Далее, как операционную систему выберу Amazon Linux и AMI выберу Amazon Linux 2.
Прокручиваем чуть ниже.
Здесь необходимо выбрать Instance Type.
Я выбираю t2.micro.
Это тот тип Instance, который доступен в рамках Free Tier.
Если вы будете это Демо проделывать самостоятельно, у вас будет возможность бесплатно ее выбрать, использовать и после отключить.
В следующей секции необходимо выбрать Key Pair.
Если оно у вас не создано, давайте создадим.
Я напоминаю, что Key Pair это специальный приватный ключ, который помогает вам безопасно подключаться по SSH удаленно к вашим веб-серверам, к виртуальным серверам.
На этой странице необходимо указать Key Pair Name.
Здесь рекомендую написать то имя, которое будет понятно для вас.
Это имя будет отображаться как Key Pair необходимый для подключения по SSH на странице EC2 Instance.
Более того, не рекомендую этот файл после этого переименовывать, так как вы можете потенциально запутаться.
Потом разобраться, что к чему относится, будет не так-то просто.
Чуть ниже есть возможность выбрать формат приватного ключа.
Нам нужен .ppk, так как мы будем использовать программу PuTTY для подключения.
Как только мы ввели все необходимые данные, давайте нажмем на кнопку Create Key Pair.
Как только вы ее нажмете, вам будет предложено сохранить файл.
Это .ppk файл, с тем названием, которое мы написали ранее.
Можете сохранить ее локально.
Мы переходим к следующей секции.
Эта секция связана с Network.
Здесь необходимо нажать на кнопку Edit, чтобы внести некоторые изменения.
Как VPC нужно выбрать тот VPC, который мы создали.
Вы видите, это тот CIDR block, который мы прописывали ранее во время создания VPC.
После этого нам необходимо выбрать Subnet, который является Public.
Не забываем, что мы также создали Private Subnet.
И необходимо нам выбрать правильную, а именно Public.
В пункте Auto-assign Public IP необходимо обязательно указать Enable.
Это нужно, чтобы все инстансы, которые создаются в этом VPC, автоматически привязывались к публичной IP-адрес.
Чуть ниже нам необходимо выбрать опцию Create Security Group, так как мы Security Group еще не создавали и у нас есть возможность прямо здесь ее создать.
Описание и название Security Group можете вписать любое по желанию.
Я оставляю значение по умолчанию и перехожу чуть ниже.
Здесь мы можем указать Inbound Security Group Rules, то есть это те правила, которые описывают по какому порту, по какому протоколу к этому инстансу можно будет подключаться.
Необходимо выбрать тип SSH, остальные поля автоматически заполнятся, как Source Type выбрать Anywhere, то есть при наличии ключа мы через интернет с любого компьютера сможем подключиться.
Если бы мы подключались с локального компьютера, либо с корпоративной сети и мы знаем ее CIDR block, то здесь можно было ее ввести для того, чтобы еще больше обезопасить наше подключение.
Прокручиваем чуть ниже, здесь необходимо будет два раза нажать на кнопку Add Security Group Rule и необходимо открыть доступ к портам 80, это HTTP порт, и к 443 это HTTPS защищенное подключение.
В нашем случае оно не пригодится, так как чтобы она заработала необходимо также настраивать сертификаты.
Это не входит в рамки лабораторной работы, но вы видите, как это просто делается.
Прокручиваем чуть ниже, как Storage укажем то, что предлагается, это General Purpose SSD диски на 8 ГБ, более чем достаточно в рамках нашей задачи.
В самом низу есть последняя секция Advanced Details, давайте ее раскроем и прокрутим в самый низ.
Вы видите, что здесь есть опциональное поле, называется User data, это то, что нам нужно.
В рамках этого Демо мы подготовили специальный Bash Script, чтобы запустить веб-сервер, создать тестовую страницу и попробовать обратиться к ней через интернет.
Пройдемся по каждой из строчек.
Первая - Shebang, носит информативный характер и идея в том, чтобы объявить на каком языке будут следующие команды.
В нашем случае Bash Script.
Вторая строчка, она обновляет все существующее ПО на этом сервере.
Третья строчка также использует yum для того, чтобы установить компонент веб-сервера.
httpd это простейший веб-сервер.
Четвертая строчка использует команду systemctl для того, чтобы добавить httpd в автозагрузку.
Далее systemctl start httpd запускает наш веб-сервер.
Самая последняя строчка, она не поместилась на одну строчку, но она полностью должна находиться в одной строке.
Идея в том, что мы текст с простейшей html страницы записываем в файл index.html, она находится по следующему пути это /var/www/html/index.html.
После того как мы ввели все эти команды, мы готовы к созданию инстанса, поэтому нам необходимо нажать в правой части экрана на кнопку Launch Instance.
Как только мы ее нажимаем, мы видим детали создания наших ресурсов.
Как только она закончится, выйдет соответствующее уведомление зеленого цвета и также будет отдельная кнопка для перехода на страницу со списком всех EC2 инстансов.
Давайте на нее нажмем и перейдем.
Мы видим, что на этом AWS аккаунте у нас есть единственный инстанс, тот инстанс, который мы создали.
Вы видите, что статус у нее Initializing, что говорит о том, что он только-только создается и еще не готов к работе.
Нам необходимо нажимать на кнопку Refresh в верхней части страницы, либо обновлять всю страницу кнопкой F5.
Через какое-то время мы увидим, что мы прошли стандартные статус чеки, два из двух, все отлично и инстанс готов к работе.
Сейчас нам необходимо получить некоторую информацию об этом инстансе.
Для этого необходимо в списке ее выбрать, отобразится отдельная страница в нижней части экрана и вы там увидите публичный IPv4 адрес.
Давайте ее скопируем, она нам еще понадобится.
Перед тем, как мы откроем нашу Демо страницу в интернете, давайте попробуем подключиться удаленно по SSH к нашему серверу и убедиться в том, что все настройки были применены успешно.
Для этого необходимо открыть программу PuTTY.
Как только она откроется в левом навигационном меню, необходимо открыть вкладку Credentials.
Как только вы это сделаете, откроется страница с тремя полями.
Нас интересует первое, здесь необходимо указать путь до вашего .ppk файла.
Для удобства можете нажать на кнопку Browse... и добраться до нужной папки.
Как только вы указали путь, мы можем возвращаться обратно к главной странице программы PuTTY, а именно в левом навигационном меню нажать на вкладку Session, вы увидите следующее окно.
Нам необходимо сейчас для удобства работы сохранить подключение.
В нашем случае мы сохраняем именно настройку путь до .ppk файла, чтобы каждый раз это не указывать.
В поле Saved Sessions давайте введем любое значение удобное для вас, в моем случае это c1oud_academy и нажмем на кнопку Save.
Вы увидите, что в списке ниже появилось подключение с тем названием, которое вы указали.
Теперь если вы закроете и откроете программу еще раз, вы увидите, что в списке ваше подключение сохранилось.
И вам достаточно теперь выбрать это подключение, нажать на кнопку Load, загрузятся все настройки, в том числе путь до .ppk файла, вы можете это самостоятельно проверить.
Далее необходимо в поле Host Name или IP address указать IP-адрес нашего сервера, это именно публичный IP-адрес и после чего нажать на кнопку Open.
Откроется страница, необходимо указать пользователя, под которым мы войдем в сервер, в нашем случае это ec2-user, это стандартные пользователи для Linux EC2 Instances внутри AWS.
Как только вы ее введете, вас пропустят, вы увидите welcome сообщения и также увидите prompt, на который можно уже вводить команды.
Давайте введем команду systemctl status httpd, как только вы ее введете, вы увидите достаточно объемное сообщение, но зеленым будет выделено, что этот сервис активен.
Отлично, давайте введем еще парочку команд, чтобы убедиться, что все работает корректно.
Давайте отобразим список файлов, которые находятся по пути /var/www/html.
Должен отобразиться один файл, это наш index.html, теперь если мы по тому же пути попробуем отобразить содержание файла, мы должны увидеть тот текст, который мы вводили ранее в User Data.
Если это действительно так, то все настройки были выполнены и применены корректно.
Я вас поздравляю, теперь мы можем переходить в браузер и можем ввести IP адрес нашего сервера.
И вы увидите то сообщение, которое мы ввели ранее.
Hello from C1oud Academy demo session.
Отлично, я вас поздравляю, вы подробнее ознакомились с функционалом User Data, мы повторили процесс создания нового EC2 Instance, некоторые ее нюансы.
Я надеюсь, вы получили более полное представление о сервисе EC2, в частности, о функционале User Data.
Спасибо за внимание, увидимся с вами на следующих наших активностях.
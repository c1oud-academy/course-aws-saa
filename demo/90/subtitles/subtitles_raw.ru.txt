 Добрый день, уважаемые студенты! Я рад вас видеть на очередном демо. Тема сегодняшнего демо – это разбор функционала автоматических бэкапов и read-реплик у сервиса Amazon RDS. Итак, давайте начнем. Начинаем мы это демо с основной страницы AWS Management Console. Теперь воспользуемся строкой поиска сервисов и начнем вводить RDS. Первая ссылка – это та ссылка, которая нам нужна. Как только мы оказываемся на основной странице сервиса Amazon RDS, у нас есть две различные кнопки для создания инстенса RDS. Мы можем нажать любую из них. Нас перенаправят на страницу с входными данными для создания инстенса. Давайте выберем опцию Standard Create и как движок выберем MySQL. Далее у нас есть опция выбрать MySQL Community. В данном случае это единственный возможный вариант. Для других движков, возможно, есть несколько вариантов. Остальные опции оставляем по умолчанию. Как template выберем Free Tier, чтобы создать этот инстенс в рамках Free Tier на 12 месяцев. Availability и Durability сразу установились опция и стало недоступны. Мы создаем единственный инстенс без опции Multi-AZ. Как тебе инстенс Identifier укажем Cloud Academy demo RDS. Остальные входные данные оставляем по умолчанию. Как пароль укажем admin-admin. Мы этот инстенс удалим после демо, поэтому может быть любой пароль. Как тип инстенса выберем burstable classes. Оно будет выбрано по умолчанию, а также будет выбран тип T3-MICRO. Это тот тип инстенса, который доступен в рамках Free Tier. Для целей демо этого более чем достаточно. Для storage по умолчанию будет введено 200 ГБ. 200 ГБ это очень много. Для целей демо достаточно указать 20 ГБ. Это минимальное значение, которым мы можем указать. Все другие значения оставляем по умолчанию. Как VPC мы выбираем VPC созданный ранее на предыдущем демо. Как security group выбираем существующий дефолтовый. Далее как availability zone необходимо выбрать ту, на которой у нас активирован VPC. В нашем случае это USE1A. Все оставшиеся значения оставляем по умолчанию. Для секции enhanced monitoring необходимо флажок убрать. Для того, чтобы инстанс базы данных создался быстрее. Этот функционал мы не рассматриваем в рамках демо, поэтому мы можем его отключить. Прокручиваем самый низ и мы видим здесь информацию по примерно стоимости этого инстанца. Но так как эта настройка подпадает в рамках Free Tier, ничего конкретного здесь не сказано. В случае, когда вы будете создавать инстанс, не входящий во Free Tier, у вас будет разбивка отдельная за инстанс баз данных, отдельная за storage хранения. И вы увидите итоговую сумму к оплате в месяц на конкретный инстанс баз данных. Отлично, мы закончили и ввели все необходимые настройки. Сейчас необходимо нажать на кнопку Create Database, чтобы начать процесс создания баз данных. Оно займет некоторое время, от двух до трех минут. Необходимо будет на странице со списком баз данных нажать на кнопку Refresh, либо обновлять страницу. Через некоторое время статус поменяется на Available и мы можем нажать на название баз данных, чтобы провалиться на основную страницу этого инстанца и посмотреть детали нашей базы данных. Как только мы оказываемся на основной странице нашей базы данных, мы можем здесь найти любую необходимую нам информацию. В самом верху выведена самая основная информация, это имя нашей базы данных. В нашем случае это Cloud Academy Demo RDS. Далее как роль мы видим, что это Инстанс. Есть еще опция Cluster, когда поднимаются несколько инстансов и работают совместно. Мы видим также нагрузку на CPU. Видим количество коннекшенов, так как сейчас нет коннекшенов, так и написано 0 connections. Status Available. Видим информацию о движке, это MySQL Community. Class это T3 Micro и информация о Availability зоне, в которой находится база данных. В нашем случае это US East 1A. Ниже есть несколько вкладок, сгруппированная информация. Первый это Connectivity and Security. Здесь вы видите информацию о Endpoint и по порту, используя который мы можем подключаться к нашей базе данных. Мы будем это делать в рамках наших лабораторных работ. Далее есть информация по Networking. Это в какой VPC находится, к какому Subnet относится. Информация по безопасности. Есть ссылка на Security группу. Мы видим также отдельно вынесено, доступна эта база публично или нет и так далее. Если мы откроем вторую вкладку Monitoring, мы также видим, у нас есть более шести страниц с дешбордами. Каждый дешборд показывает определенную метрику. Давайте посмотрим на первые два. Это CPU Utilization, то есть какая нагрузка идет на наши процессоры. Вы видите, что недавно эта база данных была создана и в момент включения, когда база поднималась, была нагрузка на CPU. После этого, так как эта база данных нигде не используется, не утилизируется, то нагрузка на нее минимальна, менее 5%. Если вы посмотрите на количество подключений, то с момента запуска не было ни одного подключения и метрика показывает, что на текущий момент ноль подключений к этой базе данных. Третья вкладка Locks and Events. Здесь мы можем настраивать клад-вотч алармы. Также вы видите секцию Recent Events. Это все события, которые произошли с этим инстанцем баз данных. Вы видите время, когда произошло и какое событие. Мы видим, что оно поднялось, инстанц создался, произошел автоматический бэкап нашего инстанца. И также есть события, что бэкап был успешно создан. Ниже есть секция с логами. Здесь сохраняются все логи привязки ко времени. И вы можете на любой интересующий вас день скачать логи. Есть различные виды логов. О них мы поговорим чуть позже. У вас есть возможность выбрать любой лог-файл, его посмотреть здесь в AWS Management Console либо его скачать. Следующая вкладка это Configuration. Здесь мы видим информацию по железу, по движку. Из основных это вы видите версию движка 8.0.28. Также видите, что у нас есть REN, который мы можем скопировать. Информация о том, когда база данных была создана. Мы видим также информацию, какой тип инстанца у нас, T3 micro. Количество ядер процессора 2. Количество оперативной памяти 1 гигабайт. Также видим информацию, что основной пользователь называется admin. Что multi-AZ функционал не включен. Шифрование включено. Мы используем AWS KMS key сервиса RDS. У нас storage это General Purpose SSD на 20 гигабайтов. То есть вся необходимая информация, она может быть найдена в AWS Management Console. Следующая вкладка это Maintenance and Backups. Здесь мы видим, что есть отдельная секция maintenance, она включена. Она говорит о том, что мы можем указать некоторый промежуток времени. Указать расписание. И в рамках этого времени AWS самостоятельно будет устанавливать обновление базы данных. Патчи безопасности и так далее. Это относится только к минорной версии базы данных. Если мы говорим про мажорную версию, то это очень большое обновление. Ее нужно будет проделывать отдельно. Здесь только информация про апгрейд минорных версий баз данных. Также мы видим в следующей секции pending maintenance не одной записи. Это говорит о том, что мы сейчас используем самую последнюю версию движка MySQL. Следующая секция это Backup and Snapshots. В секции Backup информация включена ли у нас выкопирование. Также информация когда, как часто происходят бэкапы. И в секции Snapshots мы можем увидеть все автоматически вручную созданные бэкапы. Сейчас у нас один единственный снапшот, который был создан в момент создания базы данных. На который мы в любой момент можем откатиться. Если вам необходимо изменить некоторые настройки, в том числе и настройки расписания бэкапов, то вы это можете сделать используя кнопку modify в верхней правой части страницы. Откроется очень похожая страница, которую мы вводили ранее при создании базы данных. И вам необходимо в случае бэкапов спозиционироваться на соответствующую секцию и ввести необходимые для вас входные данные. Здесь вы видите мы можем указать частоту создания бэкапов. На текущий момент это 7, то есть каждые 7 дней мы создаем бэкап. Также мы видим, что у нас настроено временное окно, когда может происходить создание бэкапов. Создание бэкапа не требует остановки баз данных, но в момент создания вы можете почувствовать некоторую замедленную работу баз данных. То есть создание бэкапов также дает нагрузку на железо и не рекомендуется выставлять временное окно в то время, когда у вас пиковые нагрузки. Здесь вы можете выбрать время начала, а также длительность временного окна. Как только вы введете изменения, вы увидите в соответствующей секции summary of modification все детали того, какие изменения произошли. На примере изменения настроек бэкапов мы видим, что у нас поменялся backup window с текущего значения на новое значение. И у нас есть два варианта применения этих изменений. Первый вариант это дождаться следующего maintenance window, когда мы можем устанавливать минорные версии обновления движка, либо использовать опцию apply immediately, что может быть нежелательно в продакшн среде, но для dev environment, чтобы не терять время. И так как мы знаем, что ничего критического не произойдет, если мы применим изменения сразу, то мы можем воспользоваться опцией apply immediately и нажать на кнопку modify db instance. Мы с вами переходим ко второй части нашего сегодняшнего демо и будем создавать ретре-плико. Для этого необходимо в верхней правой части нажать на кнопку actions в выпадающем списке выбрать опцию create read replica. У нас направлено такую же страницу для ввода входных данных, отличается только первая секция. Здесь необходимо выбрать основной баз данных, а также ввести название инстенса баз данных, который является read-репликой. Все остальные настройки, они точно такие же, как у основной базы данных, при необходимости вы можете ввести правки. Сам в конце будет кнопка create read replica, нам необходимо будет ее нажать и начнется создание инстенса read-реплики. Также вы увидите, что статус для основной базы данных поменялся на modifying, так как она уже становится кластером, у нас уже в кластере два инстенса, один primary, другой replica. Также вы в столбце роль видите, что они соответствующие отмечены. Через некоторое время оба инстенса переходят в состояние available, давайте теперь выберем по очереди каждую базу данных и посмотрим некоторые детали. Если вы выберете основную базу данных, то endpoint не поменялся, остается таким же, вы можете его использовать для операции чтения, так и для записи. Если вы прокрутите чуть ниже, отдельно есть секция replication, где находятся два инстенса, основной и replica. Также видите, что для реплики в столбце replication state указано replicating, то есть он активирован и репликация также активирована. Если мы выберем instance read replicas, то в секции endpoint мы видим, что URL отличается, таким образом вы можете ее использовать для ваших операций чтения. И нагрузка уже пойдет на read replicas и вы таким образом сможете разгрузить вашу основную базу данных. На этом мы добрались до конца нашей сегодняшней сессии, я очень надеюсь, что вы получили более полное представление о работе сервиса Amazon RDS. Спасибо за внимание, увидимся с вами на следующих наших активностях.

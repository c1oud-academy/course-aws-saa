WEBVTT

00:00:00.000 --> 00:00:06.660
Добрый день, уважаемые студенты!
Я рад вас всех видеть на очередной сессии Демо.

00:00:06.660 --> 00:00:13.560
Тема Демо - функционал Transfer Acceleration
в сервисе Amazon S3. Итак, давайте начнем.

00:00:13.560 --> 00:00:21.655
Мы начинаем с основной страницы AWS Management
Console. Нам необходимо перейти на сервис

00:00:21.679 --> 00:00:29.588
Amazon S3, поэтому мы можем воспользоваться
блоком Recently Visited, если вы недавно

00:00:29.612 --> 00:00:37.614
посещали сервис S3, либо ввести S3 в строке
поиска сервисов. Как только вы введете S3,

00:00:37.638 --> 00:00:45.640
отобразится список сервисов. Обычно S3
выходит самым первым. Давайте на него перейдем.

00:00:45.640 --> 00:00:51.642
Как только мы перейдем по ссылке, мы
окажемся на главной странице сервиса

00:00:51.666 --> 00:00:57.417
S3, отобразится список всех 
существующих бакетов. Давайте как пример

00:00:57.441 --> 00:01:03.569
возьмем бакет c1oud-academy-demo-s3-versioning,
в котором мы работали на

00:01:03.593 --> 00:01:09.720
предыдущем Демо, и попробуем для
него активировать Transfer Acceleration.

00:01:09.720 --> 00:01:16.720
Нам необходимо нажать на название этого
бакета, чтобы открыть главную страницу S3 бакета,

00:01:16.720 --> 00:01:24.880
после чего необходимо перейти на вкладку 
Properties. Здесь необходимо прокрутить чуть ниже,

00:01:24.880 --> 00:01:32.720
в нижней части будет секция Transfer Acceleration.
Вы видите, что на текущий момент она отключена,

00:01:32.720 --> 00:01:38.800
в состоянии Disabled, и чтобы ее включить,
нам необходимо нажать на кнопку Edit.

00:01:38.800 --> 00:01:47.080
Нас направят на отдельную страницу, и
необходимо для подсекции Transfer Acceleration

00:01:47.080 --> 00:01:55.640
указать значение Enabled. Как только мы это
проделаем, необходимо нажать на кнопку Save Changes,

00:01:55.640 --> 00:02:02.320
мы вернемся обратно на вкладку Properties нашего S3
бакета, и увидим, что в секции Transfer Acceleration

00:02:02.320 --> 00:02:10.680
сама опция сейчас включена, стоит значение Enabled.
Также вы видите Accelerated Endpoint,

00:02:10.680 --> 00:02:16.960
это тот Endpoint, который необходимо использовать
для загрузки ваших данных с использованием

00:02:16.960 --> 00:02:25.080
функционала Transfer Acceleration. Теперь 
я бы хотел показать некоторый инструмент,

00:02:25.080 --> 00:02:31.080
который позволяет наглядно увидеть преимущество
Transfer Acceleration. Для этого необходимо перейти

00:02:31.080 --> 00:02:38.200
в любой поисковик и ввести AWS Transfer Acceleration
Tool. Первая нерекламная ссылка, это та ссылка,

00:02:38.200 --> 00:02:44.640
которая нам нужна. Давайте на нее перейдем.
Вы увидите следующую страницу, и как только вы

00:02:44.640 --> 00:02:53.040
ее откроете, начнется загрузка некоторого
тестового файла в регионы AWS. Самым первым он это

00:02:53.040 --> 00:02:58.560
проделывает для региона North Virginia, это
самый главный регион. Вначале он пробует загрузить

00:02:58.560 --> 00:03:07.000
файл напрямую, далее этот файл пытается загрузить
через Accelerated Transfer. Немного подождав,

00:03:07.000 --> 00:03:12.960
мы можем увидеть результат и видим, что
используя функционал Accelerated Transfer,

00:03:12.960 --> 00:03:25.760
мы загружаем файл в регион North Virginia на 77%
быстрее. Я остановлю это видео и вернусь после того,

00:03:25.760 --> 00:03:32.360
как подобная загрузка отработает для
всех регионов AWS. После чего мы вместе

00:03:32.360 --> 00:03:42.120
проанализируем, как же оно сработало для других
регионов. Итак, загрузка в двух различных вариантах

00:03:42.120 --> 00:03:48.480
отработала для всех регионов. Давайте смотреть
на результаты. Для San Francisco, который находится

00:03:48.480 --> 00:03:58.720
в Северной Америке, она отработала на 126% 
быстрее. Если сравнивать с Frankfurt,

00:03:58.720 --> 00:04:05.480
который находится в Европе, относительно ближе 
к моему региону, то Accelerated Transfer дал

00:04:05.480 --> 00:04:12.332
небольшой прирост, это 21%.
Вы можете подумать, что передача файлов

00:04:12.356 --> 00:04:19.208
на S3 влияет на географическое расположение.
Но на самом деле это не

00:04:19.232 --> 00:04:26.084
зависит от географического
расположения, больше зависит от того, как

00:04:26.108 --> 00:04:32.960
проложены кабели, по которым у
нас передаются данные по всему миру.

00:04:32.960 --> 00:04:41.280
Давайте посмотрим другой пример. Это регион Tokyo
и регион Seoul. Они оба находятся в одном и том же

00:04:41.280 --> 00:04:48.920
географическом регионе, но при этом вы видите,
как отличается загрузка напрямую на S3 Bucket в

00:04:48.920 --> 00:04:54.880
этих регионах, а также с использованием
функционала Accelerated Transfer. Для Tokyo оно дает

00:04:54.880 --> 00:05:03.520
прирост 77%, также как и для North Virginia.
При этом для Seoul оно чуть ли не на 300% работает

00:05:03.520 --> 00:05:13.360
быстрее. Таким образом вы видите, что географическая
отдаленность не влияет в случае передачи

00:05:13.360 --> 00:05:22.280
данных на S3. Давайте посмотрим другой пример.
Вы видите пример Sydney и Sao Paulo, которые

00:05:22.280 --> 00:05:30.680
находятся на другом континенте. Мы видим, что
есть прирост 150 и 200% через Accelerated Transfer.

00:05:30.680 --> 00:05:39.680
Другой пример, это регион Canada Central,
где прироста практически нет и загрузка

00:05:39.680 --> 00:05:48.160
напрямую ничем не отличается от загрузки через
Accelerated Transfer. Другой пример, это

00:05:48.160 --> 00:05:59.840
регион Mumbai, он находится на континенте Евразия.
Географически она ближе, чем другие отмеченные

00:05:59.840 --> 00:06:07.720
регионы, тем не менее видим, что через Accelerated
Transfer порядка на 250% загрузка происходит

00:06:07.720 --> 00:06:20.800
быстрее. Последние два примера, которые хотелось
бы отметить это регион London и Paris. Мы видим,

00:06:20.800 --> 00:06:31.320
что прирост скорости он минимальный и загрузка
напрямую и загрузка через Accelerated Transfer,

00:06:31.320 --> 00:06:40.480
она ничем не отличается. Это говорит о том, что
те регионы, которые не дают прирост в скорости,

00:06:40.480 --> 00:06:50.120
находятся достаточно близко не с точки
зрения физически, географически, а с точки зрения

00:06:50.120 --> 00:06:58.320
передачи данных. Обратный вывод, это
то, что в тех регионах, которые находятся

00:06:58.320 --> 00:07:07.080
дальше от нас с точки зрения передачи данных,
мы видим как хорошо работает edge сервера сервиса

00:07:07.080 --> 00:07:13.920
Amazon CloudFront. Это ускоряет загрузку,
так как мы загружаем на ближайший сервер до нас,

00:07:13.920 --> 00:07:23.220
а дальше уже локально внутри глобальной сети
Amazon, она передается до конечного региона намного

00:07:23.220 --> 00:07:32.960
быстрее и мы получаем прирост в скорости. На этом
мы завершаем наше сегодняшнее Демо. Я очень надеюсь,

00:07:32.960 --> 00:07:39.080
что вы получили более полное представление,
что же такое Transfer Acceleration сервиса Amazon S3.

00:07:39.080 --> 00:07:45.000
Спасибо за внимание, увидимся с
вами на следующих наших активностях.

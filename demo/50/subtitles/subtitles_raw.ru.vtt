WEBVTT

00:00:00.000 --> 00:00:06.660
Добрый день, уважаемые студенты! Я рад вас всех видеть на очередной сессии демо. Тема

00:00:06.660 --> 00:00:13.560
сегодняшнего демо это функционал Transfer Acceleration в сервисе Amazon S3. Итак, давайте начнем.

00:00:13.560 --> 00:00:24.040
Мы начинаем наше сегодняшнее демо с основной страницы AWS Management Консоли. Нам необходимо

00:00:24.040 --> 00:00:30.240
перейти на сервис Amazon S3, поэтому мы можем воспользоваться блоком Recently Visited,

00:00:30.240 --> 00:00:39.720
если вы недавно посещали сервис S3, либо ввести S3 в строке поиска сервисов. Как только вы введете

00:00:39.720 --> 00:00:45.640
S3, отобразится список сервисов. Обычно S3 выходит самым первым. Давайте на нее перейдем.

00:00:45.640 --> 00:00:55.360
Как только мы перейдем по ссылке, мы окажемся на главной странице сервиса S3, отобразится список

00:00:55.360 --> 00:01:03.040
всех существующих баккетов. Давайте как пример возьмем баккет Cloud Academy demo S3 version,

00:01:03.040 --> 00:01:09.720
в котором мы работали на предыдущем демо, и попробуем для него активировать Transfer Acceleration.

00:01:09.720 --> 00:01:16.720
Нам необходимо нажать на название этого баккета, чтобы открыть главную страницу S3 баккета,

00:01:16.720 --> 00:01:24.880
после чего необходимо перейти на вкладку Properties. Здесь необходимо прокрутить чуть ниже,

00:01:24.880 --> 00:01:32.720
в нижней части будет секция Transfer Acceleration. Вы видите, что на текущий момент она отключена

00:01:32.720 --> 00:01:38.800
в состоянии disabled, и чтобы ее включить, нам необходимо нажать на кнопку Edit.

00:01:38.800 --> 00:01:47.080
Нас направят на отдельную страницу, и необходимо для подсекции Transfer Acceleration

00:01:47.080 --> 00:01:55.640
указать значение Enable. Как только мы это проделаем, необходимо нажать на кнопку Save Changes,

00:01:55.640 --> 00:02:02.320
мы вернемся обратно на вкладку Properties нашего S3 баккета, и увидим, что в секции Transfer Acceleration

00:02:02.320 --> 00:02:10.680
сама опция сейчас включена, стоит значение Enable. Также вы видите Accelerated Endpoint,

00:02:10.680 --> 00:02:16.960
это тот Endpoint, который необходимо использовать для загружки ваших данных с использованием

00:02:16.960 --> 00:02:25.080
функционала Transfer Acceleration. Теперь я бы вам хотел показать некоторый инструмент,

00:02:25.080 --> 00:02:31.080
который позволяет наглядно увидеть преимущество Transfer Acceleration. Для этого необходимо перейти

00:02:31.080 --> 00:02:38.200
в любой поисковик и ввести AWS Transfer Acceleration Tool. Первая нерекламная ссылка, это та ссылка,

00:02:38.200 --> 00:02:44.640
которая нам нужна. Давайте на нее перейдем. Вы увидите следующую страницу, и как только вы

00:02:44.640 --> 00:02:53.040
ее откроете, начнется загрузка некоторого тестового файла в регионы AWS. Самым первым он это

00:02:53.040 --> 00:02:58.560
проделывает для региона North Virginia, это самый главный регион. Вначале он пробует загрузить

00:02:58.560 --> 00:03:07.000
файл напрямую, далее этот же файл он пытается загрузить через Accelerated Transfer. Немного подождав,

00:03:07.000 --> 00:03:12.960
мы можем увидеть результат и видим, что используя функционал Accelerated Transfer,

00:03:12.960 --> 00:03:25.760
мы загружаем файл в регион North Virginia на 77% быстрее. Я остановлю это видео и вернусь после того,

00:03:25.760 --> 00:03:32.360
как подобная загрузка отработает для всех регионов AWS. После чего мы сядем и вместе

00:03:32.360 --> 00:03:42.120
проанализируем, как же оно сработало для других регионов. Итак, загрузка в двух различных вариантах

00:03:42.120 --> 00:03:48.480
отработала для всех регионов. Давайте смотреть на результаты. Для Сан-Франциско, который находится

00:03:48.480 --> 00:03:58.720
в континенте Северная Америка, она отработала на 126% быстрее. Если сравнивать с Франкфуртом,

00:03:58.720 --> 00:04:05.480
который находится в Европе, относительно ближе к моему региону, то Accelerated Transfer дал

00:04:05.480 --> 00:04:19.160
небольшой прирост, это 21%. Мы видим, что передача файлов на S3 влияет на географическое расположение.

00:04:19.160 --> 00:04:25.600
Вы можете так подумать, но на самом деле это не зависит от географического расположения,

00:04:25.600 --> 00:04:32.960
больше зависит от того, как проложены кабели, по которым у нас передаются данные по всему миру.

00:04:32.960 --> 00:04:41.280
Давайте посмотрим другой пример. Это регион Токио и регион Сеул. Они оба находятся в одном и том же

00:04:41.280 --> 00:04:48.920
географическом регионе, но при этом вы видите, как отличается загрузка напрямую на S3 Bucket в

00:04:48.920 --> 00:04:54.880
этих регионах, а также с использованием функционала Accelerated Transfer. Для Токио оно дает

00:04:54.880 --> 00:05:03.520
прирост 77%, также как и для Норс-Верженья. При этом для Сеула оно чуть ли не на 300% работает

00:05:03.520 --> 00:05:13.360
быстрее. Таким образом вы видите, что географическая отдаленность, она не влияет в случае передачи

00:05:13.360 --> 00:05:22.280
данных на S3. Давайте посмотрим другой пример. Вы видите пример Сидней и Сан-Павло, которые

00:05:22.280 --> 00:05:30.680
находятся на другом континенте. Мы видим, что есть прирост 150 и 200% через Accelerated Transfer,

00:05:30.680 --> 00:05:39.680
но другой пример это Канада, регион Канада Централ, где прироста практически нет и загрузка

00:05:39.680 --> 00:05:48.160
напрямую ничем не отличается от загрузки через Accelerated Transfer. Другой противоположный пример это

00:05:48.160 --> 00:05:59.840
регион Мумбай, он находится на континенте Евразия. Географически она ближе, чем другие отмеченные

00:05:59.840 --> 00:06:07.720
регионы, но тем не менее мы видим, что через Accelerated Transfer порядка на 250% загрузка происходит

00:06:07.720 --> 00:06:20.800
быстрее. И последние два примера, которые хотелось бы отметить это регион Лондон и Париж. Мы видим,

00:06:20.800 --> 00:06:31.320
что прирост скорости он минимальный и загрузка напрямую и загрузка через Accelerated Transfer,

00:06:31.320 --> 00:06:40.480
она ничем не отличается. Это говорит о том, что те регионы, которые не дают прирост в скорости,

00:06:40.480 --> 00:06:50.120
находятся достаточно близко не с точки зрения физически, географически, а с точки зрения

00:06:50.120 --> 00:06:58.320
передачи данных. И обратный момент, обратный вывод, это то, что в тех регионах, которые находятся

00:06:58.320 --> 00:07:07.080
дальше от нас с точки зрения передачи данных, мы видим как хорошо работает edge сервера сервиса

00:07:07.080 --> 00:07:13.920
Amazon CloudFront и действительно ускоряет загрузку, так как мы загружаем на ближайший сервер до нас,

00:07:13.920 --> 00:07:23.220
а дальше уже локально внутри глобальной сети Amazon, она передается до конечного региона намного

00:07:23.220 --> 00:07:32.960
быстрее и мы получаем прирост в скорости. На этом мы завершаем наше сегодняшнее демо. Я очень надеюсь,

00:07:32.960 --> 00:07:39.080
что вы получили более полное представление, что же такое Transfer Acceleration сервиса Amazon S3.

00:07:39.080 --> 00:07:53.800
Спасибо за внимание, увидимся с вами на следующих наших активностях.

WEBVTT

00:00:00.000 --> 00:00:06.000
Добрый день, уважаемые студенты! Я рад вас всех видеть на очередной сессии демо.

00:00:06.000 --> 00:00:12.000
Тема сегодняшнего демо – это изучение функционала Вершенинг у сервиса Amazon S3.

00:00:12.000 --> 00:00:14.000
Итак, давайте начнем.

00:00:16.000 --> 00:00:22.000
Начинаем мы наше демо с главной страницы AWS Management Console.

00:00:22.000 --> 00:00:26.000
Здесь нам необходимо в строке поиска сервисов ввести S3,

00:00:26.000 --> 00:00:30.000
и вы в выдаче увидите нужный нам сервис. Давайте на него перейдем.

00:00:30.000 --> 00:00:36.000
Как только мы нажмем на эту ссылку, мы окажемся на главной странице сервиса Amazon S3.

00:00:36.000 --> 00:00:39.000
Здесь вы видите список всех существующих бакетов.

00:00:39.000 --> 00:00:46.000
В нашем случае мы будем создавать новый бакет, поэтому нажмем на кнопку Create Bucket в правой части экрана.

00:00:46.000 --> 00:00:55.000
Как только вы на нее нажмете, нас перенаправит на страницу создания нового S3 бакета, необходимо ввести некоторые входные данные.

00:00:55.000 --> 00:01:01.000
Первым делом нам необходимо ввести Bucket Name. Напоминаю, что он должен быть уникальным глобально.

00:01:01.000 --> 00:01:05.000
Далее мы указываем регион, в котором будут храниться наши данные.

00:01:05.000 --> 00:01:15.000
Чуть ниже у нас есть настройки Object Ownership. Это так называемый ACL, который является старым функционалом.

00:01:15.000 --> 00:01:23.000
Сейчас он полностью заменен IAM. При необходимости его можно включить, но рекомендуется его отключать.

00:01:23.000 --> 00:01:36.000
Чуть ниже есть функционал Block Public Access. По умолчанию флажочек включен, что говорит о том, что мы блокируем полностью публичный доступ к нашему бакету.

00:01:36.000 --> 00:01:43.000
Далее, если мы прокрутим страницу чуть ниже, мы увидим секцию с настройками Bucket Versioning.

00:01:43.000 --> 00:01:50.000
То есть до создания самого бакета мы можем указать необходимые параметры касательно версионинга.

00:01:50.000 --> 00:02:02.000
Нам необходимо выбрать опцию Enable. Следующая секция это теги. Здесь мы можем указать user defined, то есть определенные пользователи.

00:02:02.000 --> 00:02:11.000
Теги ключ значения. Давайте скопируем название нашего бакета и положим под ключом Name.

00:02:11.000 --> 00:02:23.000
Также мы можем выбрать шифрование. По умолчанию включено SSE S3, то есть это Server Side Encryption дефолтовый от Amazon S3.

00:02:23.000 --> 00:02:32.000
Есть другой вариант использовать отдельный сервис специально предназначенный для шифрования. Это Amazon QMS.

00:02:32.000 --> 00:02:43.000
Если нам необходимо использовать QMS, нам необходимо выбрать вторую опцию. Сейчас, чтобы не терять время на этих деталях, мы выберем первый вариант.

00:02:43.000 --> 00:02:50.000
Если мы прокрутим чуть ниже, мы увидим, что у нас есть последняя секция Advanced Settings.

00:02:50.000 --> 00:03:00.000
Здесь можно выбрать менее популярные варианты настройки S3 Bucket. На них мы подробнее останавливаться не будем в рамках нашего сегодняшнего демо.

00:03:00.000 --> 00:03:10.000
В самом низу экрана нажмем на кнопку Create Bucket. Как только вы на нее нажмете, нас перенаправит на страницу со списком всех существующих бакетов.

00:03:10.000 --> 00:03:19.000
Вы увидите наш бакет в списке. Увидите вверху экрана соответствующее сообщение с зеленым фоном о том, что бакет был успешно создан.

00:03:19.000 --> 00:03:30.000
Следующий шаг. Сейчас нам необходимо нажать на название нового S3 Bucket для того, чтобы провалиться внутрь этого бакета и посмотреть его детали.

00:03:30.000 --> 00:03:41.000
Как только мы попадем на основную страницу нового созданного S3 Bucket, мы с вами увидим различные вкладки.

00:03:41.000 --> 00:03:50.000
Сейчас мы находимся на первой вкладке Objects. Вы видите, что у нас 0 объектов и бакет полностью пустой.

00:03:50.000 --> 00:03:59.000
Давайте перейдем на вторую вкладку Properties. Здесь вы увидите различные настройки S3 Bucket, в том числе Bucket version.

00:03:59.000 --> 00:04:08.000
Вы видите сейчас, что он включен. Тем не менее, давайте на кнопку Edit нажмем и посмотрим, что же он нам отобразит.

00:04:08.000 --> 00:04:15.000
Вы видите, что у нас есть два варианта. Первый это Enable, то есть он сейчас уже включен, поэтому флажок сейчас на этой опции.

00:04:15.000 --> 00:04:22.000
Также есть другая опция Suspend. Как мы ранее с вами говорили на лекции, есть три состояния.

00:04:22.000 --> 00:04:29.000
Первое состояние это Disabled, самое первоначальное. После чего есть вариант Enable и третий вариант Suspended.

00:04:29.000 --> 00:04:39.000
Это когда мы один раз включили и после того, как один раз включается версионик у Bucket, его полностью отключить невозможно.

00:04:39.000 --> 00:04:47.000
Его можно только приостановить. Отлично. Давайте начнем наш эксперимент. Создадим локально тестовый файл.

00:04:47.000 --> 00:04:54.000
Пусть он будет называться TestFile.txt и заполним его следующим значением. This is version 1.

00:04:54.000 --> 00:05:03.000
После этого нам необходимо загрузить этот файл в S3 Bucket. Для этого мы перейдем во вкладку Objects, нажмем на кнопку Upload,

00:05:03.000 --> 00:05:11.000
нас направит на соответствующую страницу. Мы можем загружать как файлы, так и папки. В нашем случае это один-единственный файл.

00:05:11.000 --> 00:05:19.000
Поэтому нажмем на кнопку Add Files. Откроется окно выбора файла. Здесь вы можете выбрать один или несколько файлов.

00:05:19.000 --> 00:05:30.000
Выбираем наш TestFile.txt и нажимаем на кнопку Open. Как только вы на него нажмете, вы увидите отобразиться в списке наш единственный файл,

00:05:30.000 --> 00:05:39.000
который подготовлен к загрузке. В нижней части страницы необходимо нажать на кнопку Upload.

00:05:39.000 --> 00:05:49.000
Как только вы на него нажмете, нас перенаправит на следующую страницу, где будет отображаться список всех файлов и папок для загрузки,

00:05:49.000 --> 00:05:59.000
состояние по каждому объекту, а также после завершения загрузки всех файлов вы увидите вверху экрана специальное сообщение зеленым фоном о том,

00:05:59.000 --> 00:06:09.000
что процесс загрузки полностью успешно завершен. Здесь мы закончили, поэтому вверху справа есть кнопка Close.

00:06:09.000 --> 00:06:18.000
Давайте на нее нажмем и вернемся обратно на основную страницу нашего бакета. Здесь вы видите, что у нас появился наш файл.

00:06:18.000 --> 00:06:26.000
Давайте ее выберем и нажмем на кнопку Open, чтобы открыть ее содержание. Нас перенаправит на новую страницу,

00:06:26.000 --> 00:06:36.000
в котором будет отображаться содержание нашего txt файла, а именно This is version 1.

00:06:36.000 --> 00:06:46.000
Мы продолжаем наш эксперимент. Давайте теперь изменим наш файл и запишем содержание This is version 2.

00:06:46.000 --> 00:07:02.000
Захраним и загрузим на S3Bucket по тем же действиям, которые мы проделали ранее. Вы увидите, что обновится Last Modified столбец для нашего файла TestFile.txt.

00:07:02.000 --> 00:07:13.000
Теперь нам необходимо нажать на переключатель Show versions в верхней части экрана. После того, как вы на нее нажмете, вы увидите все версии всех файлов.

00:07:13.000 --> 00:07:27.000
В нашем случае это один единственный файл и две ее версии. Вы видите, что version ID отличается, хотя сам key, то есть путь до этого файла, он совпадает.

00:07:27.000 --> 00:07:38.000
Отлично. Теперь давайте выберем последнюю версию нашего файла и нажмем на кнопку Open, чтобы проверить, действительно ли последняя версия загрузилась.

00:07:38.000 --> 00:07:48.000
Мы видим, что в новой вкладке браузера открывается наш TXT файл с необходимым нам содержанием.

00:07:48.000 --> 00:08:03.000
Если мы вернемся обратно на наш S3Bucket и нажмем на название файла, мы провалимся на специальную страницу нашего объекта. Это главная страница объекта S3.

00:08:03.000 --> 00:08:17.000
Вы увидите, что здесь есть несколько вкладок. Нас интересует третья вкладка versions, по нажатию которой направляет нас на специальную страницу, где отображаются все версии этого файла.

00:08:17.000 --> 00:08:24.000
Все верно, отображаются две версии, которые мы загрузили и дополнительная информация, некоторые metadata.

00:08:24.000 --> 00:08:34.000
Что мы делаем дальше? Мы возвращаемся обратно к нашему S3Bucket на ее основную страницу.

00:08:34.000 --> 00:08:48.000
Здесь нам необходимо нажать на флажок Show versions еще раз, для того чтобы переключиться на самые актуальные версии файлов и не видеть предыдущие версии.

00:08:48.000 --> 00:08:53.000
После этого нам необходимо выбрать наш файл и нажать на кнопку Delete.

00:08:53.000 --> 00:09:00.000
Нас направят на отдельную страницу, где необходимо подтвердить, что мы действительно удаляем этот файл.

00:09:00.000 --> 00:09:05.000
Необходимо в поле ввести Delete и нажать на кнопку Delete objects.

00:09:05.000 --> 00:09:13.000
Как только вы это сделаете, вы увидите соответствующее сообщение, а также в списке всех объектов мы увидим, что там пусто.

00:09:13.000 --> 00:09:18.000
Теперь давайте мы нажмем обратно на переключатель Show versions.

00:09:18.000 --> 00:09:31.000
Здесь мы увидим, что появилась третья версия, типом которой является DeleteMarker и у нее свой version ID.

00:09:31.000 --> 00:09:34.000
Что же это означает?

00:09:34.000 --> 00:09:49.000
Это означает, что история сохранилась, все версии файла на месте и DeleteMarker означает, что в текущем состоянии бакета этого файла не существует.

00:09:49.000 --> 00:10:00.000
Что мы сделаем? Давайте теперь последнюю версию, то есть наш DeleteMarker, и вторую версию нашего файла выделим для того, чтобы их удалить.

00:10:00.000 --> 00:10:05.000
После чего нажмем на кнопку Delete.

00:10:05.000 --> 00:10:10.000
Как только мы нажмем на кнопку Delete, нас направляет на страницу подтверждения удаления.

00:10:10.000 --> 00:10:21.000
Здесь отображается список наших файлов для удаления и нам необходимо в нижней части прописать Permanently delete и после этого станет активна кнопка Delete objects.

00:10:21.000 --> 00:10:26.000
Давайте это сделаем и нажмем на кнопку Delete objects.

00:10:26.000 --> 00:10:37.000
Как только мы ее нажимаем, мы уже видим в списке файлов с отображением версии, у нас остался один файл с единственной версией.

00:10:37.000 --> 00:10:45.000
Эта версия как раз соответствует самой первой версии этого файла, отображается как текущая.

00:10:45.000 --> 00:10:52.000
Давайте ее выделим и нажмем на кнопку Open, чтобы проверить действительно ли это самая первая версия файла.

00:10:52.000 --> 00:11:13.000
Да, действительно это так. Мы видим, что мы смогли, используя функционал версионинга, посмотреть как это работает и восстановили удаленные файлы и более того вернули на предыдущую версию.

00:11:13.000 --> 00:11:23.000
Таким образом вы понимаете, что с включенным версиями ваши файлы всегда будут на месте, всегда можно будет вернуть в нужное состояние и они точно не потеряются.

00:11:23.000 --> 00:11:36.000
На этом мы подошли к концу нашей сегодняшней сессии. Я надеюсь вы получили более полное представление о функционале версионинга внутри сервиса Amazon S3.

00:11:36.000 --> 00:11:43.000
Спасибо за внимание, увидимся с вами на следующих наших активностях.
WEBVTT

00:00:00.000 --> 00:00:06.000
Добрый день, уважаемые студенты!
Рад вас видеть на очередной сессии Демо.

00:00:06.000 --> 00:00:12.000
Тема сегодняшнего Демо – это изучение
функционала Versioning у сервиса Amazon S3.

00:00:12.000 --> 00:00:22.000
Итак, давайте начнем. Начинаем мы наше
демо с главной страницы AWS Management Console.

00:00:22.000 --> 00:00:25.988
Здесь нам необходимо в строке
поиска сервисов ввести S3, и вы

00:00:26.012 --> 00:00:30.000
в выдаче увидите нужный нам сервис.
Давайте на него перейдем.

00:00:30.000 --> 00:00:36.000
Как только мы нажмем на эту ссылку, мы
окажемся на главной странице сервиса Amazon S3.

00:00:36.000 --> 00:00:39.000
Здесь вы видите список
всех существующих бакетов.

00:00:39.000 --> 00:00:42.488
В нашем случае мы будем
создавать новый бакет, поэтому

00:00:42.512 --> 00:00:46.000
нажмем на кнопку Create
Bucket в правой части экрана.

00:00:46.000 --> 00:00:50.593
Как только вы на нее нажмете, нас
перенаправит на страницу создания

00:00:50.617 --> 00:00:55.000
нового S3 бакета, необходимо
ввести некоторые входные данные.

00:00:55.000 --> 00:01:01.000
Первым делом нам необходимо ввести Bucket Name.
Напоминаю, что он должен быть уникальным глобально.

00:01:01.000 --> 00:01:05.000
Далее мы указываем регион, в
котором будут храниться наши данные.

00:01:05.000 --> 00:01:09.988
Чуть ниже у нас есть настройки 
Object Ownership. Это так

00:01:10.012 --> 00:01:15.000
называемый ACL, который
является старым функционалом.

00:01:15.000 --> 00:01:23.000
Сейчас он полностью заменен IAM. При необходимости
можно включить, но рекомендуется его отключать.

00:01:23.000 --> 00:01:29.488
Чуть ниже есть функционал Block Public Access.
По умолчанию флажочек включен,

00:01:29.512 --> 00:01:36.000
что говорит о том, что мы полностью
блокируем публичный доступ к нашему бакету.

00:01:36.000 --> 00:01:43.000
Далее, если мы прокрутим страницу чуть ниже,
мы увидим секцию с настройками Bucket Versioning.

00:01:43.000 --> 00:01:50.000
То есть до создания самого бакета мы можем указать
необходимые параметры касательно versioning-а.

00:01:50.000 --> 00:01:55.594
Нам необходимо выбрать опцию Enable.
Следующая секция - это теги.

00:01:55.618 --> 00:02:02.000
Здесь мы можем указать user defined,
то есть определенные пользователи.

00:02:02.000 --> 00:02:11.000
Теги - ключ значение. Давайте скопируем название
 нашего бакета и вставим под ключом Name.

00:02:11.000 --> 00:02:16.698
Также мы можем выбрать шифрование.
По умолчанию включено SSE S3,

00:02:16.722 --> 00:02:23.000
то есть это Server Side
Encryption дефолтовый от Amazon S3.

00:02:23.000 --> 00:02:27.042
Есть другой вариант -
использовать отдельный сервис

00:02:27.066 --> 00:02:32.000
специально предназначенный
для шифрования - это Amazon KMS.

00:02:32.000 --> 00:02:37.488
Если нам необходимо использовать KMS,
нам необходимо выбрать вторую опцию.

00:02:37.512 --> 00:02:43.000
Сейчас, чтобы не терять время на этих
деталях, мы выберем первый вариант.

00:02:43.000 --> 00:02:50.000
Если мы прокрутим чуть ниже, мы увидим, что
у нас есть последняя секция Advanced Settings.

00:02:50.000 --> 00:02:54.988
Здесь можно выбрать менее популярные
варианты настройки S3 Bucket. На них

00:02:55.012 --> 00:03:00.000
мы подробнее останавливаться не
будем в рамках нашего сегодняшнего демо.

00:03:00.000 --> 00:03:04.785
В самом низу экрана нажмем на кнопку 
Create Bucket. Как только вы на нее

00:03:04.809 --> 00:03:10.000
нажмете, нас перенаправит на страницу
со списком всех существующих бакетов.

00:03:10.000 --> 00:03:14.591
Вы увидите наш бакет в списке.
Увидите вверху экрана соответствующее

00:03:14.615 --> 00:03:19.000
сообщение с зеленым фоном о
том, что бакет был успешно создан.

00:03:19.000 --> 00:03:24.488
Следующий шаг - сейчас нам необходимо
нажать на название нового S3 Bucket

00:03:24.512 --> 00:03:30.000
для того, чтобы провалиться внутрь
этого бакета и посмотреть его детали.

00:03:30.000 --> 00:03:34.923
Как только мы попадем на
основную страницу нового

00:03:34.947 --> 00:03:41.000
созданного S3 Bucket, мы с
вами увидим различные вкладки.

00:03:41.000 --> 00:03:50.000
Сейчас мы на первой вкладке Objects. Вы видите,
что у нас нет объектов и бакет полностью пустой.

00:03:50.000 --> 00:03:54.488
Давайте перейдем на вторую 
вкладку Properties. Здесь вы увидите

00:03:54.512 --> 00:03:59.000
различные настройки S3 Bucket,
в том числе Bucket versioning.

00:03:59.000 --> 00:04:03.214
Вы видите сейчас, что он включен.
Тем не менее, давайте

00:04:03.238 --> 00:04:08.000
нажмем на кнопку Edit и
посмотрим, что же он нам отобразит.

00:04:08.000 --> 00:04:11.488
Вы видите, что у нас есть два варианта.
Первый - это Enable, то есть он

00:04:11.512 --> 00:04:15.000
сейчас уже включен, поэтому
флажок сейчас на этой опции.

00:04:15.000 --> 00:04:22.000
Также есть другая опция - Suspend. Как мы ранее 
с вами говорили на лекции, есть три состояния.

00:04:22.000 --> 00:04:25.271
Первое состояние - это
Disabled, самое первоначальное.

00:04:25.295 --> 00:04:29.000
После чего есть вариант Enable.
И третий вариант Suspend -

00:04:29.000 --> 00:04:33.468
это когда мы один раз включили
и после того, как один раз

00:04:33.492 --> 00:04:39.000
включается versioning у Bucket, его полностью 
отключить невозможно. Его можно только

00:04:39.000 --> 00:04:47.000
приостановить. Отлично. Давайте начнем наш
эксперимент. Создадим локально тестовый файл.

00:04:47.000 --> 00:04:54.000
Пусть он будет называться test_file.txt и заполним
его следующим значением - This is version 1.

00:04:54.000 --> 00:04:58.488
После этого нам необходимо
загрузить этот файл в S3 Bucket.

00:04:58.512 --> 00:05:03.000
Для этого мы перейдем во вкладку
Objects, нажмем на кнопку Upload,

00:05:03.000 --> 00:05:06.988
нас направит на соответствующую 
страницу. Мы можем загружать как

00:05:07.012 --> 00:05:11.000
файлы, так и папки. В нашем случае 
это один-единственный файл.

00:05:11.000 --> 00:05:14.988
Поэтому нажмем на кнопку Add Files.
Откроется окно выбора файла.

00:05:15.012 --> 00:05:19.000
Здесь вы можете выбрать
один или несколько файлов.

00:05:19.000 --> 00:05:24.488
Выбираем наш test_file.txt и нажимаем
 на кнопку Open. Как только

00:05:24.512 --> 00:05:30.000
вы на него нажмете, отобразится
в списке наш единственный файл,

00:05:30.000 --> 00:05:39.000
который подготовлен к загрузке. В нижней части
страницы необходимо нажать на кнопку Upload.

00:05:39.000 --> 00:05:44.137
Как только вы на него нажмете, нас
перенаправит на следующую страницу,

00:05:44.161 --> 00:05:49.000
где будет отображаться список
всех файлов и папок для загрузки,

00:05:49.000 --> 00:05:53.673
состояние по каждому объекту.
А также после завершения загрузки всех

00:05:53.697 --> 00:05:59.000
файлов вы увидите вверху экрана
специальное сообщение зеленым фоном о том,

00:05:59.000 --> 00:06:03.988
что процесс загрузки
полностью успешно завершен.

00:06:04.012 --> 00:06:09.000
Здесь мы закончили, поэтому
вверху справа есть кнопка Close.

00:06:09.000 --> 00:06:13.488
Давайте на нее нажмем и вернемся
обратно на основную страницу

00:06:13.512 --> 00:06:18.000
нашего бакета. Здесь вы видите, 
что у нас появился наш файл.

00:06:18.000 --> 00:06:22.133
Давайте его выберем и нажмем
на кнопку Open, чтобы открыть

00:06:22.157 --> 00:06:26.000
его содержание. Нас 
перенаправит на новую страницу,

00:06:26.000 --> 00:06:36.000
в котором будет отображаться содержание
нашего txt файла, а именно This is version 1.

00:06:36.000 --> 00:06:46.000
Мы продолжаем эксперимент. Давайте теперь изменим
наш файл и запишем содержание This is version 2.

00:06:46.000 --> 00:06:53.988
Сохраним и загрузим на S3 Bucket по тем
же действиям, которые мы проделали ранее.

00:06:54.012 --> 00:07:02.000
Вы увидите, что обновится Last Modified
столбец для нашего файла test_file.txt.

00:07:02.000 --> 00:07:07.488
Теперь нам необходимо нажать на
переключатель Show versions в верхней части

00:07:07.512 --> 00:07:13.000
экрана. После того, как вы на нее
нажмете, вы увидите все версии всех файлов.

00:07:13.000 --> 00:07:19.988
В нашем случае это один единственный
файл и две ее версии. Вы видите, что

00:07:20.012 --> 00:07:27.000
Version ID отличается, хотя сам key,
то есть путь до этого файла совпадает.

00:07:27.000 --> 00:07:32.268
Отлично. Теперь давайте выберем
последнюю версию нашего файла и нажмем на

00:07:32.292 --> 00:07:38.000
кнопку Open, чтобы проверить,
действительно ли последняя версия загрузилась.

00:07:38.000 --> 00:07:48.000
Мы видим, что в новой вкладке браузера открывается
наш txt файл с необходимым нам содержанием.

00:07:48.000 --> 00:07:54.904
Если мы вернемся обратно на наш S3
Bucket и нажмем на название файла, мы

00:07:54.928 --> 00:08:03.000
попадаем на специальную страницу нашего 
объекта. Это главная страница объекта S3.

00:08:03.000 --> 00:08:09.572
Вы увидите, что здесь есть несколько вкладок.
Нас интересует третья вкладка Versions, по

00:08:09.596 --> 00:08:17.000
нажатию которой направляет нас на специальную
страницу, где отображаются все версии этого файла.

00:08:17.000 --> 00:08:24.000
Все верно, отображаются две версии, которые мы
загрузили и дополнительная информация, metadata.

00:08:24.000 --> 00:08:34.000
Что мы делаем дальше? Мы возвращаемся
обратно к нашему S3 Bucket на основную страницу.

00:08:34.000 --> 00:08:40.715
Здесь нам необходимо нажать на флажок
Show versions еще раз, для того чтобы

00:08:40.739 --> 00:08:48.000
переключиться на самые актуальные
версии файлов и не видеть предыдущие версии.

00:08:48.000 --> 00:08:53.000
После этого нам необходимо выбрать
наш файл и нажать на кнопку Delete.

00:08:53.000 --> 00:09:00.000
Нас направят на отдельную страницу, где необходимо
подтвердить, что мы действительно удаляем файл.

00:09:00.000 --> 00:09:05.000
Необходимо в поле ввести Delete
и нажать на кнопку Delete objects.

00:09:05.000 --> 00:09:09.185
Как только вы это сделаете, вы
увидите соответствующее сообщение,

00:09:09.209 --> 00:09:13.000
а также в списке всех объектов
мы увидим, что там пусто.

00:09:13.000 --> 00:09:18.000
Теперь давайте нажмем обратно
на переключатель Show versions.

00:09:18.000 --> 00:09:31.000
Здесь мы увидим, что появилась третья версия, Type
 является Delete marker и у нее свой Version ID.

00:09:31.000 --> 00:09:39.988
Что же это означает? Это означает, что
история сохранилась, все версии файла на месте

00:09:40.012 --> 00:09:49.000
и Delete marker означает, что в текущем
состоянии бакета этого файла не существует.

00:09:49.000 --> 00:09:56.577
Что мы сделаем? Давайте теперь последнюю
версию, то есть наш Delete marker, и вторую

00:09:56.601 --> 00:10:05.000
версию нашего файла выделим для того, чтобы
их удалить. После чего нажмем на кнопку Delete.

00:10:05.000 --> 00:10:10.000
Как только мы нажмем на кнопку Delete, нас
направляет на страницу подтверждения удаления.

00:10:10.000 --> 00:10:15.488
Здесь отображается список наших файлов
для удаления и нам необходимо в нижней части

00:10:15.512 --> 00:10:21.000
прописать Permanently delete и после
этого станет активна кнопка Delete objects.

00:10:21.000 --> 00:10:26.000
Давайте это сделаем и
нажмем на кнопку Delete objects.

00:10:26.000 --> 00:10:30.877
Как только мы ее нажимаем,
мы уже видим в списке файлов с

00:10:30.901 --> 00:10:37.000
отображением версии, у нас остался
один файл с единственной версией.

00:10:37.000 --> 00:10:45.000
Эта версия как раз соответствует самой первой
версии этого файла и отображается как текущая.

00:10:45.000 --> 00:10:48.128
Давайте ее выделим и
нажмем на кнопку Open, чтобы

00:10:48.152 --> 00:10:52.000
проверить действительно ли
это самая первая версия файла.

00:10:52.000 --> 00:11:02.601
Да, действительно это так. Мы видим, что мы
смогли, используя функционал versioning, посмотреть

00:11:02.625 --> 00:11:13.000
как это работает и восстановили удаленные
файлы и более того вернули на предыдущую версию.

00:11:13.000 --> 00:11:17.803
Таким образом вы понимаете, что с
включенным versioning ваши файлы всегда будут

00:11:17.827 --> 00:11:23.000
на месте, всегда можно будет вернуть в
нужное состояние и они точно не потеряются.

00:11:23.000 --> 00:11:29.488
На этом мы подошли к концу нашей
 сегодняшней сессии. Я надеюсь, вы получили

00:11:29.512 --> 00:11:36.000
более полное представление о функционале
versioning внутри сервиса Amazon S3.

00:11:36.000 --> 00:11:41.000
Спасибо за внимание, увидимся с
вами на следующих наших активностях.

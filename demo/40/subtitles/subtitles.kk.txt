Қайырлы күн, құрметті студенттер! 
Сіздерді келесі Демо сессиясында көргеніме қуаныштымын.
Бүгінгі Демо сессияның тақырыбы - Amazon S3 сервисіндегі Versioning функционалын зерттеу болып табылады.
Сонымен, бастайық.
Біз Демоны AWS Management Console-нің негізгі парақшасынан бастаймыз.
Мұнда сервистерді іздеу жолына S3 деп жазу керек, және сіз бізге қажетті сервисті көресіз.
Сервиске басып, өтейік.
Осы сілтемені басқаннан кейін біз Amazon S3 сервисінің басты парақшасына өтеміз.
Мұнда сіз барлық бар бакеттердің тізімін көресіз.
Біздің жағдайда біз жаңа бакет жасаймыз, сондықтан біз экранның оң жағындағы Create Bucket батырмасын басамыз.
Сіз оны басқаннан кейін бізді жаңа S3 бакетін жасау парақшасына бағытталамыз, кейбір кіріс деректерін енгізуіңіз керек.
Біріншіден, біз Bucket Name енгіземіз.
Естеріңізге сала кетейін, бұл бүкіл әлем бойынша ерекше болуы керек.
Әрі қарай, өз деректеріміз сақталатын аймақты көрсетеміз.
Төменде Object Ownership баптаулары бар.
Бұл ескі функционалдылық болып табылатын ACL.
Қазір ол толығымен IAM-мен алмастырылған.
Қажет болса, қосуға болады, бірақ оны өшіру ұсынылады.
Біраз төменірек Block Public Access функционалы бар.
Әдепкі бойынша, жалауша қосылған, яғни бакетке көпшілікке қол жеткізуді толығымен бұғаттаймыз.
Енді кішкене төменірек айналдырсақ, Bucket Versioning баптаулары бар секцияға өтеміз.
Яғни, бакетті жасамас бұрын, біз versioning-ке қатысты қажетті параметрлерді көрсете аламыз.
Бізге Enable опциясын таңдау керек.
Келесі секция - бұл тегтер.
Мұнда біз user defined, яғни белгілі бір пайдаланушыларды көрсете аламыз.
Тегтер - кілт және мәні.
Біздің бакеттің атын көшіріп, Name кілтіне енгізейік.
Сондай-ақ, біз шифрлауды да таңдай аламыз.
Әдепкі бойынша SSE S3 қосылған, яғни Server Side Encryption.
Тағы бір нұсқа бар - шифрлау үшін арнайы жасалған бөлек сервисті қолдану - бұл Amazon KMS.
Егер бізге KMS қолдану қажет болса, біз екінші нұсқаны таңдаймыз.
Енді, осы мәліметтерге уақытты босқа кетірмеу үшін, біз бірінші нұсқаны таңдаймыз.
Егер төмен қарай жылжытсақ, Advanced Settings деп аталатын соңғы секция бар екенін көреміз.
Мұнда басқа да S3 Bucket баптау опцияларын таңдауға болады.
Бүгінгі Демо сессиясының аясында оларға тоқталмаймыз.
Экранның төменгі жағында Create Bucket батырмасын басыңыз.
Оны басқаннан кейін біз барлық бар бакеттер тізімі бар парақшаға қайта бағытталамыз.
Біздің бакетті осы тізімде көреміз.
Экранның жоғарғы жағында бакет сәтті құрылғанын көрсететін жасыл хабарламаны көресіз.
Келесі қадам - осы бакеттің мәліметтерін көру үшін жаңа S3 Bucket атауын басуымыз керек.
Жаңадан жасалған S3 Bucket-тің негізгі парақшасына кірген бойда біз әртүрлі қойындыларды көреміз.
Қазір бірінші Objects қойындысындамыз.
Көріп отырғаныңыздай, бізде ешқандай объект жоқ, бакет толығымен бос.
Екінші Properties қойындысына өтейік.
Мұнда әртүрлі S3 Bucket параметрлерін, соның ішінде Bucket versioning көресіз.
Оның қазір қосулы екенін көруге болады.
Дегенмен, Edit батырмасын басып, оның біз үшін не көрсететінін көрейік.
Көріп отырғаныңыздай, бізде екі нұсқа бар.
Біріншісі - Enable, яғни ол қазір қосулы, сондықтан құсбелгі осы опцияда.
Сондай-ақ, тағы бір нұсқа бар - Suspend.
Алдыңғы дәрісте айтқанымыздай, үш күй бар.
Бірінші күйі - бұл Disabled, ең түпнұсқасы.
Осыдан кейін Enable опциясы бар.
Үшінші опция - Suspend - Bucket versioning бір рет қосылғаннан кейін оны толығымен өшіру мүмкін емес, оны тек тоқтата тұруға болады.
Жақсы.
Ендеше тәжірибемізді бастайық.
Жергілікті түрде сынақ файлын жасайық.
Ол test_file.txt деп аталсын және оны келесі мәнмен толықтырайық - This is version 1.
Осыдан кейін бұл файлды S3 Bucket ішіне жүктеп салуымыз керек.
Ол үшін Objects қойындысына өтеміз, Upload батырмасын басып, тиісті парақшаға бағытталамыз.
Біз файлдарды да, папкаларды да жүктей аламыз.
Біздің жағдайда бұл бір файл.
Сондықтан Add Files батырмасын басамыз.
Файлды таңдау терезесі ашылады.
Мұнда бір немесе бірнеше файлды таңдауға болады.
Біздің test_file.txt файлын таңдап, Open батырмасын басыңыз.
Оны басқаннан кейін тізімде жүктеуге дайындалған жалғыз файлымыз пайда болады.
Парақшаның төменгі жағында Upload батырмасын басу керек.
Оны басқаннан кейін келесі парақшаға қайта бағытталамыз, онда жүктеуге арналған барлық файлдар мен папкалардың тізімі, әрбір объектінің күйі көрсетіледі.
Сондай-ақ, барлық файлдарды жүктеп алғаннан кейін экранның жоғарғы жағында жасыл арнайы хабарламаны көресіз, бұл жүктеу процесінің сәтті аяқталғанын көрсетеді.
Жұмысты аяқтадық, жоғарғы оң жақта Close батырмасы бар.
Оны басып, бакеттің негізгі парақшасына оралайық.
Мұнда біздің файлымыз бар екенін көре аласыз.
Оны таңдап, мазмұнын ашу үшін Open батырмасын басыңыз.
Біз txt файлымыздың мазмұнын көрсететін жаңа парақшаға қайта бағытталамыз, атап айтқанда This is version 1.
Тәжірибемізді жалғастырайық.
Енді файлымызды өзгертіп, This is version 2 деген мазмұнды жазайық.
Бұрын жасаған қадамдарды пайдаланып S3 Bucket ішіне сақтап, жүктеп салайық.
Сіз test_file.txt файлымыз үшін жаңартылған Last Modified бағанын көресіз.
Енді экранның жоғарғы жағындағы Show versions қосқышын басу керек.
Оны басқаннан кейін барлық файлдардың барлық нұсқаларын көресіз.
Біздің жағдайда бұл бір файл және оның екі нұсқасы.
Кілттің өзі, яғни осы файлға апаратын жол бірдей болғанымен, Version ID әртүрлі екенін көресіз.
Жақсы.
Енді файлымыздың соңғы нұсқасын таңдап, соңғы нұсқаның шынымен жүктелгенін тексеру үшін Open батырмасын басайық.
Браузердің жаңа қойындысында қажетті мазмұны бар txt файлымыз ашылатынын көреміз.
Егер S3 Bucket-ке оралсақ және файл атауын шертсек, объектіміздің арнайы парақшасына ауысамыз.
Бұл - S3 объектінің негізгі парақшасы.
Мұнда бірнеше қойынды бар екенін көресіз.
Бізді үшінші Versions қойындысы қызықтырады, оны басқан кезде ол осы файлдың барлық нұсқалары көрсетілетін арнайы парақшаға бағыттайды.
Дұрыс, біз жүктеп алған екі нұсқа және қосымша ақпарат, кейбір metadata көрсетіледі.
Әрі қарай не істейміз? Біз S3 бакетіміздің негізгі парақшасына ораламыз.
Мұнда файлдардың ең соңғы нұсқаларына ауысу және алдыңғы нұсқаларды көрмеу үшін Show versions құсбелгісін қайтадан басу керек.
Осыдан кейін өз файлымызды таңдап, Delete батырмасын басамыз.
Бұл файлды шынымен жойып жатқанымызды растауымыз керек екенін көрсететін бөлек парақшаға бағытталамыз.
Өріске Delete деп енгізу керек және Delete objects батырмасын басу керек.
Мұны істегеннен кейін сәйкес хабарламаны көресіз, сонымен қатар барлық объектілер тізімінде оның бос екенін көреміз.
Енді Show versions қосқышын қайта басайық.
Мұнда біз үшінші нұсқаның пайда болғанын көреміз, Type - Delete marker және оның жеке Version ID бар.
Бұл нені білдіреді? Бұл тарих сақталғанын, файлдың барлық нұсқалары орнында екенін және Delete marker - бұл файл бакеттің ағымдағы күйінде жоқ екенін білдіреді.
Енді не істейміз? Енді соңғы нұсқаны, яғни Delete marker, және файлымыздың екінші нұсқасын жою үшін оларды белгілеп алайық.
Содан кейін Delete батырмасын басамыз.
Delete батырмасын басқаннан кейін жоюды растау парақшасына бағытталамыз.
Мұнда жойылатын файлдарымыздың тізімі көрсетіледі және төменгі жағына Permanently delete деп жазуымыз керек, содан кейін Delete objects батырмасы белсенді болады.
Мұны орындап, Delete objects батырмасын басайық.
Оны басқаннан кейін нұсқаны көрсететін файлдар тізімінде көреміз, бізде жалғыз нұсқасы бар бір файл қалды.
Бұл нұсқа осы файлдың ең бірінші нұсқасына дәл сәйкес келеді және ағымдағы нұсқасы ретінде көрсетіледі.
Оны таңдап, Open батырмасын басып, бұл шынымен файлдың ең бірінші нұсқасы екенін тексерейік.
Иә, бұл рас.
Versioning мүмкіндігін пайдалана отырып, оның қалай жұмыс істейтінін және жойылған файлдарды қалпына келтіргенін, сонымен қатар оларды алдыңғы нұсқаға қайтарғанымызды көреміз.
Осылайша сіз Versioning қосулы кезде файлдарыңыз әрқашан орнында болатынын, оларды әрқашан қажетті күйге қайтаруға болатынын және олар міндетті түрде жоғалмайтынын көресіз.
Осымен бүгінгі сессиямызды аяқтаймыз.
Сіз Amazon S3 сервисі ішіндегі Versioning мүмкіндігін жақсырақ түсіндіңіз деп үміттенемін.
Назарларыңызға рахмет, келесі белсенділіктерімізде кездескенше!

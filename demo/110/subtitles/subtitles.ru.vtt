WEBVTT

00:00:00.000 --> 00:00:05.440
Добрый день, уважаемые студенты!
Я рад вас всех видеть на очередной сессии Демо.

00:00:05.440 --> 00:00:12.640
Тема сегодняшнего Демо - это создание VPC и всех
необходимых компонентов, используя AWS Console.

00:00:12.640 --> 00:00:21.440
Итак, давайте начнем. В рамках сегодняшнего
Демо мы построим следующую архитектуру.

00:00:21.440 --> 00:00:30.320
В одном AWS аккаунте в одном регионе
это us-east-1 или North Virginia, создадим VPC.

00:00:30.320 --> 00:00:33.840
Будет она называться DEMO_VPC
со следующим CIDR блоком.

00:00:33.840 --> 00:00:41.960
Все ресурсы, которые будем создавать в рамках Демо,
будут находиться в availability zone us-east-1a.

00:00:41.960 --> 00:00:49.880
Это первая availability zone в рамках региона North
Virginia. Далее, нам необходимо создать два subnet.

00:00:49.880 --> 00:00:54.840
Первый будет public. Необходимо не только назвать
его public, но и фактически сделать его public.

00:00:54.840 --> 00:00:58.920
Мы с вами из лекций помним, какие
шаги нам для этого нужно предпринять.

00:00:58.920 --> 00:01:09.480
А именно, необходимо создать subnet. Далее, 
создать Internet gateway, привязать ее к VPC.

00:01:09.480 --> 00:01:17.240
После чего при необходимости создать и настроить 
route table, там прописать следующие rules.

00:01:17.240 --> 00:01:26.360
Первый rule стандартный, дает возможность
обмениваться информацией, ресурсом внутри VPC.

00:01:26.360 --> 00:01:31.440
И необходимо создать дополнительный
rule, который предоставит доступ в Интернет.

00:01:31.440 --> 00:01:35.920
То есть как Destination мы укажем интернет,
а как Target используем Internet gateway.

00:01:35.920 --> 00:01:45.840
Далее, нам необходимо привязать
наш subnet к этому route table.

00:01:45.840 --> 00:01:50.793
После чего фактически наш public
subnet становится public и все ресурсы,

00:01:50.817 --> 00:01:55.560
созданные в этом subnet, будут
иметь возможность выйти в интернет.

00:01:55.560 --> 00:01:59.768
Далее мы будем создавать private
subnet и нам также необходимо

00:01:59.792 --> 00:02:04.760
предоставить возможность ресурсам
из этого subnet выходить в интернет.

00:02:04.760 --> 00:02:09.378
Для этого мы будем использовать
NAT gateway, привяжем Elastic IP

00:02:09.402 --> 00:02:14.020
адрес к этому NAT gateway и
уже в route table для private subnet

00:02:14.044 --> 00:02:18.924
пропишем дополнительный routing
rule, который будет как Destination

00:02:18.948 --> 00:02:23.160
указывать интернет, но как
Target укажет NAT gateway ID.

00:02:23.160 --> 00:02:29.406
После того как мы это сделаем и
private route table привяжем к нашему

00:02:29.430 --> 00:02:36.320
private subnet, все ресурсы из private
subnet получат необходимый доступ.

00:02:36.320 --> 00:02:44.480
Итак, давайте начнем. Начинаем мы с
главной страницы AWS Management Console.

00:02:44.480 --> 00:02:52.200
Здесь первым делом необходимо убедиться, что мы
находимся в правильном регионе, это North Virginia.

00:02:52.200 --> 00:02:56.750
После чего переходим в сервис VPC,
для этого необходимо воспользоваться

00:02:56.774 --> 00:03:02.040
строкой поиска сервисов и самая первая
ссылка это та ссылка, которая нам нужна.

00:03:02.040 --> 00:03:06.045
Как только мы перейдем в
сервис VPC, нам необходимо

00:03:06.069 --> 00:03:11.600
воспользоваться навигационным
меню слева и выбрать пункт Your VPCs.

00:03:11.600 --> 00:03:18.480
Как только мы это сделаем, мы увидим
список всех VPC на нашем AWS аккаунте.

00:03:18.480 --> 00:03:27.680
В рамках нашего Демо создадим новый VPC, поэтому
будем использовать кнопку вверху справа Create VPC.

00:03:27.680 --> 00:03:31.073
Как только вы нажмете на эту
кнопку, нас направят на страницу

00:03:31.097 --> 00:03:35.000
создания VPC, где необходимо будет
ввести некоторые входные данные.

00:03:35.000 --> 00:03:41.535
В рамках этого действия мы создадим
только VPC, у нас также есть возможность

00:03:41.559 --> 00:03:48.880
выбрать опцию VPC and more и указать
какие компоненты дополнительно нужно создать.

00:03:48.880 --> 00:03:53.984
В будущем вы скорее всего будете
использовать вторую опцию, но в

00:03:54.008 --> 00:03:59.600
рамках нашего Демо мы будем
создавать каждый ресурс по отдельности.

00:03:59.600 --> 00:04:07.140
Как результат мы получим ту же инфраструктуру,
ее можно получить и тем и другим способом.

00:04:07.140 --> 00:04:12.558
Выбираем VPC only, далее как
Name tag вводим DemoVPC и как CIDR

00:04:12.582 --> 00:04:18.000
block вводим то значение, которое
мы определили в самом начале.

00:04:18.000 --> 00:04:25.608
Остальные настройки оставляем как
есть, вы также можете обратить внимание,

00:04:25.632 --> 00:04:33.240
что в разделе тегов автоматически
заполнился ключ-значение, Name = DemoVPC.

00:04:33.240 --> 00:04:41.109
После чего нажимаем на Create VPC и нас
направят на страницу недавно созданного

00:04:41.133 --> 00:04:48.800
VPC и мы увидим соответствующее
сообщение, что мы успешно создали DemoVPC.

00:04:48.800 --> 00:04:54.268
Мы двигаемся к следующей части
нашего Демо и здесь выполним

00:04:54.292 --> 00:04:59.760
все шаги необходимые для
создания фактически public subnet-a.

00:04:59.760 --> 00:05:07.128
Для этого нам необходимо в
сервисе VPC воспользоваться

00:05:07.152 --> 00:05:14.520
левым навигационным меню
и перейти к списку subnets.

00:05:14.520 --> 00:05:22.120
Существующие subnets нас не интересует, мы создаем
новый, поэтому нажимаем на кнопку Create Subnet.

00:05:22.120 --> 00:05:27.680
Нас направят на страницу создания subnet,
где необходимо ввести входные данные.

00:05:27.680 --> 00:05:30.040
Самым первым делом нам
необходимо выбрать VPC.

00:05:30.040 --> 00:05:34.080
Мы с вами помним, что subnet
создается в строгой привязке к VPC.

00:05:34.080 --> 00:05:38.120
Выбираем DemoVPC и
прокручиваем страницу чуть ниже.

00:05:38.120 --> 00:05:45.688
Как Subnet name укажем PublicSubnet, как
Availability zone выбираем us-east-1a и как CIDR

00:05:45.712 --> 00:05:53.280
block укажем следующие значения, которые
мы обговорили в начале в рамках нашего задания.

00:05:53.280 --> 00:05:56.000
Теперь нам необходимо
прокрутить в самый низ страницы.

00:05:56.000 --> 00:06:05.040
Обратите внимание, что автоматически заполнился
тег с ключом Name и со значением PublicSubnet.

00:06:05.040 --> 00:06:11.600
И после того, как мы ввели все необходимые
значения, мы можем нажать на кнопку Create Subnet.

00:06:11.600 --> 00:06:16.008
Как только вы это сделаете, вас
направят на список subnet-ов и оно

00:06:16.032 --> 00:06:20.440
будет отфильтровано по subnet,
который мы сейчас только создали.

00:06:20.440 --> 00:06:28.240
Теперь нам необходимо воспользоваться левым
навигационным меню, чтобы создать Internet gateways.

00:06:28.240 --> 00:06:31.640
Давайте перейдем к
списку Internet gateway.

00:06:31.640 --> 00:06:37.240
На текущем аккаунте у нас не имеется
Internet gateways, поэтому мы создадим новый.

00:06:37.240 --> 00:06:42.560
Для этого нажмем на
кнопку Create Internet Gateway.

00:06:42.560 --> 00:06:50.080
Как Name введем DemoIG, можем также
ввести DemoIGVW, это по вашему усмотрению.

00:06:50.080 --> 00:06:56.813
Больше других настроек мы ввести
здесь не можем, тег name заполняется

00:06:56.837 --> 00:07:04.760
автоматически и здесь нам необходимо
нажать на кнопку Create Internet Gateway.

00:07:04.760 --> 00:07:08.984
Как только вы это сделаете,
нас направят на страницу ресурса

00:07:09.008 --> 00:07:15.680
Internet gateway и вы видите ее состояние, как
Detached. Нам необходимо привязать ее к нашему VPC.

00:07:15.680 --> 00:07:24.400
Вы это можете сделать несколькими способами и вы
 видите вверху справа есть кнопка Attach to a VPC.

00:07:24.400 --> 00:07:30.960
Это то действие, которое предлагается
сразу после создания Internet gateway.

00:07:30.960 --> 00:07:40.176
Если же такое сообщение не отобразилось, либо
вы вернулись к созданию привязки между Internet

00:07:40.200 --> 00:07:50.520
gateway и VPC попозже, то можете воспользоваться
кнопкой Actions и там выбрать опцию Attach to a VPC.

00:07:50.520 --> 00:07:55.123
Как только вы это нажмете, вас
направят на страницу, где необходимо

00:07:55.147 --> 00:07:59.400
заполнить основное единственное
поле, где вы выбираете VPC.

00:07:59.400 --> 00:08:04.800
Из списка выбираем DemoVPC и
нажимаем на кнопку Attach Internet gateway.

00:08:04.800 --> 00:08:10.973
Отлично, теперь мы видим, что у
Internet gateway состояние Attached и как

00:08:10.997 --> 00:08:17.600
VPC ID заполнена наша DemoVPC.
Теперь нам необходимо настроить route tables.

00:08:17.600 --> 00:08:23.040
Для этого также воспользуемся навигационным
меню слева и выберем пункт Route tables.

00:08:23.040 --> 00:08:29.028
Здесь нам необходимо создать новую,
это будет кастомный route table, который

00:08:29.052 --> 00:08:35.040
привяжем к нашему public subnet.
Давайте нажмем на кнопку Create route table.

00:08:35.040 --> 00:08:42.160
На странице для ввода входных данных как имя введем
PublicRouteTable и как VPC укажем наше DemoVPC.

00:08:42.160 --> 00:08:49.048
Это основные настройки, которые
необходимы для создания route table и здесь

00:08:49.072 --> 00:08:55.960
мы можем внизу страницы нажать на
кнопку Create route table для ее создания.

00:08:55.960 --> 00:09:00.100
Как только вы ее нажмете, нас
направят на основную страницу ресурса.

00:09:00.100 --> 00:09:04.560
Вы увидите сообщение, что
route table был успешно создан.

00:09:04.560 --> 00:09:12.724
Также видите во вкладках в нижней части страницы,
во вкладке Routes мы видим один единственный

00:09:12.748 --> 00:09:20.560
стандартный route, который помогает обмениваться
данными ресурсами в рамках одного VPC.

00:09:20.560 --> 00:09:28.040
Нам необходимо создать новый routing
rule, для этого нажмем на кнопку Edit rules.

00:09:28.040 --> 00:09:33.920
Здесь нам необходимо будет нажать на кнопку
Add route и начать заполнять необходимые поля.

00:09:33.920 --> 00:09:41.400
Как в Destination мы указываем обозначение
интернета, это IP адрес со всеми нулями слеш ноль.

00:09:41.400 --> 00:09:45.520
Как Target необходимо указать
созданный нами Internet gateway.

00:09:45.520 --> 00:09:49.952
На этом мы ввели все
необходимые значения и здесь нам

00:09:49.976 --> 00:09:54.920
необходимо внизу страницы
нажать на кнопку Save changes.

00:09:54.920 --> 00:10:00.859
Следующий шаг. Кастомно созданный 
route table должен быть привязан

00:10:00.883 --> 00:10:06.273
к subnet, поэтому нам необходимо
перейти на вкладку Subnet

00:10:06.297 --> 00:10:12.423
associations и здесь вы увидите,
что у нас нет привязанных subnets,

00:10:12.447 --> 00:10:18.200
поэтому необходимо нажать
на кнопку Edit subnet associations.

00:10:18.200 --> 00:10:22.296
Как только вы это нажмете
отобразится список subnets доступных

00:10:22.320 --> 00:10:26.080
для привязки, это единственный
subnet - public subnet.

00:10:26.080 --> 00:10:30.560
Давайте его выберем и нажмем
на кнопку Save associations.

00:10:30.560 --> 00:10:39.117
Отлично, мы увидим сообщение о том,
что subnet был успешно привязан к route

00:10:39.141 --> 00:10:48.740
table и на этом этапе мы превратили
наш public subnet фактически в public subnet.

00:10:48.740 --> 00:10:53.438
Мы с вами добрались до второй части нашего
сегодняшнего Демо и сейчас проделаем все

00:10:53.462 --> 00:10:58.160
необходимые шаги, чтобы предоставить
ресурсам из private subnet доступ в интернет.

00:10:58.160 --> 00:11:04.800
Для этого первым делом нам
необходимо создать private subnet.

00:11:04.800 --> 00:11:14.640
Для этого в сервисе Amazon VPC нам необходимо в
левом навигационном меню перейти по пункту Subnets.

00:11:14.640 --> 00:11:21.440
Мы увидим список subnets в этом AWS аккаунте.
Здесь необходимо нажать на кнопку Create subnet.

00:11:21.440 --> 00:11:25.457
Все настройки те же, как VPC
необходимо выбрать DemoVPC,

00:11:25.481 --> 00:11:29.938
как Subnet name прописываем
PrivateSubnet, Availability zone

00:11:29.962 --> 00:11:34.271
выбираем первую, то есть
us-east-1a и прописываем CIDR block,

00:11:34.295 --> 00:11:38.460
который мы определили в самом
начале лабораторной работы.

00:11:38.460 --> 00:11:49.020
Прокручиваем в самый низ и здесь также видим, что
тег с ключом name заполнил соответствующее значение.

00:11:49.020 --> 00:11:56.600
На этом мы ввели все необходимые значения
и можем нажать на кнопку Create subnet.

00:11:56.600 --> 00:11:59.640
Как только мы ее создали,
двигаемся к следующей части.

00:11:59.640 --> 00:12:06.608
Нам необходимо создать NAT gateway, но до
создания NAT gateway нам нужен созданный

00:12:06.632 --> 00:12:13.600
Elastic IP адрес, поэтому мы в левом
навигационном меню выбираем пункт Elastic IPs.

00:12:13.600 --> 00:12:17.326
Как только перейдем на
страницу со всеми Elastic IP

00:12:17.350 --> 00:12:21.600
адресами, нажмем на кнопку
Allocate Elastic IP address.

00:12:21.600 --> 00:12:25.616
Здесь мы все значения оставляем
как есть, обязательно нужно

00:12:25.640 --> 00:12:30.420
убедиться, что в первом поле
выбран нужный регион – North Virginia.

00:12:30.420 --> 00:12:37.800
Если все верно, то прокручиваем в самый
низ страницы и нажимаем на кнопку Allocate.

00:12:37.800 --> 00:12:45.460
Мы увидим сообщение, что Elastic IP адрес
был успешно создан и Static IP адрес следующий.

00:12:45.460 --> 00:12:49.480
Отлично, теперь мы можем
переходить к созданию NAT gateway.

00:12:49.480 --> 00:12:56.320
Здесь также воспользуемся навигационным
меню слева и выберем опцию NAT gateways.

00:12:56.320 --> 00:12:59.664
Здесь необходимо будет нажать
на кнопку Create NAT gateways

00:12:59.688 --> 00:13:02.800
и нас направит на страницу
для ввода входных данных.

00:13:02.800 --> 00:13:14.040
В поле Subnet нам необходимо выбрать Public Subnet,
так как мы создаем NAT gateway в этом Public Subnet.

00:13:14.040 --> 00:13:19.021
Далее Connectivity Type остается
значение по умолчанию Public и здесь

00:13:19.045 --> 00:13:23.880
необходимо выбрать Elastic IP
address, который мы создали ранее.

00:13:23.880 --> 00:13:30.680
Оно должно отобразиться в выпадающем меню.
Это все значения, которые необходимо здесь ввести.

00:13:30.680 --> 00:13:36.600
Мы можем прокрутить до конца страницы
и нажать на кнопку Create NAT gateway.

00:13:36.600 --> 00:13:43.720
Отлично, нас направят на основную страницу 
ресурса. Здесь мы видим, что состояние Pending.

00:13:43.720 --> 00:13:48.320
Мы можем продолжать
двигаться к следующим шагам.

00:13:48.320 --> 00:13:53.800
Через некоторое время состояние NAT
gateway перейдет в состояние Available.

00:13:53.800 --> 00:13:57.079
Мы с вами двигаемся дальше.
Здесь нам необходимо

00:13:57.103 --> 00:14:00.942
создать route table для
нашего private subnet, поэтому

00:14:00.966 --> 00:14:04.947
выбираем соответствующий
пункт в левом навигационном меню

00:14:04.971 --> 00:14:08.880
и переходим к списку route
tables в этом AWS аккаунте.

00:14:08.880 --> 00:14:16.040
Здесь нам необходимо нажать на кнопку Create route
table и ввести все необходимые входные значения.

00:14:16.040 --> 00:14:21.840
Вводим как Name PrivateRouteTable
и как VPC указываем наше DemoVPC.

00:14:21.840 --> 00:14:26.320
После чего нажимаем на кнопку
Create route table внизу страницы.

00:14:26.320 --> 00:14:30.120
Как только мы это сделаем, нас
направят на основную страницу ресурса.

00:14:30.120 --> 00:14:38.760
Здесь мы видим несколько вкладок.
Первая вкладка - Routes.

00:14:38.760 --> 00:14:44.680
Если вы ее нажмете, мы увидим один
единственный стандартный routing rule.

00:14:44.680 --> 00:14:51.880
Нам необходимо создать еще один.
Для этого нажмем на кнопку Edit routes.

00:14:51.880 --> 00:14:57.302
На следующей странице нам необходимо
будет нажать на кнопку Add route

00:14:57.326 --> 00:15:02.747
и ввести необходимые нам значения,
а именно как Destination указываем

00:15:02.771 --> 00:15:08.154
обозначение интернета и как Target
указываем NAT gateway, который мы

00:15:08.178 --> 00:15:13.560
ранее создали. После чего нажимаем
 на кнопку Save changes. Отлично.

00:15:13.560 --> 00:15:18.920
Теперь следующий шаг. Не забываем, 
что route table это независимый ресурс

00:15:18.944 --> 00:15:24.080
и необходимо не забывать привязывать
ее к соответствующим subnet-ам.

00:15:24.080 --> 00:15:28.528
Для этого переходим во
вкладку Subnet associations и здесь

00:15:28.552 --> 00:15:33.000
видим, что этот route table
никаким subnets не используется.

00:15:33.000 --> 00:15:37.880
Давайте это исправим и нажмем
на кнопку Edit subnet associations.

00:15:37.880 --> 00:15:45.200
Здесь мы видим все существующие subnet-ы,
к которым мы можем привязать этот route table.

00:15:45.200 --> 00:15:50.360
Для public subnet мы уже создали отдельный
кастомный route table и ее уже привязали.

00:15:50.360 --> 00:15:55.080
Это вы видите в
соответствующей колонке.

00:15:55.080 --> 00:16:02.600
Здесь нам необходимо выбрать именно private 
subnet и нажать на кнопку Save associations.

00:16:02.600 --> 00:16:11.960
Отлично. Теперь мы в списке явно
привязанных subnet видим наш private subnet.

00:16:11.960 --> 00:16:15.548
На этом мы завершили задания
нашего сегодняшнего Демо

00:16:15.572 --> 00:16:19.160
и давайте теперь пройдемся
какие же ресурсы мы создали.

00:16:19.160 --> 00:16:26.520
Первым делом мы создали наше DemoVPC, далее мы
создали два subnets - public subnet и private subnet.

00:16:26.520 --> 00:16:33.040
Для каждого subnet создали соответствующие
route tables и привязали к subnet-ам.

00:16:33.040 --> 00:16:39.568
Далее создали Internet gateway,
Elastic IP адрес с статическим IP

00:16:39.592 --> 00:16:46.120
адресом и использовали Elastic
IP адрес для создания NAT gateway.

00:16:46.120 --> 00:16:51.000
На этом мы подошли к концу нашего Демо.
Я надеюсь было все понятно.

00:16:51.000 --> 00:16:56.840
Все что непонятно, пожалуйста задавайте ваши 
вопросы. Будем по возможности отвечать.

00:16:56.840 --> 00:17:03.240
Завершаем сегодняшнюю сессию. Спасибо за внимание.
Увидимся на следующих наших активностях.
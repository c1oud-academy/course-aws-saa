 Добрый день, уважаемые студенты! Я рад вас всех видеть на очередной сессии демо. Тема сегодняшнего демо это создание VPC и всех необходимых компонентов, используя AWS консоль. Итак, давайте начнем. В рамках нашего сегодняшнего демо мы построим следующую архитектуру. В одном AWS аккаунте в одном регионе это US East One или North Virginia, создадим VPC. Будет она называться demo VPC со следующим cidre блоком. Все ресурсы, которые мы будем создавать в рамках нашего демо, они будут находиться в availability зоне US East One. Это первая availability зона в рамках региона North Virginia. Далее нам необходимо создать два subnet. Первый будет public. Нам необходимо не только назвать его public, но и фактически сделать его public. Мы с вами из лекций помним, какие шаги нам для этого нужно предпринять. А именно, нам необходимо создать subnet. Далее необходимо создать интернет gateway, привязать ее к VPC. После чего при необходимости создать и настроить road table, там прописать следующие рулы. Первый рул он стандартный, дает возможность обмениваться информацией, ресурсом внутри VPC. И необходимо создать дополнительную рул, которая предоставит доступ в интернет. То есть как destination мы укажем интернет, а как target используем интернет gateway. Далее нам необходимо привязать наш subnet к этому road table. После чего фактически наш public subnet становится public и все ресурсы созданные в этом subnet будут иметь возможность выйти в интернет. Далее мы будем создавать private subnet и нам также необходимо предоставить возможность ресурсам из этого subnet выходить в интернет. Для этого мы будем использовать NAT gateway, привяжем elastic IP адрес к этому NAT gateway и уже в road table для private subnet пропишем дополнительное routing rule, который будет как destination указывать интернет, но как target укажет NAT gateway ID. После того как мы это сделаем и private road table привяжем к нашему private subnet, все ресурсы из private subnet получат необходимый доступ. Итак, давайте начнем. Начинаем мы с главной страницы AWS Management Console. Здесь самым первым делом необходимо убедиться, что мы находимся в правильном регионе, это North Virginia. После чего переходим в сервис VPC, для этого необходимо воспользоваться строкой поиска сервисов и самая первая ссылка это та ссылка, которая нам нужна. Как только мы перейдем в сервис VPC, нам необходимо воспользоваться навигационным меню слева и выбрать пункт Your VPCs. Как только мы это сделаем, мы увидим список всех VPC на нашем AWS аккаунте. Мы в рамках нашего дема создадим новый VPC, поэтому будем использовать кнопку вверху справа Create VPC. Как только вы нажмете на эту кнопку, нас направят на страницу создания VPC, где необходимо будет ввести некоторые входные данные. В рамках этого действия мы создадим только VPC, у нас также есть возможность выбрать опцию VPC and more и указать какие компоненты дополнительно нужно создать. В будущем вы скорее всего будете использовать вторую опцию, но в рамках нашего дема мы будем создавать каждый ресурс по отдельности. Как результат мы получим ту же инфраструктуру, ее можно получить и тем и другим способом. Выбираем VPC only, далее как name так вводим demo VPC и как cidre block вводим то значение, которое мы определили в самом начале. Остальные настройки оставляем как есть, вы также можете обратить внимание, что в разделе тегов авто заполнился ключ значения name равно demo VPC. После чего нажимаем на Create VPC и нас направят на страницу недавно созданного VPC и мы увидим соответствующее сообщение, что мы успешно создали demo VPC. Мы двигаемся к следующей части нашего дема и здесь выполним все шаги необходимые для создания фактически паблик сабнета. Для этого нам необходимо в сервисе VPC воспользоваться левым навигационным меню и перейти к списку сабнетов. Существующие сабнеты нас не интересует, мы создаем новый, поэтому нажимаем на кнопку Create Subnet. Нас направят на страницу создания сабнета, где необходимо ввести входные данные. Самым первым делом нам необходимо выбрать VPC. Мы с вами помним, что сабнет создается в строгой привязке к VPC. Выбираем demo VPC и прокручиваем страницу чуть ниже. Как subnet name укажем public subnet, как availability zone выбираем US East 1A и как cidr block укажем следующие значения, которые мы обговорили в начале в рамках нашего задания. Теперь нам необходимо прокрутить самые низ страницы. Здесь также обратите внимание, что автоматически заполнился тег с ключом name и со значением public subnet. И после того, как мы ввели все необходимые значения, мы можем нажать на кнопку Create Subnet. Как только вы это сделаете, вас направят на список сабнетов и оно будет отфильтровано по сабнету, который мы сейчас только создали. Теперь нам необходимо воспользоваться левым навигационным меню, чтобы создать интернет гейтвейс. Давайте перейдем к списку интернет гейтвей. На текущем аккаунте у нас не имеется интернет гейтвеев, поэтому мы создадим новый. Для этого нажмем на кнопку Create Internet Gateway. Как имя введем demo IG, можем также ввести demo IG VW, это по вашему усмотрению. Больше других настроек мы ввести здесь не можем, тег name заполняется автоматически и здесь нам необходимо нажать на кнопку Create Internet Gateway. Как только вы это сделаете, нас направят на страницу ресурса интернет гейтвей и вы видите ее состояние, как детачит. Нам необходимо привязать ее к нашему VPC. Вы это можете сделать несколькими способами и вы видите вверху справа есть кнопка от тачтуя VPC. Это то действие, которое предлагается сразу после создания интернет гейтвея. Если же такое сообщение не отобразилось, либо вы вернулись к созданию привязки между интернет гейтвеем и VPC попозже, то можете воспользоваться кнопкой Actions и там выбрать опцию от тачтуя VPC. Как только вы это нажмете, вас направят на страницу, где необходимо заполнить основное единственное поле, где вы выбираете VPC. Из списка выбираем demo VPC и нажимаем на кнопку от тач интернет гейтвей. Отлично, теперь мы видим, что у интернет гейтвея состояние от тачет и как VPC ID заполнена наша demo VPC. Теперь нам необходимо настроить road tables. Для этого также воспользуемся навигационным меню слева и выберем пункт road tables. Здесь нам необходимо создать новую, это будет кастомный road table, который привяжем к нашему паблик субнету. Давайте нажмем на кнопку Create road table. На странице для ввода входных данных как имя введем public road table и как VPC укажем наше demo VPC. Это основные настройки, которые необходимы для road table для создания и здесь мы можем внизу страницы нажать на кнопку Create road table для ее создания. Как только вы ее нажмете, нас направят на основную страницу ресурса. Вы увидите сообщение, что road table был успешно создан. Также видите в вкладках в нижней части страницы, во вкладке road мы видим один единственный стандартный road, который помогает обмениваться данными ресурсами в рамках одного VPC. Нам необходимо создать новый routing rule, для этого нажмем на кнопку Edit rules. Здесь нам необходимо будет нажать на кнопку Add road и начать заполнять необходимые поля. Как в destination мы указываем обозначение интернета, это IP адрес со всеми нулями слеш ноль. Как target необходимо указать созданный нами интернет gateway. На этом мы ввели все необходимые значения и здесь нам необходимо внизу страницы нажать на кнопку Save changes. Следующий шаг. Кастомно созданный road table он должен быть привязан к сабнету, поэтому нам необходимо перейти на вкладку subnet associations и здесь вы увидите, что у нас нет привязанных сабнетов, поэтому необходимо нажать на кнопку Edit subnet associations. Как только вы это нажмете отобразится список сабнетов доступных для привязки, это единственный сабнет public subnet. Давайте его выберем и нажмем на кнопку public Save associations. Отлично, мы увидим сообщение о том, что сабнет был успешно привязан к road table и на этом этапе мы превратили наш public subnet фактически в public subnet. Мы с вами добрались до второй части нашего сегодняшнего демо и сейчас проделаем все необходимые шаги, чтобы предоставить ресурсам из private subnet доступ в интернет. Для этого первым делом нам необходимо создать private subnet. Для этого в сервисе Amazon VPC нам необходимо в левом навигационном меню перейти по пункту subnets. Мы увидим список сабнетов в этом AWS аккаунте. Здесь нам необходимо нажать на кнопку Create subnet. Все настройки те же, как VPC необходимо выбрать demo VPC, как subnet name прописываем private subnet, availability zone выбираем первую, то есть US East 1A и прописываем cidre block, который мы определили в самом начале лабораторной работы. Прокручиваем самый низ и здесь также видим, что тег со значением с ключом name заполнил соответствующее значение. На этом мы ввели все необходимые значения и можем нажать на кнопку Create subnet. Как только мы ее создали, двигаемся к следующей части. Нам необходимо создать NAT gateway, но до создания NAT gateway нам нужен созданный elastic IP-адрес, поэтому мы в левом навигационном меню выбираем пункт elastic IPs. Как только перейдем на страницу со всеми elastic IP-адресами, нажмем на кнопку Allocate elastic IP-адрес. Здесь мы все значения оставляем как есть, обязательно нужно убедиться, что в первом поле выбран нужный регион – Норс-Вирджиния. Если все верно, то прокручиваем в самый низ страницы и нажимаем на кнопку Allocate. Мы увидим сообщение, что elastic IP-адрес был успешно создан и статический IP-адрес следующий. Отлично, теперь мы можем переходить к созданию NAT gateway. Мы также воспользуемся навигационным меню слева и выберем опцию NAT gateways. Здесь необходимо будет нажать на кнопку Create NAT gateways и нас направить на страницу для ввода входных данных. В поле Subnet нам необходимо выбрать Public Subnet, так как мы создаем NAT gateway в этом Public Subnet. Далее Connectivity Type остается значение по умолчанию Public и здесь необходимо выбрать elastic IP-адрес, который мы создали ранее. Оно должно отобразиться в выпадающем меню. Это все значения, которые необходимо здесь ввести. Мы можем прокрутить до конца страницы и нажать на кнопку Create NAT gateway. Отлично, нас направят на основную страницу ресурса. Здесь мы видим, что состояние pending. Мы можем продолжать двигаться к следующим шагам. Через некоторое время состояние NAT gateway перейдет в состояние available. Мы с вами двигаемся дальше. Здесь нам необходимо создать road table для нашего private subnet, поэтому выбираем соответствующий пункт в левом навигационном меню и переходим к списку road tables в этом AWS аккаунте. Здесь нам необходимо нажать на кнопку Create road table и ввести все необходимые входные значения. Вводим как name private road table и как VPC указываем наше demo VPC. После чего нажимаем на кнопку Create road table внизу страницы. Как только мы это сделаем, нас направят на основную страницу ресурса. Здесь мы видим несколько вкладок. Первая вкладка roads. Если вы ее нажмете, мы увидим один единственный стандартный routing rule. Нам необходимо создать еще один. Для этого нажмем на кнопку Edit roads. На следующей странице нам необходимо будет нажать на кнопку Add road и ввести необходимые нам значения, а именно как destination указываем обозначение интернета и как target указываем NAT gateway, который мы ранее создали. После чего нажимаем на кнопку Save changes. Отлично. Теперь следующий шаг. Не забываем, что road table это независимый ресурс и необходимо не забывать привязывать ее к соответствующим сабнетам. Для этого переходим во вкладку Subnet associations и здесь видим, что этот road table никаким сабнетам не используется. Давайте это исправим и нажмем на кнопку Edit subnet associations. Здесь мы видим всех существующих сабнетов, в которые мы можем привязать этот road table. Для public сабнета мы уже создали отдельный кастомный road table и ее уже привязали. Это вы видите в соответствующей колонке. Здесь нам необходимо выбрать именно private subnet и нажать на кнопку Save associations. Отлично. Теперь мы в списке явно привязанных сабнетов видим наш private subnet. На этом мы завершили задание нашего сегодняшнего дема и давайте теперь пройдемся какие же ресурсы мы создали. Первым делом мы создали наше demo VPC, далее мы создали два сабнета public subnet и private subnet. Для каждого сабнета создали соответствующие road тейблы и привязали с сабнетами. Далее создали интернет гейтвей, эластик IP адрес с статическим IP адресом и использовали эластик IP адрес для создания NAT gateway. На этом мы подошли к концу нашего сегодняшнего дема. Я надеюсь было все понятно. Все что непонятно, пожалуйста задавайте ваши вопросы. Будем по возможности отвечать. Завершаем нашу сегодняшнюю сессию. Спасибо за внимание. Увидимся с вами на следующих наших активностях.

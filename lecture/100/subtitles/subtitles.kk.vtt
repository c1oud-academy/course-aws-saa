WEBVTT

00:00:00.000 --> 00:00:04.480
Қайырлы күн, құрметті студенттер,
барлығыңызды көргеніме қуаныштымын.

00:00:04.480 --> 00:00:08.660
Біз дерекқор бойынша дәрістер
топтамасын жалғастырамыз.

00:00:08.660 --> 00:00:17.380
Бүгін екінші және соңғы бөлім.
Ендеше, бастайық. Дәріс үш бөлімнен тұрады.

00:00:17.380 --> 00:00:26.440
Нөмірлеу үздіксіз болғандықтан, төртінші бөлімнен
бастаймыз. Ол Amazon DynamoDB сервисіне арналған.

00:00:26.440 --> 00:00:35.440
DynamoDB — Managed Database
service, NoSQL дерекқор түрі.

00:00:35.440 --> 00:00:41.988
Бесінші бөлім қауіпсіздік мәселелеріне 
арналған. Мұнда Amazon RDS және

00:00:42.012 --> 00:00:48.560
Amazon DynamoDB мысалдарын
пайдаланып осы мәселелерді қарастырамыз.

00:00:48.560 --> 00:01:01.600
Ал соңғы, алтыншы бөлім жергілікті дата-центрінен
AWS сервистеріне көшу мәселелеріне қатысты.

00:01:01.600 --> 00:01:07.120
Тасымалдау процесін жеңілдетуге
көмектесетін бірнеше сервистерді қарастырамыз.

00:01:07.120 --> 00:01:12.960
Сондай-ақ, осы аптада зертханалық
жұмыс бар екенін еске саламыз.

00:01:12.960 --> 00:01:18.211
Бұл зертханалық жұмыстың тақырыбы –
«Дерекқорларды Amazon RDS-ке көшіру»,

00:01:18.235 --> 00:01:23.120
екі белсенділік болады - зертханалық
жұмысқа кіріспе және талдау.

00:01:23.120 --> 00:01:32.840
Төртінші бөлімді бастаймыз.
Ол Amazon DynamoDB сервисі туралы.

00:01:32.840 --> 00:01:40.653
Негізгі мәселелерге тоқталайық. Amazon DynamoDB
– Fully Managed Database Service және реляциялық

00:01:40.677 --> 00:01:48.160
емес кілт-мән дерекқоры болып табылады.
Яғни, әрбір жолда кейбір кілт пен мәнді сақтаймыз.

00:01:48.160 --> 00:01:54.208
Amazon DynamoDB сервисінің негізгі
артықшылықтары туралы айтатын

00:01:54.232 --> 00:02:00.280
болсақ, оны шексіз дерлік
өлшемдерге дейін масштабтауға болады.

00:02:00.280 --> 00:02:06.720
Сондай-ақ, бізге Single Digit
Millisecond Response Time ұсынады.

00:02:06.720 --> 00:02:17.640
Идеясы: әрқашан 10 миллисекунд ішінде жауап береді,
жылдам және көптеген қолданбалар үшін қолайлы.

00:02:17.640 --> 00:02:22.328
Сонымен қатар, бұл сервис serverless
болғандықтан, бізге серверлерге қызмет

00:02:22.352 --> 00:02:27.040
көрсету, қауіпсіздік патчтарын,
жаңартуларды орнату және т.б. қажет емес.

00:02:27.040 --> 00:02:33.280
Сондай-ақ, software, яғни бағдарламалық
жасақтаманы орнатудың қажеті жоқ.

00:02:33.280 --> 00:02:40.720
Бұл пайдалануды бастауды
айтарлықтай жеңілдетеді.

00:02:40.720 --> 00:02:49.848
Егер DynamoDB-мен пайдалануға қолайлы
қолданбалар туралы айтатын болсақ, бұл қолданбаңыз

00:02:49.872 --> 00:02:59.000
деректердің үлкен көлемімен, яғни 1 терабайттан
астам көлеммен жұмыс істейтін жағдайлар.

00:02:59.000 --> 00:03:04.516
Бұл дерекқорыңыз өте тез өсіп
жатқанда және қолданбаңызды

00:03:04.540 --> 00:03:11.240
сақтайтын және тез масштабталатын
сервис қажет болғанда да болады.

00:03:11.240 --> 00:03:19.315
Қолданбаңызға аналитика қажет болмаса, яғни
ол күрделі біріктірулері бар сұрауларды қамтымаса,

00:03:19.339 --> 00:03:27.240
керісінше қарапайым тікелей сұрауларды қамтыса,
DynamoDB да қолайлы нұсқа болып табылады.

00:03:27.240 --> 00:03:38.480
DynamoDB — NoSQL дерекқоры.
Әрбір жолда мән кілтін сақтайсыз.

00:03:38.480 --> 00:03:44.320
Әрбір жолда бірнеше баған болуы мүмкін
және баған атаулары еш жолмен шектелмейді.

00:03:44.320 --> 00:03:49.320
Яғни, олар әрбір жол
үшін бірегей болуы мүмкін.

00:03:49.320 --> 00:03:58.560
Осылайша, нақты құрылым жоқ, өйткені біз реляциялық
мәліметтер базасымен жұмыс істеуге үйрендік.

00:03:58.560 --> 00:04:12.000
Мұнда кесте құрылымы қажетінше
кез келген уақытта өзгеруі мүмкін.

00:04:12.000 --> 00:04:17.520
Енді DynamoDB дерекқоры неден
тұратынын егжей-тегжейлі қарастырайық.

00:04:17.520 --> 00:04:23.320
Реляциялық дерекқорымен жұмыс істегенде
бізде бірнеше кестелер болатыны есімізде.

00:04:23.320 --> 00:04:30.560
Бұл кестелер өзара байланысты және осылайша осы
 кестелерде барлық қажетті деректерді сақтайсыз.

00:04:30.560 --> 00:04:39.120
DynamoDB жағдайында, мұнда DynamoDB
инстансы жасалғанда, бір үлкен кесте жасалады.

00:04:39.120 --> 00:04:46.628
Деректерді және құрылымды реляциялық
дерекқордан DynamoDB-ге тасымалдаған кезде,

00:04:46.652 --> 00:04:54.160
реляциялық дерекқордағы барлық кестелер
бір DynamoDB кестесіне тасымалданады.

00:04:54.160 --> 00:05:00.960
Әрі қарай, data elements
немесе items ұғымдары бар.

00:05:00.960 --> 00:05:07.000
Бұл - дәл сол жолдың өзі.
Әрбір жол әртүрлі атрибуттардан тұрады.

00:05:07.000 --> 00:05:15.640
Әрбір атрибуттың кілті мен мәні бар. Сондай-ақ,
әрбір item үшін, яғни әрбір жол үшін hash кілті бар.

00:05:15.640 --> 00:05:24.400
Бұл оны бірегей түрде анықтайтын кілт.
Hash кілті қарапайым немесе құрама болуы мүмкін.

00:05:24.400 --> 00:05:33.640
Ол құрама болған кезде primary key және sort key
пайдаланылады, яғни ол қосалқы кілт болып табылады.

00:05:33.640 --> 00:05:40.720
Содан кейін слайдта динамикалық
ұяшықтар қызғылт түспен бөлектелгенін көресіз.

00:05:40.720 --> 00:05:47.408
Яғни, әрбір жол үшін
қосымша атрибуттардың бірегей

00:05:47.432 --> 00:05:55.760
жиынтығы болуы мүмкін.
Әрбір атрибуттың кілті мен мәні бар.

00:05:55.760 --> 00:06:03.160
Әдепкі бойынша, DynamoDB кестесі бір аймақтағы 
бірнеше availability zone-ға клондалады.

00:06:03.160 --> 00:06:09.680
Бірақ бірнеше AWS аймақтарынан қол жетімді
болатын кесте қажет болатын кездер болады.

00:06:09.680 --> 00:06:17.747
Бұл жағдайда Global table опциясын қосуға
және қажетті аймақтарды көрсетуге болады,

00:06:17.771 --> 00:06:25.640
содан кейін DynamoDB кестесі барлық
көрсетілген аймақтардан қолжетімді болады.

00:06:25.640 --> 00:06:32.260
Егер әртүрлі аймақтардағы пайдаланушылары
бар қолданба болса, бұл өте ыңғайлы болуы мүмкін.

00:06:32.260 --> 00:06:37.388
Бұл жағдайда бір аймақтан
кестеге өзгертулер енгізілгенде,

00:06:37.412 --> 00:06:42.360
бұл өзгерістер басқа
аймақтардағы кестеге клондалады.

00:06:42.360 --> 00:06:46.442
Сонымен қатар, егер бір аймақ қолжетімсіз
болса, пайдаланушылар қолданбаңызбен

00:06:46.466 --> 00:06:50.920
жұмыс істеуді жалғастыра алады, бірақ
енді басқа аймақтағы кестемен жұмыс істейді.

00:06:50.920 --> 00:06:57.800
Осылайша, ол қолданбаңыздың
қолжетімділігін арттырады.

00:06:57.800 --> 00:07:07.760
Енді Amazon DynamoDB сервисін пайдаланудың
танымал жағдайларын қарастырайық.

00:07:07.760 --> 00:07:12.280
Ең танымал мысал - кестені
рейтинг кестесі ретінде пайдалану.

00:07:12.280 --> 00:07:19.895
Біздің мысалда Electronic Arts атты
компания бар, ол ойындарды әзірлейді және

00:07:19.919 --> 00:07:29.040
миллиондаған белсенді пайдаланушылар осы
компанияның қосымшаларын күнделікті пайдаланады.

00:07:29.040 --> 00:07:33.608
Секундына 100 мыңға дейін
сұраныс түсуі мүмкін және дүние

00:07:33.632 --> 00:07:38.200
жүзінде 300 миллионнан астам
тіркелген пайдаланушылар бар.

00:07:38.200 --> 00:07:43.786
Яғни, бұл компанияның барлық
қосымшаларына айтарлықтай үлкен

00:07:43.810 --> 00:07:50.440
жүктеме және ол Amazon DynamoDB
сервисінде рейтинг кестесін енгізді.

00:07:50.440 --> 00:07:56.480
Мұнда User ID, primary key ретінде
пайдаланушы ID көрсетілгенін көресіз.

00:07:56.480 --> 00:08:02.280
Әрі қарай, Game, sort key, яғни
қосымша кілт ретінде Game title бар.

00:08:02.280 --> 00:08:09.844
Содан кейін қосымша кілттер бар. Кейбір
кілттер бірдей болуы мүмкін, мысалы, Top Score,

00:08:09.868 --> 00:08:17.960
Top Score Date Time, Wins, Losses және белгілі
бір ойынға тән қосымша өрістер болуы мүмкін.

00:08:17.960 --> 00:08:33.120
Amazon DynamoDB үшін тағы бір танымал қолдану
 жағдайы - бұл веб-сайттағы сатып алу арбасы.

00:08:33.120 --> 00:08:39.211
Бұл өте маңызды деректер, олардың
жоғалуы компания үшін айтарлықтай шығындарға

00:08:39.235 --> 00:08:46.040
әкелуі мүмкін, бірақ соған қарамастан, бұл
өзінің табиғаты бойынша уақытша деректер.

00:08:46.040 --> 00:08:52.234
Сонымен, бұл жағдайда DynamoDB
өте қолайлы, өйткені ол пайдаланушылар

00:08:52.258 --> 00:08:58.908
санының кенеттен өсуіне қолдау
көрсете алады, ол барлық сұрауларды сәтті

00:08:58.932 --> 00:09:05.354
өңдей алады, ал сайтта пайдаланушылар
болмаған жағдайда автоматты түрде

00:09:05.378 --> 00:09:11.800
қажетті өлшемге дейін азаяды және
сіз тек пайдаланғаныңыз үшін төлейсіз.

00:09:11.800 --> 00:09:20.167
Read consistency дегеніміз не?
Бұл деректер жазылғаннан

00:09:20.191 --> 00:09:29.800
немесе жаңартылғаннан кейін
қолжетімді болған кездегі жағдай.

00:09:29.800 --> 00:09:34.733
Егер жаңартылған деректер
дереу қол жетімді болса, онда

00:09:34.757 --> 00:09:40.240
бұл жағдайда бұл strongly
consistent операция деп айтамыз.

00:09:40.240 --> 00:09:45.702
Жазу немесе жаңартудан кейін
деректер бірден қол жетімді болмаса,

00:09:45.726 --> 00:09:51.188
бір секундтан кейін немесе 10
секундтан кейін болсын, белгілі бір

00:09:51.212 --> 00:09:56.842
уақыттан кейін ғана қолжетімді
болса, онда бұл eventually consistent

00:09:56.866 --> 00:10:02.160
операция деп аталады. Amazon 
DynamoDB екі тәсілді де қолдайды.

00:10:02.160 --> 00:10:07.055
Әдепкі бойынша, eventually
consistent операциялар қосылады,

00:10:07.079 --> 00:10:11.550
яғни деректер аймақтағы
бірнеше availability zone-да

00:10:11.574 --> 00:10:16.935
қайталанатынын және деректерді
жазған кезде бір секунд ішінде

00:10:16.959 --> 00:10:22.320
барлық басқа availability zone-ға
көшірілетінін есте сақтаймыз.

00:10:22.320 --> 00:10:29.089
Осылайша, жазбаны жаңартсаңыз немесе жаңа
жазба қоссаңыз және оны дереу сұрауға тырыссаңыз,

00:10:29.113 --> 00:10:35.280
ол ескі деректерді қайтаруы немесе жазба
әлі жасалмаған хабарды қайтаруы мүмкін.

00:10:35.280 --> 00:10:43.840
Бұл қолданбаңызға ыңғайлы болса, eventually
consistent operations пайдалануды жалғастыра бересіз.

00:10:43.840 --> 00:10:52.160
Өзгерістердің дереу пайда болуы қажет болса,
strongly consistent опцияны пайдалану керек.

00:10:52.160 --> 00:10:57.092
Оны кез келген операция деңгейінде
іске қосуға болады, яғни кейбір

00:10:57.116 --> 00:11:02.428
операцияларды маңызды емес
деректер ретінде eventually consistent деп

00:11:02.452 --> 00:11:07.690
жазуға болады, ал маңыздылары
болса, мұны strongly consistent ретінде

00:11:07.714 --> 00:11:12.720
орындағыңыз келетінін көрсететін
құсбелгіні қосу арқылы жазасыз.

00:11:12.720 --> 00:11:25.680
Яғни, барлық өзгерістер бірден пайда болады
және келесі рет кіргенде қолжетімді болады.

00:11:25.680 --> 00:11:32.680
Осымен біз Amazon DynamoDB сервисіне қатысты
ең негізгі және маңызды сәттерді қарастырдық.

00:11:32.680 --> 00:11:40.914
Бұл fully managed non-relational key-value
database service, яғни бұл бізге реляциялық емес

00:11:40.938 --> 00:11:49.080
кілт-мән дерекқорларын ұсынатын толық
басқарылатын AWS сервисі екенін есте ұстаған жөн.

00:11:49.080 --> 00:11:59.188
Бұл сервис serverless, яғни оны шексіз
дерлік масштабтауға болады және қажет

00:11:59.212 --> 00:12:09.320
болған жағдайда кішірейтуге болады.
Ал сіз тек пайдаланғаныңыз үшін төлейсіз.

00:12:09.320 --> 00:12:16.200
Қолданбаңызда және DynamoDB кестесінде
жүктеме болмаса, онда бұл кесте үшін төлемейсіз.

00:12:16.200 --> 00:12:21.596
Тек деректерді сақтау үшін
төлейсіз, бұл кестеден оқу

00:12:21.620 --> 00:12:27.640
және жазу операцияларымен
салыстырғанда азырақ шығындар.

00:12:27.640 --> 00:12:34.280
Егер сізде үлкен жүктеме болса, онда
келген барлық сұраулар сәтті өңделеді.

00:12:34.280 --> 00:12:42.688
Барлық сұраулар single-digit
millisecond өңделеді, яғни

00:12:42.712 --> 00:12:51.120
10 миллисекундтан аспайды
және қажетінше масштабталады.

00:12:51.120 --> 00:12:56.000
Тағы бір мәселе, DynamoDB
бір аймақ аясында жұмыс істейді.

00:12:56.000 --> 00:13:03.240
Деректер бірнеше availability zone-ға көшіріледі,
бірақ қажет болса, Global table қосуға болады.

00:13:03.240 --> 00:13:10.880
Осылайша, бір DynamoDB кестесі бірнеше
AWS аймақтарында жұмысын жалғастырады.

00:13:10.880 --> 00:13:14.240
Сондай-ақ, read consistency
тақырыбын да қозғадық.

00:13:14.240 --> 00:13:20.600
Ол екі түрлі болады: eventual
consistency және strong consistency.

00:13:20.600 --> 00:13:27.316
DynamoDB-мен байланысты әрбір
операция үшін оның eventual consistency

00:13:27.340 --> 00:13:33.760
немесе strong consistency ретінде
өңделетінін анықтауға болады.

00:13:33.760 --> 00:13:40.200
Біз бесінші бөлімге жеттік, енді дерекқорларымыздың
қауіпсіздігіне қатысты мәселелерге тоқталамыз.

00:13:40.200 --> 00:13:47.480
Егер Amazon RDS сервисі туралы айтатын болсақ,
онда VPC-де дерекқор инстансын жасау ұсынылады.

00:13:47.480 --> 00:13:54.366
Осының арқасында Security groups немесе Network
ACL көмегімен дерекқорға кіруді шектей аласыз,

00:13:54.390 --> 00:14:01.720
осылайша дерекқорға қатынаса алатын және кіруі
тиіс ресурстарға ғана кіру құқығын қалдыра аласыз.

00:14:01.720 --> 00:14:13.275
IAM policy пайдалану арқылы, сондай-ақ, желі арқылы
дерекқорға қол жеткізу мүмкіндігі бар ресурстарға

00:14:13.299 --> 00:14:24.520
кіруді шектей аласыз, бірақ дерекқордағы белгілі
кестелерге шектеулі құқықтар жиынтығы болуы керек.

00:14:24.520 --> 00:14:30.800
Тасымалдау кезінде деректеріңізді
қорғау үшін SSL шифрлауын қосу керек.

00:14:30.800 --> 00:14:39.206
Сондай-ақ, деректеріңіз at rest, яғни сақтау
кезінде сақталуы үшін шифрлауды қосу керек

00:14:39.230 --> 00:14:47.440
және дерекқор, сондай-ақ осы дерекқордан
жасалған барлық снапшоттар да шифрланады.

00:14:47.440 --> 00:14:54.865
Дерекқор қозғалтқышына байланысты
дерекқорларыңыздың қауіпсіздігін

00:14:54.889 --> 00:15:02.200
одан әрі жақсарту үшін сізге
қолжетімді опциялар болуы мүмкін.

00:15:02.200 --> 00:15:06.147
Егер Amazon DynamoDB
сервисінің қауіпсіздігі туралы айтатын

00:15:06.171 --> 00:15:10.800
болсақ, алдыңғы слайдта айтылғандардың
бәрі осында да қолданылады.

00:15:10.800 --> 00:15:14.688
Сондай-ақ, AWS ресурстарына
қажетті минималды қолжетімділікті

00:15:14.712 --> 00:15:19.120
қамтамасыз ету үшін IAM roles
пен IAM policies пайдалануға болады.

00:15:19.120 --> 00:15:32.268
Егер DynamoDB кестесімен белгілі бір VPC ресурстары
ғана жұмыс істейтін болса, онда VPC Endpoint

00:15:32.292 --> 00:15:45.440
жасау ұсынылады, осылайша кестеге қажетті VPC-ден
басқа барлық сыртқы қатынасқа кіруді шектейсіз.

00:15:45.440 --> 00:15:57.260
Деректерді шифрлауға қатысты деректерді тасымалдау
кезінде де, сақтау кезінде де шифрлауға болады.

00:15:57.260 --> 00:16:06.880
Біз ең соңғы, алтыншы бөлімге жеттік. Бұл бөлім AWS
дерекқор сервистеріне тасымалдау мәселелерін қамтиды.

00:16:06.880 --> 00:16:13.920
Тасымалдау тақырыбының ең негізгі
сервисі AWS DMS сервисі болып табылады.

00:16:13.920 --> 00:16:16.880
Толығымен Database
Migration Service деп аталады.

00:16:16.880 --> 00:16:25.392
Бұл сервисті пайдалана отырып, жергілікті
дата-центрде орнатылған дерекқорды немесе EC2

00:16:25.416 --> 00:16:34.920
құрылғысында өзіңіз орнатқан дерекқорды AWS
дерекқор сервистерінің біріне тасымалдауға болады.

00:16:34.920 --> 00:16:44.560
DMS сервисін пайдаланып бір қозғалтқыштан екінші 
қозғалтқышқа тасымалдауға болатынын ескеріңіз.

00:16:44.560 --> 00:16:54.320
Ол үшін AWS Schema Conversion Tool
құралын немесе AWS SCT пайдалану керек.

00:16:54.320 --> 00:17:05.588
Ол бастапқы дерекқордағы кестелердің құрылымын
есепке алуға және қозғалтқышының ерекшеліктерін

00:17:05.612 --> 00:17:16.880
ескере отырып, қабылдаушы дерекқорында ұқсас деректер
базасының құрылымын жасауға мүмкіндік береді.

00:17:16.880 --> 00:17:23.136
Сондай-ақ, DMS бір реттік тасымалдауларды
қолдап қана қоймайды, сонымен қатар белгілі бір

00:17:23.160 --> 00:17:30.200
жағдайларда қажет болуы мүмкін деректеріңіздің
үздіксіз қайталануын орнатуға болатынын ескеріңіз.

00:17:30.200 --> 00:17:37.785
AWS DMS сервисін пайдаланып,
бір себептермен жергілікті

00:17:37.809 --> 00:17:46.520
дерекқорды AWS жүйесіне тікелей
тасымалдай алмауыңыз мүмкін.

00:17:46.520 --> 00:17:51.437
Ең танымал себептер - деректер базасының
тым үлкен болуы немесе Интернетке

00:17:51.461 --> 00:17:56.040
қосылудың әлсіздігі, үшіншіден,
нормативтік талаптарға байланысты.

00:17:56.040 --> 00:18:02.720
Бұл жағдайда AWS Snowball Edge
сервисін пайдалануыңыз керек.

00:18:02.720 --> 00:18:09.320
AWS Snowball Edge - чемодан AWS-тен
кеңсеңізге жіберілгенде, бұл физикалық

00:18:09.344 --> 00:18:16.760
чемоданды жергілікті желіге қосып,
деректеріңізді тасымалдайтынын есте ұстаймыз.

00:18:16.760 --> 00:18:22.548
Бұл жағдайда дерекқорды түрлендіру
және барлық деректерді Snowball

00:18:22.572 --> 00:18:28.360
Edge-ге тасымалдау үшін AWS SCT
сервисін пайдалану қажет болады.

00:18:28.360 --> 00:18:34.638
Әрі қарай, бұл физикалық чемоданды AWS-ке
қайта жібересіз, AWS оны алған бойда жергілікті

00:18:34.662 --> 00:18:40.440
желіні пайдалана отырып, ол барлық
деректерді S3 Bucket-ке жылдам тасымалдайды.

00:18:40.440 --> 00:18:45.581
Мұнда AWS DMS сервисін
қосуды бастайсыз, source ретінде S3

00:18:45.605 --> 00:18:51.560
Bucket және Target ретінде
қажетті дерекқор сервисін көрсетесіз.

00:18:51.560 --> 00:19:02.400
Осымен дерекқорға қатысты тақырыптағы
алтыншы және ең соңғы бөлімнің соңына жеттік.

00:19:02.400 --> 00:19:09.533
Сондай-ақ, бүгінгі дәріс те аяқталды.
Еске сала кетейін, біз Amazon

00:19:09.557 --> 00:19:17.231
RDS сервисімен толығырақ таныстық,
содан кейін Amazon DynamoDB сервисі

00:19:17.255 --> 00:19:24.715
туралы сөйлестік, қауіпсіздік
мәселелерін және жергілікті дерекқордан

00:19:24.739 --> 00:19:31.760
AWS дерекқор сервистерінің біріне
көшу мәселелерін қарастырдық.

00:19:31.760 --> 00:19:42.328
Бұл слайдта пайдалы сілтемелерді көресіз, іздеу
жүйесіне кілт сөздерді енгізу жеткілікті, осылайша

00:19:42.352 --> 00:19:52.920
іздеу нәтижелеріндегі бірінші сілтеме іздеген
сілтеме болады. Осымен бүгінгі дәрісімізді аяқтаймыз.

00:19:52.920 --> 00:19:58.000
Бұл дәріс AWS дерекқорлары туралы
толық түсінік берді деп үміттенемін.

00:19:58.000 --> 00:20:02.000
Назарларыңызға рахмет, келесі
белсенділіктерде кездескенше.
WEBVTT

00:00:00.000 --> 00:00:05.000
Қайырлы күн, құрметті студенттер!
Сізді келесі дәрісте көргеніме қуаныштымын.

00:00:05.000 --> 00:00:13.000
Бұл - дерекқор бойынша екі дәрістік
топтаманың біріншісі. Ендеше, бастайық.

00:00:13.000 --> 00:00:19.687
Бүгінгі дәрісіміз үш бөлімнен тұрады. Бірінші 
бөлімде зертханалық жұмыстың аясында әзірлеп

00:00:19.711 --> 00:00:27.000
жатқан AWS архитектурасы және қандай бөлігі
осы аптада қосылатыны туралы айтатын боламыз.

00:00:27.000 --> 00:00:33.000
Келесі, екінші бөлімде дерекқор түрін таңдауға
қатысты барлық мәселелерді қарастырамыз.

00:00:33.000 --> 00:00:39.000
Қандай түрлері бар, бір-бірінен қалай ерекшеленеді,
қандай артықшылықтар мен кемшіліктері бар.

00:00:39.000 --> 00:00:48.000
Дәрістің соңғы бөлігінде Amazon RDS сервисі
туралы айтамыз. Бұл - Relational Database Service.

00:00:48.000 --> 00:00:54.000
Сондай-ақ, осы аптада қосымша белсенділіктер
бар екенін еске саламын, бұл - Демо.

00:00:54.000 --> 00:01:04.000
RDS инстансы үшін автоматты сақтық көшірмелерді және
read репликасын жасаймыз. Сондай-ақ, Guided Lab бар.

00:01:04.000 --> 00:01:12.000
Мұнда RDS дерекқорын жасаймыз. Кіріспе,
сонымен қатар зертханалық жұмыстарға шолу болады.

00:01:12.000 --> 00:01:16.673
Ендеше бүгін дәрісіміздің бірінші
бөлімін бастаймыз және зертханалық

00:01:16.697 --> 00:01:22.000
жұмыстың аясында жасап жатқан бұлттағы
архитектура туралы айтатын боламыз.

00:01:22.000 --> 00:01:28.000
Осы аптада Amazon RDS Primary 
Instance қосылады. Бұл - дерекқор.

00:01:28.000 --> 00:01:36.488
Егер бизнес-кейс, use case туралы айтатын
болсақ, онда алдыңғы апталарда веб-сайт құрдық,

00:01:36.512 --> 00:01:45.000
динамизмді қостық және тапсырыстарды орналастыру
мүмкіндігін қостық. Бізде EC2 инстансы бар.

00:01:45.000 --> 00:01:51.000
Сол EC2 инстансында дерекқор орнатылады
және барлық деректер сол жерде сақталады.

00:01:51.000 --> 00:01:56.000
Осы EC2 инстансына бірдеңе болса,
біз барлық деректерді жоғалтамыз.

00:01:56.000 --> 00:02:03.389
Біздің бизнестегі адамдар, бұл
деректерді бухгалтерлік есеп беру үшін

00:02:03.413 --> 00:02:12.000
пайдаланатын Софияның анасы Мартадан
бастап, мұны бірте-бірте түсіне бастады.

00:02:12.000 --> 00:02:17.634
Сондай-ақ, Фрэнк, ол бұл
деректерді барлық өнімді сату үшін

00:02:17.658 --> 00:02:23.196
қанша десерт пісіру керектігі
туралы идеяларды табу үшін

00:02:23.220 --> 00:02:29.098
немесе барлығына ұнайтын
өнімдердің жаңа түрлерімен тәжірибе

00:02:29.122 --> 00:02:35.000
жасауға пайдаланады.
Софияға қатысты кейбір сәттер де бар.

00:02:35.000 --> 00:02:42.000
Ол дерекқорды басқару біраз уақытты қажет ететінін
түсінеді. Жаңартулар мерзімді түрде шығарылады.

00:02:42.000 --> 00:02:49.000
Бұл жаңартулар дерекқорға қолданылуы
керек және бұл жүйелі түрде орын алады.

00:02:49.000 --> 00:02:52.712
Оның үстіне, дерекқорды
әкімшілендіру – бұл жеке дағды,

00:02:52.736 --> 00:02:57.000
осымен үнемі айналысатын
маманның бөлек рөлі немесе қызметі.

00:02:57.000 --> 00:03:03.000
Біреуді жаттықтыруға уақыт
жоқ, өзі де істей алмайды.

00:03:03.000 --> 00:03:09.429
Сондықтан, жалпы жиналыста бәрі
жұмыс істей беретіндей, сақталатындай,

00:03:09.453 --> 00:03:16.535
деректер жоғалып кетпейтіндей,
дерекқордың өзі өте қолжетімді, сенімді және

00:03:16.559 --> 00:03:23.267
қажет болған жағдайда масштабтау
мүмкіндігіне ие болатындай Софияны бұл

00:03:23.291 --> 00:03:30.000
жұмыстан қалай босатудың нұсқаларын
қарастыру туралы шешім қабылданды.

00:03:36.000 --> 00:03:43.327
Шешім ретінде кейіпкерлеріміздің
барлық талаптарына

00:03:43.351 --> 00:03:52.000
сәйкес келетін Amazon RDS
сервисін пайдалануға келісілді.

00:03:52.000 --> 00:03:59.000
Біздің зертханаларымыздың бөлігі ретінде Amazon
 RDS дерекқор инстансын жасайтын боламыз.

00:04:01.000 --> 00:04:08.000
Бүгінгі дәрісіміздің екінші бөліміне жеттік. Енді
дерекқор таңдауға қатысты мәселелерді талқылаймыз.

00:04:10.000 --> 00:04:18.000
Төрт бағытты арнайы қарастыру ұсынылады. Бұл
таңдауыңызда қателеспеуге мүмкіндігінше көмектеседі.

00:04:18.000 --> 00:04:25.000
Біріншісі - масштабтау. Бұл дерекқорды
масштабтау мүмкіндігі мен қажеттілігін білдіреді.

00:04:25.000 --> 00:04:29.488
Сіз өзіңіздің дерекқорыңыздың
қаншалықты үлкен екенін, оның

00:04:29.512 --> 00:04:34.000
қалай өсетінін және уақыт өте
келе қандай болатынын білесіз.

00:04:34.000 --> 00:04:44.000
Осылайша дерекқорыңыз үшін масштабтаудың
қандай деңгейі қажет деген сұраққа жауап бере аласыз.

00:04:44.000 --> 00:04:52.000
Осыдан туындайтын сұрақ - дерекқорыңыз
арқылы деректердің қандай көлемі өтеді?

00:04:52.000 --> 00:05:02.000
Әрі қарай, ескеретін екінші нәрсе - сақтау талаптары,
яғни дерекқорыңыз қаншалықты үлкен болуы керек.

00:05:02.000 --> 00:05:08.000
Бұл гигабайт, терабайт,
мүмкін петабайттағы өлшемдер.

00:05:08.000 --> 00:05:14.988
Бастапқыда болатын немесе уақыт
өте келе болуы мүмкін деректер қорының

00:05:15.012 --> 00:05:22.000
өлшеміне байланысты қай дерекқордан
бастайтыныңызды ең басында шешесіз.

00:05:22.000 --> 00:05:26.716
Келесі, үшінші - қандай
деректерді сақтайсыз, яғни

00:05:26.740 --> 00:05:33.000
объектілердің қандай өлшемі
және осы объектілердің қандай түрі.

00:05:33.000 --> 00:05:37.988
Бұл қандай да бір сандық
мәндер, жолдар, белгілер және

00:05:38.012 --> 00:05:43.000
т.б., яғни қарапайым деректер
құрылымдары болуы мүмкін.

00:05:43.000 --> 00:05:46.417
Сонымен қатар, бұл кейбір
күрделі деректер құрылымдары

00:05:46.441 --> 00:05:49.729
болуы мүмкін, яғни
объектілер, бір пішіндегі сурет

00:05:49.753 --> 00:05:53.464
объектілері, оларды деректер
базасында сақтау қажет болуы мүмкін.

00:05:53.488 --> 00:05:57.000
Мүмкін медиа файлдарды
дерекқорда сақтайсыз.

00:05:57.000 --> 00:06:11.000
Бұл жайттардың барлығын алдын ала ескеру қажет. Соңғы
бағыт - durability, деректер қорының сенімділігі.

00:06:11.000 --> 00:06:20.000
Бұл - data durability, data availability және
recoverability. Әрқайсысын толығырақ қарастырайық.

00:06:20.000 --> 00:06:27.000
Data durability - бұл
деректеріңіздің жоғалу мүмкіндігі.

00:06:27.000 --> 00:06:34.420
Data availability - деректер сақталып
тұр, бар, бірақ белгілі бір уақытта

00:06:34.444 --> 00:06:43.000
желідегі ақауларға немесе басқа мәселелерге
байланысты оған қол жеткізе алмайсыз.

00:06:43.000 --> 00:06:48.488
Белгілі бір сәттің қаншалықты маңызды
екеніне байланысты дерекқордың

00:06:48.512 --> 00:06:54.000
және деректеріңіздің durability
және availability деңгейін анықтайсыз.

00:06:54.000 --> 00:07:01.592
Әрі қарай, recoverability ұғымы бар -
бұл дерекқорыңызды қаншалықты жылдам

00:07:01.616 --> 00:07:09.000
іске қосуыңыз керек және бизнесіңіз
қандай шығындарды қабылдай алады.

00:07:09.000 --> 00:07:13.759
Сізде ай сайынғы сақтық көшірмелер
бар деп елестетіп көрейік және ай сайын

00:07:13.783 --> 00:07:19.000
бірінші күні дерекқордың сақтық көшірмесін 
жасайсыз. Ол сізде сақталынады, бар.

00:07:19.000 --> 00:07:26.000
Айдың ортасында бір мәселе туындаса, сіз
әрқашан айдың басына оралуға болатынын білесіз.

00:07:26.000 --> 00:07:30.988
Егер айдың басынан бері
қолжетімді деректер жоғалса, олар сіз

00:07:31.012 --> 00:07:36.000
үшін маңызды болмаса, бұл
сізге қажет recoverability деңгейі.

00:07:36.000 --> 00:07:42.488
Күнделікті деректер қажет десеңіз,
бүгін дерекқорда мәселе туындаса, біз

00:07:42.512 --> 00:07:49.000
сол күннің басына дейін барлық
деректерді қалпына келтіре алуымыз керек.

00:07:49.000 --> 00:07:53.000
Егер біз бүгін жасалған деректерді
жоғалтсақ, бұл сондай маңызды емес.

00:07:53.000 --> 00:07:59.729
Бұл жағдайда, әрине, сізде үлкен қаржылық
шығындар болады, өйткені шешімнің өзі

00:07:59.753 --> 00:08:07.000
күрделене түседі, бірақ сіз талап ететін
recoverability деңгейін қамтамасыз етеді.

00:08:07.000 --> 00:08:14.488
Егер бұл деректеріңіздің бір жолын да
жоғалта алмайтын деңгей болса, онда

00:08:14.512 --> 00:08:22.000
бұл жағдайда ол одан да қымбат болады.
Архитектураның өзі күрделене түседі.

00:08:22.000 --> 00:08:29.000
Деректердің бірнеше аймақтарда көшірілуі
үшін басқа AWS аймақтарын қосасыз.

00:08:29.000 --> 00:08:34.931
Бұл жағдайда сіз міндетті түрде деректеріңізді 
жоғалтпайсыз, бірақ осы күрделі IT

00:08:34.955 --> 00:08:42.000
архитектурасын сақтау үшін белгілі бір қаржылық
шығындарды көтеруіңіз керек екенін түсінесіз.

00:08:42.000 --> 00:08:48.000
Durability-ге қатысты тағы бір
мәселе - кейбір нормативтік талаптар.

00:08:48.000 --> 00:08:55.000
Мысалы, сіз қаржы саласында жұмыс істейсіз
және деректерді 5 жыл бойы сақтауыңыз керек.

00:08:55.000 --> 00:08:59.988
Сондықтан, бұл деректер сіз үшін
арзан болуы үшін, бірақ қажет болған

00:09:00.012 --> 00:09:05.000
жағдайда бұл деректерді алуға
болатын белгілі бір жерде сақталуы керек.

00:09:05.000 --> 00:09:13.000
Немесе 3 күндік деректерді жоғалта
алмайтындай талаптар қойылады.

00:09:13.000 --> 00:09:21.488
Бұл жағдайда шешіміңізді деректердің сақтық
көшірмесі 2-3 күн сайын жасалатындай құруыңыз керек

00:09:21.512 --> 00:09:30.000
және кез келген уақытта алдыңғы нұсқаға оралып,
реттеуші органның талаптарын бұзбайтын боласыз.

00:09:30.000 --> 00:09:37.000
Дерекқор түрлері туралы
айтатын болсақ, екі үлкен топ бар.

00:09:37.000 --> 00:09:46.000
Бірінші топ – Relational database, мысалы
Microsoft SQL Server, Oracle Database, MySQL.

00:09:46.000 --> 00:09:54.000
Ал екінші топ - Non-relational, мысалы
MongoDB, Cassandra, Redis және т.б.

00:09:54.000 --> 00:09:59.000
Енді олардың бір-бірінен қалай
ерекшеленетінін толығырақ қарастырайық.

00:09:59.000 --> 00:10:06.000
Реляционды деректер базасы деп айтқанда, бұл
бастапқыда пайда болған деректер қорының түрі.

00:10:06.000 --> 00:10:11.000
Бұл - дерекқордың ең танымал
түрі және оны пайдалану өте оңай.

00:10:11.000 --> 00:10:19.000
SQL-мен жұмыс істеуге болады, яғни Structured
Query Language, сұраныстың ең танымал тілі.

00:10:19.000 --> 00:10:25.150
Әрі қарай, бұл деректердің
тұтастығын қажет ететін жағдай,

00:10:25.174 --> 00:10:31.000
ол кестелердің қатаң
құрылымымен қамтамасыз етіледі.

00:10:31.000 --> 00:10:38.757
Яғни, бастапқыда data modeling орын алады, қандай
кестелер бар екенін, әр кестенің қандай өрістері бар,

00:10:38.781 --> 00:10:47.000
бұл кестелер бір-бірімен қалай байланысты екенін
анықтайсыз, ал кейін өзгертулер енгізу өте қиын.

00:10:47.000 --> 00:10:55.000
Бірақ егер бәрін басында дұрыс анықтасаңыз, онда бұл
деректермен жұмыс істеу өте қарапайым және ыңғайлы.

00:10:55.000 --> 00:11:02.176
Деректерді сақтауды осы оңтайландыру
және құрылымдау арқасында сіз оны

00:11:02.200 --> 00:11:10.000
бір үлкен кенепте сақтағанға қарағанда
әлдеқайда аз деректерді сақтайсыз.

00:11:10.000 --> 00:11:20.586
Қатаң құрылым қажет болғанда, Relational database өте
қолайлы, сирек өзгереді, деректер тұтастығын қажет

00:11:20.610 --> 00:11:31.000
етеді, оқу және жазудың экстремалды операциялары
қажет емес, керемет өнімділік қажет емес.

00:11:31.000 --> 00:11:39.000
Бұл түрге қарағанда бізде екінші топ
бар, бұл Non-relational database type.

00:11:39.000 --> 00:11:44.000
Бұл - белгілі бір тапсырма үшін деректер
базасы құрастырылған кездегі жағдай.

00:11:44.000 --> 00:11:53.000
Сондықтан Non-relational database көптеген түрлері
бар. Оларды NoSQL дерекқорлары деп те атайды.

00:11:53.000 --> 00:11:58.488
Олар икемділікпен, жоғары
ауқымдылықпен, жоғары өнімділікпен және осы

00:11:58.512 --> 00:12:04.000
дерекқормен өзара әрекеттесу үшін
әртүрлі мүмкіндіктермен сипатталады.

00:12:04.000 --> 00:12:09.000
NoSQL дерекқорлары жағдайында
SQL-ге барлық жерде қолдау көрсетілмейді.

00:12:09.000 --> 00:12:13.452
Дерекқорды көлденең
масштабтау қажет болса, бұл өте

00:12:13.476 --> 00:12:19.000
қолайлы, яғни деректердің
үлкен көлемімен жұмыс істеу керек.

00:12:19.000 --> 00:12:29.000
Дәстүрлі дерекқорлар қандай да бір себептермен 
сізге мүлдем сәйкес келмесе, қолайлы.

00:12:29.000 --> 00:12:36.988
Тағы бір мәселе, егер сізде қолданбаға
арналған өте жоғары жүктемелі сұраулар болса,

00:12:37.012 --> 00:12:45.000
онда Non-relational database реляциялық
дерекқормен салыстырғанда үнемді болуы мүмкін.

00:12:45.000 --> 00:12:54.000
Бұл слайдта сіз қол жетімді ең танымал
дерекқор сервистерінің мысалдарын көресіз.

00:12:54.000 --> 00:13:02.000
Іс жүзінде олардың саны көп, бірақ олар жиі
қолданылмайды. Сервистер екі топқа бөлінеді.

00:13:02.000 --> 00:13:09.000
Сол жағында реляционды деректер қорының
мысалдары берілген. Ең танымалы - Amazon RDS.

00:13:09.000 --> 00:13:12.000
Одан кейін Amazon
Redshift және Amazon Aurora.

00:13:12.000 --> 00:13:20.000
Естеріңізге сала кетейін, Amazon Aurora –
бұл AWS-тен жасалған in-house әзірлеме.

00:13:20.000 --> 00:13:27.000
Және ол MySQL немесе PostgreSQL қозғалтқышында
құрылған өзінің реляционды дерекқорын ұсынады.

00:13:27.000 --> 00:13:31.988
Және жергілікті AWS интеграциясын
қоспағанда, жаһандық деңгейде

00:13:32.012 --> 00:13:37.000
ол Amazon RDS-тен айырмашылығы жоқ.
Сәйкесінше, бұл vendor-lock.

00:13:37.000 --> 00:13:41.392
Бірақ сол бағаға Amazon
RDS-тегі кез келген басқа

00:13:41.416 --> 00:13:47.000
дерекқорға қарағанда тиімдірек
және өнімділікке ие боламыз.

00:13:47.000 --> 00:13:53.000
Сондықтан, сіз үшін қай
нұсқа жақсырақ, өзіңіз шешесіз.

00:13:53.000 --> 00:13:59.000
Келесі слайдтарда Amazon RDS сервисі
туралы толығырақ айтатын боламыз.

00:13:59.000 --> 00:14:04.000
Егер реляционды емес деректер базасы туралы
айтатын болсақ, онда көптеген әртүрлі типтері бар.

00:14:04.000 --> 00:14:11.000
Олардың ішіндегі ең танымалдары - Amazon DynamoDB,
одан кейін Amazon ElastiCache және Amazon Neptune.

00:14:11.000 --> 00:14:19.000
Осы үшеуінің ішінде ең танымал және жиі
қолданылатын key-value Database - Amazon DynamoDB.

00:14:19.000 --> 00:14:27.540
Және бұл дәрістерде реляционды емес деректер
базасы тобынан Amazon DynamoDB сервисін

00:14:27.564 --> 00:14:36.000
егжей-тегжейлі қарастырамыз. Осымен 
бүгінгі дәрісіміздің екінші бөлімін аяқтадық.

00:14:36.000 --> 00:14:44.000
Біз дерекқор түрін таңдау кезінде білу
және ескеру маңызды жағдайларды талдадық.

00:14:44.000 --> 00:14:48.628
Әрі қарай, реляционды
дерекқорлардың не екенін және олардың

00:14:48.652 --> 00:14:54.000
реляционды емес дерекқорлардан
қалай ерекшеленетінін салыстырдық.

00:14:54.000 --> 00:15:01.000
Және бір слайд қолданыстағы
AWS сервистеріне арналды.

00:15:01.000 --> 00:15:05.000
Олардың ішіндегі ең танымалдарын
толығырақ қарастырамыз.

00:15:05.000 --> 00:15:14.000
Енді дәрісіміздің үшінші бөлімін бастаймыз және
Amazon RDS сервисі туралы толығырақ айтатын боламыз.

00:15:14.000 --> 00:15:21.000
Amazon RDS – реляционды емес дерекқорлармен
қамтамасыз ететін толығымен managed шешім.

00:15:21.000 --> 00:15:29.000
Бұл сервисті талдауға көшпес бұрын, Managed
Database Service дегеніміз не екенін қарастырайық.

00:15:29.000 --> 00:15:34.000
Бұл слайдта үш түрлі
дерекқордың салыстыруын көресіз.

00:15:34.000 --> 00:15:39.000
Бірінші жағдайда - бұл жергілікті
дата-центрде орналасқан дерекқор.

00:15:39.000 --> 00:15:46.145
Бұл жағдайда барлығын сіз жасайсыз,
яғни іске қосылуды ұйымдастыру, желіге

00:15:46.169 --> 00:15:54.000
қосылу, қолданбаға тікелей қатысты
сәттердің барлығы сіздің жауапкершілігіңіз.

00:15:54.000 --> 00:15:59.488
Басқа жағдайда, сіздің дерекқорыңызды
Amazon EC2 ішінде орналастырған кезде, яғни

00:15:59.512 --> 00:16:05.000
серверді орнатып, онда дерекқор қолданбасын
бөлек орнатып, онымен жұмыс жасайсыз.

00:16:05.000 --> 00:16:16.282
Бұл жағдайда физикалық қатысумен байланысты
бөлік, яғни осы сервердің жанында физикалық қатысумен

00:16:16.306 --> 00:16:27.000
болатын жұмыс AWS-ке ауыстырылады, тіпті
операциялық жүйені орнату да AWS жағында болады.

00:16:27.000 --> 00:16:31.488
Барлығы іс жүзінде сіз үшін дайын,
сізге қолайлы операциялық жүйені

00:16:31.512 --> 00:16:36.000
таңдау керек және ол орнатылады
және жұмыс істеуге дайын болады.

00:16:36.000 --> 00:16:47.000
Бұл жағдайда сіз өзіңіз орындайтын дерекқорларға
қатысты тапсырмаларды көк түспен көресіз.

00:16:47.000 --> 00:16:57.913
Оң жақтағы үшінші жағдай - бізде managed AWS
database service болған кезде, дерекқорыңыздың

00:16:57.937 --> 00:17:08.000
функционалдығын басқаруға және қолдауға
қатысты барлық дерлік жұмыс AWS-ке өтеді.

00:17:08.000 --> 00:17:17.988
Сіз тек дұрыс деректер үлгісін жасауға, кестелерді
құруға, қолданбаңыз үшін дұрыс сұрауларды жасауға,

00:17:18.012 --> 00:17:28.000
яғни қолданбаңызға тікелей қатысты барлық нәрсені
жасауға және дерекқорды оңтайландыруға жауаптысыз.

00:17:28.000 --> 00:17:37.274
Жұмыстың үлкен көлемі AWS-ке аударылғанын
көресіз, AWS жағында ол мүмкіндігінше

00:17:37.298 --> 00:17:48.000
автоматтандырылған, яғни адам факторына
байланысты кейбір бұзылулар орын алатын сәт жоқ.

00:17:48.000 --> 00:17:52.527
Көп жағдайда бұл аппараттық
құралдың өзі істен шыққандықтан

00:17:52.551 --> 00:17:57.000
болады және бұл қалыпты
жағдай, бұған дайын болу керек.

00:17:57.000 --> 00:18:03.000
Ал қалғанының бәрі автоматтандырылған
және сағат секілді жұмыс істейді.

00:18:03.000 --> 00:18:10.000
Сізге бар болғаны нақты бизнес тапсырмаңызға 
мүмкіндігінше көп көңіл бөлу керек.

00:18:10.000 --> 00:18:18.993
Егер сізде шағын команда немесе қымбат мамандар
тобы болса, немесе команданың инфрақұрылымды

00:18:19.017 --> 00:18:29.000
қолдау үшін тиісті жұмыстарды орындауға уақыты
болмаса, Managed Database тамаша шешім болуы мүмкін.

00:18:34.000 --> 00:18:40.000
Amazon RDS үшін қолайлы
жағдайларды қарастырайық.

00:18:40.000 --> 00:18:44.488
Деректеріңізге транзакциялық
жолмен қол жеткізсеңіз немесе

00:18:44.512 --> 00:18:49.000
қарапайым аналитика болса,
Amazon RDS пайдалана аласыз.

00:18:49.000 --> 00:18:53.767
Деректер қорының көлемі туралы
айтатын болсақ, реляционды деректер

00:18:53.791 --> 00:18:59.000
қорында жұмыс істеу үшін терабайтқа
дейінгі кез келген өлшем қолайлы.

00:18:59.000 --> 00:19:03.444
Қолдау көрсетілетін дерекқордың
максималды өлшемдері туралы

00:19:03.468 --> 00:19:08.680
айтатын болсақ, Amazon Aurora
үшін бұл 64 терабайт, MySQL, MariaDB,

00:19:08.704 --> 00:19:13.840
Oracle және Postgres үшін бұл
екі есе аз - бұл 32 терабайт, ал ең

00:19:13.864 --> 00:19:19.000
кішісі - Microsoft SQL Server, ол
максимум 16 терабайтты қолдайды.

00:19:21.000 --> 00:19:27.488
Amazon RDS пайдаланудың қосымша
артықшылығы - сақтау көлемін дерекқор

00:19:27.512 --> 00:19:34.000
инстансын тоқтатудың қажетінсіз
динамикалық түрде арттыруға болады.

00:19:35.000 --> 00:19:39.000
Егер өнімділік туралы айтатын
болсақ, онда екі нұсқа бар.

00:19:39.000 --> 00:19:44.988
Бірінші опция - General
SSD, ол 1 гигабайт жад үшін

00:19:45.012 --> 00:19:51.000
3 IOPS береді, яғни 3 Input
Output Operations Per Second.

00:19:51.000 --> 00:19:57.224
Тиісінше, егер сізде 100 гигабайт
дерекқор болса, 3-ке көбейтесіз, сонда

00:19:57.248 --> 00:20:04.000
300 болады, бұл жағдайда сіздің
дерекқорыңыз 300 IOPS операциясын қолдайды.

00:20:04.000 --> 00:20:18.000
Қажет болса, ол 3000 IOPS дейін
көтерілуі мүмкін, бірақ бұл қысқа мерзімді.

00:20:18.000 --> 00:20:26.000
Яғни, егер осындай жүктемелер болса, Amazon
RDS бұл жағдайда да қолайлы болуы мүмкін.

00:20:26.000 --> 00:20:33.000
Егер жүктеме одан да көп болса, сақтаудың
басқа түрі бар, бұл Provisioned IOPS SSD storage.

00:20:33.000 --> 00:20:40.000
Бұл жағдайда ол одан да көп енгізу
және шығару операцияларын қолдайды.

00:20:44.000 --> 00:20:51.676
Егер Amazon RDS сервисінде қолдау
көрсетілетін қозғалтқыштар туралы айтатын болсақ,

00:20:51.700 --> 00:20:59.000
онда бұл Microsoft SQL Server, Oracle,
MySQL, Postgres, Aurora және MariaDB.

00:20:59.000 --> 00:21:12.000
Деректер қоры типтері және типтердің
топтары туралы айтатын болсақ, онда 3 түрі бар.

00:21:12.000 --> 00:21:24.000
Біріншісі - Т family. Бұл көптеген жұмыс жүктемелері
үшін қолайлы, ол Burstable instances деп те аталады.

00:21:24.000 --> 00:21:32.642
Яғни, қандай да бір сәтте үлкен жүктеме
болса, онда дерекқор инстансының бұл

00:21:32.666 --> 00:21:42.000
түрі қосымша ақыға біраз уақыт оның
сипаттамаларынан қосымша жұмыс істей алады.

00:21:42.000 --> 00:21:48.988
Егер екінші топ туралы айтатын болсақ - бұл M
family, бұл жүктемелеріңіз CPU-intensive қажет

00:21:49.012 --> 00:21:56.000
ететін жағдай, яғни олар үлкен есептеу қуатын
қажет етеді, ал жүктеме процессорда болады.

00:21:56.000 --> 00:22:02.000
Бұл жағдайда дерекқор
түрлерінің осы тобын таңдай аласыз.

00:22:02.000 --> 00:22:09.988
Егер үшінші топ туралы айтатын
болсақ, бұл - R family, ол барлығы шартты

00:22:10.012 --> 00:22:18.000
түрде тең болған жағдайда, онда
операциялық жадтың үлкен көлемі болады.

00:22:18.000 --> 00:22:27.988
Бұл үлкен күрделі сұраулар немесе деректер қорына
қосылымдар саны көп болған кезде және сәйкесінше

00:22:28.012 --> 00:22:38.000
операциялық жадта жүктеме болғанда. Бұл
жағдайда осы топтағы инстанс түрлерін қарастырасыз.

00:22:38.000 --> 00:22:44.898
Ең танымал пайдалану жағдайларының бірін
қарастырайық, қолданба бар, пайдаланушылар

00:22:44.922 --> 00:22:51.230
кейбір деректерді жасайды, бұл
деректер сізге жетеді, мысалы, S3 үшін және

00:22:51.254 --> 00:22:57.901
сол жерде оның өңделмеген түрінде
сақталады, содан кейін бұл деректер өңделеді,

00:22:57.925 --> 00:23:04.400
белгілі бір пішінге келтіріледі және
содан кейін деректер өңделгеннен кейін

00:23:04.424 --> 00:23:10.513
сіз оны кез келген жерде сақтайсыз,
мысалы, ұзақ мерзімді сақтау үшін S3

00:23:10.537 --> 00:23:17.570
жүйесінде, сондай-ақ сол деректерді деректер
қоймасына тасымалдайсыз, мысалы, бұл

00:23:17.594 --> 00:23:23.899
деректер қарапайым аналитика және
осы деректерге негізделген кейбір маңызды

00:23:23.923 --> 00:23:30.740
бизнес қорытындыларын табу үшін
пайдаланылатын Amazon RDS сервисі болуы мүмкін.

00:23:30.740 --> 00:23:36.144
Енді Multi-AZ Deployment функционалдығын
толығырақ қарастырайық. Бұл

00:23:36.168 --> 00:23:42.380
дерекқорларымызға жоғары қолжетімділікті
қамтамасыз етуге мүмкіндік береді.

00:23:42.380 --> 00:23:50.531
Идея мынада: аймақ бар, аймақта бірнеше
availability zone бар және Multi-AZ Deployment

00:23:50.555 --> 00:23:58.034
функциясы қосулы болғанда біз қажетті
availability zone таңдаймыз және Amazon

00:23:58.058 --> 00:24:05.973
RDS екі дерекқор инстансын орналастырады,
біреуі негізгі, екіншісі standby ретінде

00:24:05.997 --> 00:24:13.520
және қажет болса, негізгі дерекқорды
осы екі инстанстың арасында ауыстырады.

00:24:13.520 --> 00:24:18.824
Бұл белгілі бір мәселелер туындаған
жағдайда негізгі дерекқор инстансын

00:24:18.848 --> 00:24:25.140
автоматты түрде ауыстыру мүмкіндігін
және үлкен қолжетімділікті қамтамасыз етеді.

00:24:25.140 --> 00:24:30.916
Қандай мәселелер туындауы мүмкін,
мысалы егер тұтастай алғанда availability

00:24:30.940 --> 00:24:36.560
zone-да қандай да бір ақаулар болса,
автоматты түрде ауысу орын алады.

00:24:36.560 --> 00:24:43.745
Әрі қарай, егер желіде ақаулар болса, егер
процессор немесе осы нақты сервердегі кез

00:24:43.769 --> 00:24:51.560
келген басқа аппараттық құрал кенеттен
істен шықса, автоматты түрде failover орын алады.

00:24:51.560 --> 00:24:57.080
Соңғысы, егер деректеріңізді сақтауға қатысты
аппараттық құралмен мәселе туындаған жағдайда.

00:24:57.080 --> 00:25:03.832
Бұл жағдайда automated failover іске
қосылады және екінші standby дерекқор

00:25:03.856 --> 00:25:11.720
инстансы негізгіге айналады, ал негізгі
болған инстанс екінші standby күйіне өтеді.

00:25:11.720 --> 00:25:18.552
Қолданба үшін мұның бәрі
ашық болады, өйткені дерекқорға

00:25:18.576 --> 00:25:25.407
endpoint сілтемесі өзгермейді
және ауысудан кейін қолданба

00:25:25.431 --> 00:25:32.624
бұрын жұмыс істеген режимде
жұмысын жалғастыра алады.

00:25:32.648 --> 00:25:39.840
Яғни, автоматты failover сізден
қолма-қол жұмысты қажет етпейді.

00:25:41.840 --> 00:25:50.040
Басқа функционал дерекқорыңыздың жұмысын жақсарту
үшін пайдаланылатын read replicas деп аталады.

00:25:50.040 --> 00:26:00.280
Яғни, тек оқуға арналған
дерекқордың арнайы түрі жасалады.

00:26:00.280 --> 00:26:03.320
Ол арқылы сіз дерекқорды өзгерте
алмайсыз және ештеңе жаза алмайсыз.

00:26:03.320 --> 00:26:13.520
Сіз read replica жасағанда, негізгі дерекқорды ауыр
немесе жиі оқылатын әрекеттерден босатуға болады.

00:26:13.520 --> 00:26:25.720
Осылайша, жүктеме read replica-ға өтеді. Айта кету
керек, олардың арасындағы синхрондау асинхрондалған.

00:26:25.720 --> 00:26:29.880
Яғни, деректер бірден пайда
болмайды, сәл кідіріспен.

00:26:29.880 --> 00:26:37.480
Бұл функционалдылыққа төрт қозғалтқыш қолдау
көрсетеді: mysql, MariaDB, Postgres және Oracle.

00:26:38.480 --> 00:26:48.640
Бар негізгі шектеулер - негізгі дерекқор
инстансында ең көбі 5 read replica жасай аласыз.

00:26:48.640 --> 00:26:55.809
Егер сізге жазылғаннан кейін
деректерді бірден оқуға болатын қатаң

00:26:55.833 --> 00:27:04.880
read-after-write consistency қажет болса,
онда негізгі дерекқорлардан оқу керек.

00:27:04.880 --> 00:27:12.048
Барлық басқа жағдайларда, деректердің
аз уақыт ішінде, әдетте бір секундтан аз

00:27:12.072 --> 00:27:19.240
уақытқа синхрондалмағаны қолайлы болған
кезде, read replica пайдалану ұсынылады.

00:27:19.240 --> 00:27:25.061
Жалпы пайдалану жағдайларының
бірі - қолданбаның пайдалануы

00:27:25.085 --> 00:27:31.408
үшін негізгі дерекқорға
жүктемелерді азайту үшін read replicas

00:27:31.432 --> 00:27:37.195
жасау және қосымша read replica
жасалады, онда басшылыққа

00:27:37.219 --> 00:27:43.600
есептерді шығаруға арналған
кейбір күрделі сұраулар өңделеді.

00:27:43.600 --> 00:27:49.760
Сәйкесінше басшылық осы есептерді
талдап, кейбір іскерлік шешімдерді қабылдайды.

00:27:49.760 --> 00:27:58.000
Бұл есептер қолданбадағы пайдаланушылардың
негізгі жүктемесін бұзбай жасалады.

00:27:58.000 --> 00:28:04.040
Сақтық көшірмелерге қатысты
бірнеше сөз қосқым келеді.

00:28:04.040 --> 00:28:10.122
Яғни, manual backup деген опция бар,
automatic backups көшірмелер бар, онда кестені

00:28:10.146 --> 00:28:16.080
орнатасыз және деректер қорыңыздың
сақтық көшірмелері кестеге сәйкес жасалады.

00:28:16.080 --> 00:28:22.303
Олар S3 bucket-те сақталады, бұл S3
bucket бір аймақта орналасуы мүмкін, қажет

00:28:22.327 --> 00:28:29.360
болса, disaster recovery үшін басқа аймақтағы
S3 bucket-те снапшоттар жасауға болады.

00:28:29.360 --> 00:28:35.960
Сондай-ақ, бизнес тапсырмаңызға қажет болса,
снапшотты басқа AWS аккаунтына жіберуге болады.

00:28:35.960 --> 00:28:46.760
Біз ең танымал реляционды дерекқор сервисі
Amazon RDS туралы толығырақ талқыладық.

00:28:46.760 --> 00:28:56.080
Енді қалған екі реляционды дерекқор сервистеріне
тоқталайық, Amazon Aurora және Amazon Redshift.

00:28:56.080 --> 00:29:02.680
Amazon Aurora да fully managed
реляционды дерекқор сервисі болып табылады.

00:29:02.680 --> 00:29:07.760
Оны AWS үшін AWS командасы
жазған, яғни бұл MySQL және

00:29:07.784 --> 00:29:13.920
PostgreSQL қозғалтқыштарына
негізделген жергілікті AWS шешімі.

00:29:13.920 --> 00:29:23.920
Осылайша, MySQL немесе Postgres дерекқорын
Amazon Aurora сервисіне оңай тасымалдай аласыз.

00:29:23.920 --> 00:29:32.751
Бұл сервис транзакциялық жұмыс жүктемелері
үшін де қолайлы, өйткені бұл дерекқорды

00:29:32.775 --> 00:29:41.388
AWS командасы жазғандықтан, ол сәйкесінше
оңтайландырылған және бірдей бағаға,

00:29:41.412 --> 00:29:50.299
барлық басқа шарттары тең болса, стандартты
MySQL-мен салыстырғанда бес есе өнімді

00:29:50.323 --> 00:29:58.880
және стандартты PostgreSQL-пен
салыстырғанда үш есе өнімді дерекқорды аласыз.

00:29:58.880 --> 00:30:03.175
Егер сізді осы сынақтардың
егжей-тегжейлері қызықтырса, оларды

00:30:03.199 --> 00:30:08.200
қарапайым сұраныс жазу арқылы
іздеу жүйесі арқылы оңай табуға болады.

00:30:08.200 --> 00:30:16.968
Сондай-ақ, Aurora айтарлықтай жоғары durability
қамтамасыз етеді, яғни деректеріңізді үш түрлі

00:30:16.992 --> 00:30:25.760
availability аймағында алты түрлі жерде сақтау
арқылы сақтау сенімділігін қамтамасыз етеді.

00:30:25.760 --> 00:30:32.800
Бұл өте сенімді шешім және сіздің
деректеріңізді жоғалту ықтималдығы аз.

00:30:32.800 --> 00:30:41.268
Егер өнімділікті арттыру мүмкіндіктері
туралы айтатын болсақ, төрт

00:30:41.292 --> 00:30:49.760
Amazon RDS қозғалтқышы бес
read replica-ға дейін қолдау көрсетеді.

00:30:49.760 --> 00:30:54.596
Егер Aurora туралы айтатын
болсақ, бұл үш есе көп.

00:30:54.620 --> 00:31:00.280
Бір негізгі Aurora инстансы үшін
15 read replica жасауға болады.

00:31:00.280 --> 00:31:07.080
Осылайша, ол кез келген басқа Amazon RDS
қозғалтқышына қарағанда ауқымды бола алады.

00:31:07.080 --> 00:31:11.622
Бірақ Amazon Aurora пайдаланған
кезде AWS-ке байланғаныңызды,

00:31:11.646 --> 00:31:16.720
яғни сізде белгілі бір vendor lock
бар екенін ескеру өте маңызды.

00:31:16.720 --> 00:31:24.392
Егер сіздің компанияңыз бастапқыда AWS-ке
көшуді шешсе, жеңілдіктер беретін қосымша

00:31:24.416 --> 00:31:31.620
келісім-шарттар бар немесе AWS-те
маманданған командаңызбен шектелсеңіз және

00:31:31.644 --> 00:31:39.553
бұлттық провайдерді өзгерту сіздің
командаңыздың өнімділігіне айтарлықтай әсер етеді

00:31:39.577 --> 00:31:47.200
және тұтастай алғанда күмән тудыратын
болса, онда, иә, сіз AWS-ке байланғансыз.

00:31:47.200 --> 00:31:52.200
Бұл жағдайда еш күмәнсіз, сервисті пайдаланып,
барлық артықшылықтарды қолдана бересіз.

00:31:52.200 --> 00:31:59.640
Мұнда Amazon Aurora serverless
нұсқада да бар екенін атап өткім келеді.

00:31:59.640 --> 00:32:05.856
Serverless Aurora - бұл сізде дерекқор
инстансы орнатылған және онымен жұмыс

00:32:05.880 --> 00:32:12.760
істесеңіз, жүктеме болмаған кезде, ол
өшеді және бұл уақыт үшін төлем жасамайсыз.

00:32:12.760 --> 00:32:20.846
Осылайша, тұрақсыз жұмыс жүктемелері
үшін Amazon Aurora компаниясының

00:32:20.870 --> 00:32:28.360
serverless шешімі Lambda-мен
бірге тамаша шешім болуы мүмкін.

00:32:28.360 --> 00:32:40.363
Қолданбаңызды, сервисіңізді дамытқаннан кейін және
тұрақты жүктемелерге жеткеннен кейін, ең алдымен,

00:32:40.387 --> 00:32:53.240
Serverless Aurora-дан стандартты deployment-ке
ауысуыңыз керек, бұл тиімдірек шешім болады.

00:32:53.240 --> 00:33:04.360
Келесі сервис - Amazon Redshift болып табылады.
Бұл Data Warehouse, DWH ұсынатын сервис.

00:33:04.360 --> 00:33:11.834
Бұл барлық деректеріңізді сақтауға және сол
жерде кейбір аналитикалық есептеулерді жүргізуге

00:33:11.858 --> 00:33:18.920
болатын орын, яғни OLAP жүктемелері.
Ол жүктемелердің осы түрі үшін арнайы жасалған.

00:33:18.920 --> 00:33:24.920
Бұл - сонымен қатар өлшемі
петабайтқа дейін кеңейе алатын сервис.

00:33:24.920 --> 00:33:32.837
Тағы бір ерекшелігі, ол Amazon S3 сервисімен
жүйелі түрде біріктірілген және Redshift

00:33:32.861 --> 00:33:40.400
ішінде S3 жүйесіндегі деректер бойынша
сұраулар жасай аласыз, бұл өте ыңғайлы.

00:33:42.400 --> 00:33:47.520
Осымен дәрісіміздің үшінші
бөлімінің соңына жеттік.

00:33:47.520 --> 00:33:51.199
Біз Managed AWS Database
Service не екенін және оның

00:33:51.223 --> 00:33:55.480
басқа орналастыру опцияларынан
айырмашылығын қарастырдық.

00:33:55.480 --> 00:33:59.016
Amazon RDS сервисін, оның қандай
мүмкіндіктері бар екенін және осы сервисті

00:33:59.040 --> 00:34:02.480
пайдалану үшін қандай жағдайлар
бар екенін егжей-тегжейлі қарастырдық.

00:34:02.480 --> 00:34:10.920
Әрі қарай, ең танымал реляционды
дерекқор сервистерін қарастырдық.

00:34:10.920 --> 00:34:17.320
Бұл Amazon Aurora және Amazon Redshift.
Осымен бүгінгі дәрісіміз аяқталды.

00:34:17.320 --> 00:34:24.240
Бүгінгі қарастырылған AWS сервистерін
жақсырақ түсіндіңіз деп үміттенемін.

00:34:24.240 --> 00:34:29.040
Назарларыңызға рақмет.
Келесі белсенділіктерде кездескенше.
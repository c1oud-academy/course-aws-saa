WEBVTT

1
0:00:00.000 --> 0:00:05.000
Добрый день, уважаемые студенты! Рад вас видеть на очередной лекции.

2
0:00:05.000 --> 0:00:11.000
Эта лекция является первой частью большой темы, связанной с Compute.

3
0:00:11.000 --> 0:00:15.000
Это сервисы, связанные с вычислениями в облаке.

4
0:00:15.000 --> 0:00:18.000
В первую очередь это Amazon EC2, о чем мы сегодня будем с вами говорить.

5
0:00:18.000 --> 0:00:20.000
И так, давайте начнем.

6
0:00:20.000 --> 0:00:26.000
В сегодняшней нашей лекции мы затронем 6 подтем.

7
0:00:26.000 --> 0:00:32.000
В первой части мы вспомним про наш бизнес-кейс в рамках лабораторной работы.

8
0:00:32.000 --> 0:00:35.000
Посмотрим, что мы будем выполнять на этой неделе.

9
0:00:35.000 --> 0:00:39.000
Далее освежим в памяти, что же такое сервис Amazon EC2,

10
0:00:39.000 --> 0:00:41.000
несколько дополнительных новых деталей.

11
0:00:41.000 --> 0:00:48.000
Далее поговорим подробнее про AMI, что это такое, какие есть преимущества и недостатки.

12
0:00:48.000 --> 0:00:55.000
Далее на четвертой теме мы подробнее обсудим, как правильно выбрать тип EC2 инстанса

13
0:00:55.000 --> 0:00:59.000
в зависимости от use кейсов, бизнес-задачи.

14
0:00:59.000 --> 0:01:06.000
В последних двух темах поговорим о важном функционале, это User Data

15
0:01:06.000 --> 0:01:15.000
и какие есть IT-ресурсы, связанные с хранением, которые работают с сервисом Amazon EC2.

16
0:01:17.000 --> 0:01:19.000
Мы начинаем первую часть.

17
0:01:19.000 --> 0:01:29.000
А это именно связано с нашими лабораторными работами, по ходу курса мы будем разрабатывать IT-архитектуру в облаке AWS,

18
0:01:29.000 --> 0:01:31.000
которую вы видите на этом слайде.

19
0:01:31.000 --> 0:01:34.000
Каждую неделю мы добавляем новый компонент.

20
0:01:34.000 --> 0:01:40.000
На этой неделе мы будем добавлять EC2 инстансы в связке с Amazon EFS.

21
0:01:42.000 --> 0:01:45.000
Это все, что связано с технической частью.

22
0:01:45.000 --> 0:01:53.000
Теперь давайте подробнее поговорим про сам бизнес-кейс, для чего можно эту техническую задачу решать.

23
0:01:53.000 --> 0:02:01.000
Мы с вами помним, что в рамках бизнес-кейса у нас есть пекарня и кафе, владельцами которых являются Фрэнк и Марта.

24
0:02:01.000 --> 0:02:06.000
Также им в этом помогают София, дочка, и Нихил, работник.

25
0:02:06.000 --> 0:02:13.000
После того, как они запустили статический веб-сайт, количество посетителей увеличилось.

26
0:02:13.000 --> 0:02:16.000
Это очень сильно обрадовало владельцев.

27
0:02:16.000 --> 0:02:32.000
Они начали рассматривать дальнейшие шаги развития и остановились на том, что большее количество посетителей забегает в кафе,

28
0:02:32.000 --> 0:02:40.000
для того, чтобы по дороге купить некоторую продукцию и дальше поехать по своим делам.

29
0:02:40.000 --> 0:02:50.000
В связи с этим удобно было бы, в том числе по просьбам клиентов, добавить возможность онлайн заказа на веб-сайт.

30
0:02:50.000 --> 0:02:58.000
То есть, с технической точки зрения, это уже не статический, а динамический веб-сайт, на котором можно оставлять заказ.

31
0:02:58.000 --> 0:03:06.000
Также в рамках этого бизнес-кейса у нас будет возможность посмотреть, какие заказы были сделаны на отдельной странице,

32
0:03:06.000 --> 0:03:10.000
чтобы продемонстрировать динамичность этого веб-сайта.

33
0:03:10.000 --> 0:03:20.000
Отлично, на этом мы заканчиваем первую часть и переходим к следующей.

34
0:03:20.000 --> 0:03:25.000
Мы переходим ко второй части нашей сегодняшней лекции.

35
0:03:25.000 --> 0:03:32.000
Перед тем, как ее начнем, давайте вспомним, какие у нас есть основные сервисы, связанные с вычислениями.

36
0:03:32.000 --> 0:03:43.000
Их можно разделить на пять различных групп. Отличаются они тем, что в самом первом у нас высокий контроль над инфраструктурой.

37
0:03:43.000 --> 0:03:47.000
Мы можем как угодно кастомизировать ее части.

38
0:03:47.000 --> 0:04:00.000
Таким образом идет смещение до serverless, когда мы большую часть работ по обслуживанию IT-инфраструктуры передаем AWS.

39
0:04:00.000 --> 0:04:03.000
Таким образом делаем лишь ту меньшую часть.

40
0:04:03.000 --> 0:04:08.000
Давайте пройдемся по каждой из групп. Первая - это Virtual Machines.

41
0:04:08.000 --> 0:04:20.000
То есть тот случай, когда мы получаем виртуальную машину, можно к ней подключаться по SSH, все необходимые настройки делать, любое приложение устанавливать.

42
0:04:20.000 --> 0:04:35.000
И в этом случае, если говорить про сервисы, это Amazon EC2, Elastic Compute Cloud, самый основной сервис. А также немного отличающийся, но также предоставляющий виртуальные сервера, это Amazon Lightsail.

43
0:04:35.000 --> 0:04:44.000
Следующий уровень, у нас уже чуть меньше контроля, но тем не менее есть, это Containers.

44
0:04:44.000 --> 0:04:49.000
Самым явным представителем является Amazon ECS, работает с Docker-контейнерами.

45
0:04:49.000 --> 0:04:54.000
Третья группа - это так называемый PaaS, Platform as a Service

46
0:04:54.000 --> 0:05:00.000
и сервисом, который ее представляет, является AWS Elastic Beanstalk.

47
0:05:00.000 --> 0:05:11.000
Идея в том, что вы пишете код вашего приложения, готовите некоторый документ, который описывает конфигурацию вашей инфраструктуры и загружаете в этот сервис.

48
0:05:11.000 --> 0:05:23.000
Далее уже происходит следующее: AWS Elastic Beanstalk берет на себя все те моменты, связанные с поднятием этой инфраструктуры, поднимает все необходимые дополнительные ресурсы

49
0:05:23.000 --> 0:05:34.000
и вам уже в удобном виде можно будет через UI, то есть через AWS Management Console управлять вашей инфраструктурой.

50
0:05:34.000 --> 0:05:46.000
Четвертая группа является Serverless, когда мы фактически передаем AWS все, что связано с обслуживанием IT-инфраструктуры, а нам лишь нужно писать код.

51
0:05:46.000 --> 0:05:56.000
Ярким представителем является AWS Lambda, вы пишите код, загружаете ее и AWS все, что связано с обслуживанием, берет на себя.

52
0:05:56.000 --> 0:06:02.000
А вы оплачиваете только за количество гигабайт в секунд исполнения Lambda функции.

53
0:06:02.000 --> 0:06:10.000
В случае, когда у вас ваша Lambda функция не исполняется, вы ни за что не оплачиваете. Это и есть преимущество Serverless.

54
0:06:10.000 --> 0:06:29.000
Я здесь хотел отметить, обычно, если у вас постоянные нагрузки, которые равномерные, то рекомендуется отдавать предпочтение Amazon EC2 либо ближайшие к нему сервисы.

55
0:06:29.000 --> 0:06:45.000
Если же вы, например, небольшой стартап, либо у вас та часть вашей IT-инфраструктуры, у которой нагрузки непостоянные, они приходят с различными всплесками,

56
0:06:45.000 --> 0:06:54.000
есть периоды, когда нагрузка совсем не приходит, в этом случае рекомендуется смотреть в сторону Serverless, так как в момент отсутствия нагрузки вы ничего не оплачиваете.

57
0:06:54.000 --> 0:07:02.000
Таким образом, Serverless решения в подобных нагрузках являются более экономичным решением.

58
0:07:02.000 --> 0:07:14.000
Еще одним представителем Serverless является AWS Fargate. Это тот сервис, который позволяет нам управлять нашими контейнерами.

59
0:07:14.000 --> 0:07:20.000
Это специальное отдельное Serverless решение, которое помогает с этим справляться.

60
0:07:20.000 --> 0:07:31.000
Также хотелось бы отметить два сервиса немного из другой категории, тоже связанных с вычислениями. Это AWS Outposts.

61
0:07:31.000 --> 0:07:49.000
Идея в том, что вы можете для ваших локальных вычислительных мощностей привязать сервис AWS Outposts и управлять вашими мощностями, как будто бы это AWS мощности.

62
0:07:49.000 --> 0:08:02.000
Второй пример - это AWS Batch, сервис, который позволяет нам выполнять некоторые задачи бачами, то есть некоторыми группами.

63
0:08:06.000 --> 0:08:17.000
На этой лекции мы подробно поговорим про сервис Amazon Elastic Compute Cloud (Amazon EC2). Что же это такое? Это сервис, который предоставляет нам виртуальные машины, то есть сервера.

64
0:08:17.000 --> 0:08:28.000
У нас есть возможность, используя API либо AWS Management Console, поднимать эти сервера в течение нескольких минут абсолютно в любом количестве.

65
0:08:28.000 --> 0:08:40.000
При необходимости мы можем автоматически настроить масштабирование как в сторону увеличения, так и в сторону уменьшения, в зависимости от нашей нагрузки на нашу IT-инфраструктуру.

66
0:08:40.000 --> 0:08:55.000
Более того, благодаря тому, что сервис облачный, он позволяет нам платить только за те вычислительные мощности, которые нам нужны.

67
0:08:55.000 --> 0:09:10.000
Приведу пример, если мы говорим, что нам нужны кратковременные вычислительные мощности для некоторых расчетов, и эти расчеты при запуске, например, 100 машин занимают 3 дня,

68
0:09:10.000 --> 0:09:21.000
мы можем действительно запросить 100 серверов любой конфигурации, которые имеются у AWS, и запустить их на 3 дня.

69
0:09:21.000 --> 0:09:34.000
После того, как мы завершим все наши расчеты, мы можем вернуть обратно эти сервера, и после окончания месяца нам придет счет на оплату именно на эти 3 дня, на то количество серверов, которое работало.

70
0:09:34.000 --> 0:09:37.000
Таким образом, мы платим только за то, что мы используем.

71
0:09:37.000 --> 0:09:52.000
Пару слов о том, из чего состоит Amazon EC2. Мы с вами знаем, у нас есть AWS Regions, далее в каждом AWS Regions несколько availability zone, и в рамках availability zone несколько дата-центров.

72
0:09:52.000 --> 0:09:59.000
В дата-центре у нас десятки тысяч серверов, и каждый сервер максимально мощный, насколько это возможно.

73
0:09:59.000 --> 0:10:12.000
Теперь благодаря использованию гипервизора, мы фактически имеем возможность один мощный физический сервер разделить на сотни мелких виртуальных серверов.

74
0:10:12.000 --> 0:10:25.000
Таким образом, в рамках сервиса Amazon EC2 есть возможность выбрать такую конфигурацию, какую мы хотим, из более чем 700 различных вариантов.

75
0:10:25.000 --> 0:10:38.000
Когда мы получаем виртуальный сервер, он в себе содержит CPU, то есть саму вычислительную мощность, RAM, которая является оперативной памятью,

76
0:10:38.000 --> 0:10:48.000
и то, что хранит данные, это либо Instance Store, либо Amazon EBS. Amazon EBS - это отдельный сервис, который предоставляет нам постоянное хранение.

77
0:10:48.000 --> 0:10:57.000
Когда мы говорим про Instance Store, это временное хранение. Про особенности и отличия этих двух вариантов хранения мы поговорим чуть позже.

78
0:11:00.000 --> 0:11:07.000
Давайте пару слов скажем про use cases использование сервиса Amazon EC2.

79
0:11:07.000 --> 0:11:14.000
Обычно этот сервис выбирается, если нам нужен полный контроль над нашими вычислительными ресурсами.

80
0:11:14.000 --> 0:11:24.000
При работе с виртуальными серверами мы можем установить любое приложение, мы можем сконфигурировать его так, как мы хотим, и никто нас в этом не ограничивает.

81
0:11:24.000 --> 0:11:36.000
Мы можем установить любую операционную систему, и таким образом практически любую IT-инфраструктуру, любое приложение, которое хостится на локальном дата-центре,

82
0:11:36.000 --> 0:11:46.000
работающих на физических серверах, можно перенести на сервис Amazon EC2 в облако AWS.

83
0:11:46.000 --> 0:11:58.000
Также мы начинаем использовать сервис Amazon EC2 в случае, если мы хотим оптимизировать наши расходы на вычислительные мощности.

84
0:11:58.000 --> 0:12:12.000
У нас есть возможность купить Reserved Instances, у нас есть возможность использовать Spot Instances, а также есть Savings Plans, которые дают значительные скидки за использование виртуальных серверов Amazon EC2.

85
0:12:16.000 --> 0:12:23.000
При настройке виртуального сервера EC2 нам необходимо принять несколько решений.

86
0:12:23.000 --> 0:12:26.000
Давайте пройдемся по самым основным шагам.

87
0:12:26.000 --> 0:12:35.000
Самое первое - нужно определиться с AMI, либо это AMI, который мы сами приготовим, либо использовать AMI существующий от AWS.

88
0:12:35.000 --> 0:12:42.000
Далее, мы определяем какой тип инстанса мы будем использовать.

89
0:12:42.000 --> 0:12:51.000
В этом случае мы должны знать какое количество процессоров, какое количество оперативной памяти и хранения нам нужно.

90
0:12:51.000 --> 0:13:03.000
Далее, мы можем дополнительно указать как мы хотим, чтобы наши EC2 инстансы располагались в дата-центре.

91
0:13:03.000 --> 0:13:06.000
Про это мы поговорим в следующих слайдах.

92
0:13:06.000 --> 0:13:17.000
Если наше приложение работает с другими сервисами, то также необходимо настроить роль, которая будет использовать наш инстанс и обращаться к другим сервисам.

93
0:13:17.000 --> 0:13:22.000
Необходимо также понять будем ли мы использовать User Data или нет.

94
0:13:22.000 --> 0:13:33.000
Часть команд по преднастройке нашего инстанса мы можем добавить в AMI, часть по некоторым причинам расположить в AMI не получится,

95
0:13:33.000 --> 0:13:42.000
поэтому необходимо настроить User Data, который будет исполнять некоторые команды в момент поднятия инстанса.

96
0:13:42.000 --> 0:13:49.000
Нужно решить также вопросы связанные с хранением.

97
0:13:49.000 --> 0:13:58.000
У нас есть два варианта, как мы помним, есть возможность использовать Instance store, это старая опция или использовать Amazon EBS,

98
0:13:58.000 --> 0:14:09.000
отдельный сервис, который предоставляет нам Persistent Block Storage, то есть постоянное блочное хранение, что является рекомендацией и best practice от AWS.

99
0:14:09.000 --> 0:14:21.000
Далее необходимо рассмотреть вопросы, связанные с безопасностью - это настройка Security Group, какой трафик разрешен, какой трафик запрещен и самое последнее Key pair,

100
0:14:21.000 --> 0:14:30.000
это ключ, который позволяет нам подключаться удаленно через SSH к нашим виртуальным серверам.

101
0:14:30.000 --> 0:14:42.000
На этом мы подошли к концу второй части нашей сегодняшней лекции, освежили в памяти что же такое сервис Amazon EC2, какие возможности он нам предоставляет,

102
0:14:42.000 --> 0:14:51.000
также остановились на тех шагах, которые необходимо выполнить для успешной настройки и запуска нашего сервера.

103
0:14:51.000 --> 0:15:04.000
Первый и самый основной - это выбор AMI, что такое AMI и какие возможности оно нам предоставляет мы рассмотрим в третьей части нашей сегодняшней лекции.

104
0:15:04.000 --> 0:15:15.000
Давайте теперь подробнее остановимся что же такое AMI. AMI расшифровывается как Amazon Machine Image,

105
0:15:15.000 --> 0:15:25.000
это некий template шаблон, который позволяет нам на базе этого шаблона поднимать виртуальные сервера EC2.

106
0:15:25.000 --> 0:15:35.000
Как вы видите на картинке с использованием одного лишь AMI мы можем поднять абсолютно идентичные EC2 инстансы.

107
0:15:35.000 --> 0:15:45.000
AMI описывает root volume, то есть корневой раздел жесткого диска, на котором устанавливается операционная система,

108
0:15:45.000 --> 0:15:48.000
а также возможно некоторое программное обеспечение.

109
0:15:48.000 --> 0:15:55.000
Далее здесь же описывается информация какие аккаунты могут использовать этот AMI.

110
0:15:55.000 --> 0:16:06.000
Третий пункт - это описание дополнительных разделов жесткого диска для целей хранения.

111
0:16:06.000 --> 0:16:19.000
Какие же преимущества нам предоставляет AMI, это так называемые 3R - Repeatability, Reusability и Recoverability.

112
0:16:19.000 --> 0:16:25.000
Идея в том, что мы создаем этот шаблон один раз и используем его много раз.

113
0:16:25.000 --> 0:16:33.000
Более того исключается человеческий фактор и какая-то часть конфигурации настроек сидит в этом шаблоне

114
0:16:33.000 --> 0:16:38.000
и возможность получить другую конфигурацию просто невозможна.

115
0:16:38.000 --> 0:16:41.000
Таким образом исключается человеческий фактор.

116
0:16:41.000 --> 0:16:50.000
Другой момент, мы можем использовать самым примитивным образом AMI, это настроить некоторый сервер,

117
0:16:50.000 --> 0:16:56.000
установить все необходимое ПО, убедиться что все работает как нам нужно и от этого сервера создать AMI.

118
0:16:56.000 --> 0:17:02.000
Это будет кастомный шаблон, который вы можете использовать для восстановления.

119
0:17:02.000 --> 0:17:10.000
В случае, если что-то происходит и ваш сервер падает, то вы оперативно, используя ваш кастомный AMI,

120
0:17:10.000 --> 0:17:12.000
можете поднять и вернуть в строй.

121
0:17:12.000 --> 0:17:15.000
Это естественно самое простое использование.

122
0:17:15.000 --> 0:17:21.000
Есть более продвинутые практики использования AMI, о которых мы поговорим с вами в дальнейшем.

123
0:17:23.000 --> 0:17:29.000
Давайте теперь остановимся на основных моментах, которые позволяют выбрать правильный AMI.

124
0:17:29.000 --> 0:17:33.000
Существует 5 различных пунктов.

125
0:17:33.000 --> 0:17:35.000
Первый и основной - это регион.

126
0:17:35.000 --> 0:17:42.000
Мы с вами помним, что AMI создается в рамках определенного AWS региона и используется там же.

127
0:17:42.000 --> 0:17:48.000
В случае, если вы хотите использовать этот AMI в другом регионе, то вам необходимо ее скопировать.

128
0:17:48.000 --> 0:17:50.000
Это достаточно просто делается.

129
0:17:50.000 --> 0:18:01.000
В этом случае копия получает отдельный уникальный ID этого AMI и дальше используется уже независимо.

130
0:18:02.000 --> 0:18:04.000
Второй пункт - это выбор операционной системы.

131
0:18:04.000 --> 0:18:06.000
Мы не ограничены абсолютно ничем.

132
0:18:06.000 --> 0:18:09.000
Можем установить любую операционную систему.

133
0:18:09.000 --> 0:18:15.000
Наиболее частыми вариантами в этом случае являются либо Windows OS,

134
0:18:15.000 --> 0:18:19.000
либо некоторые вариации Linux OS.

135
0:18:20.000 --> 0:18:26.000
Далее необходимо определиться с IT ресурсом хранения.

136
0:18:26.000 --> 0:18:35.000
Это может быть EBS, то есть отдельный сервис, который помогает нам обеспечить постоянное блочное хранение,

137
0:18:35.000 --> 0:18:37.000
либо это Instance Store.

138
0:18:37.000 --> 0:18:44.000
Instance Store - это та память, которая физически находится возле нашей виртуальной машины.

139
0:18:44.000 --> 0:18:55.000
Она не рекомендуется, так как это старый вариант использования и как best practice рекомендуется использовать EBS ввиду его преимуществ.

140
0:18:55.000 --> 0:18:58.000
На этом мы более подробно остановимся на следующих слайдах.

141
0:18:59.000 --> 0:19:02.000
Четвертый пункт - это выбор архитектуры.

142
0:19:02.000 --> 0:19:08.000
Мы можем выбрать либо 32-битную либо 64-битную.

143
0:19:08.000 --> 0:19:12.000
Более того можем выбрать ARM архитектуру.

144
0:19:12.000 --> 0:19:17.000
Также появилась собственная разработка от AWS Graviton.

145
0:19:17.000 --> 0:19:19.000
Есть определенные преимущества.

146
0:19:19.000 --> 0:19:24.000
Более подробно вы можете ознакомиться на официальной документации AWS.

147
0:19:24.000 --> 0:19:30.000
Там проводятся различные сравнения для различных типов нагрузок,

148
0:19:30.000 --> 0:19:33.000
какие архитектуры работают лучше.

149
0:19:34.000 --> 0:19:37.000
Последний пункт - это тип виртуализации.

150
0:19:37.000 --> 0:19:43.000
Здесь есть два варианта, это PV Paravirtual и HVM Hardware Virtual Machine.

151
0:19:43.000 --> 0:19:47.000
В большинстве случаев рекомендуется использовать HVM.

152
0:19:47.000 --> 0:19:53.000
Если же мы говорим про источники откуда мы можем получить AMI.

153
0:19:53.000 --> 0:19:55.000
Первый - это Quick Start.

154
0:19:55.000 --> 0:19:59.000
Это готовые AMI предоставленные от AWS.

155
0:19:59.000 --> 0:20:02.000
Второй - это так называемые My AMIs.

156
0:20:02.000 --> 0:20:06.000
Это все те AMI, которые мы сами создаем для себя,

157
0:20:06.000 --> 0:20:07.000
кастомные AMI.

158
0:20:07.000 --> 0:20:10.000
Далее, есть AWS Marketplace.

159
0:20:10.000 --> 0:20:15.000
Это специальное место, в котором вы можете

160
0:20:15.000 --> 0:20:22.000
использовать AMI созданный другими компаниями.

161
0:20:22.000 --> 0:20:26.000
При этом никаких гарантий AWS не предоставляет.

162
0:20:26.000 --> 0:20:30.000
Поэтому использование здесь на ваш страх и риск.

163
0:20:30.000 --> 0:20:37.000
В AWS Marketplace вы можете найти как бесплатные так и платные AMI от популярных вендоров.

164
0:20:37.000 --> 0:20:39.000
Например, Red Hat и другие.

165
0:20:40.000 --> 0:20:43.000
Четвертый - это Community AMIs.

166
0:20:43.000 --> 0:20:48.000
Это те AMI, которые были созданы пользователями AWS.

167
0:20:48.000 --> 0:20:53.000
Здесь также AWS не несет никакой ответственности

168
0:20:53.000 --> 0:20:56.000
и вы используете эти AMI на свой страх и риск.

169
0:20:59.000 --> 0:21:06.000
Мы с вами добрались до сравнения двух типов хранения для Root Volume.

170
0:21:06.000 --> 0:21:09.000
Это Instance Store либо Amazon EBS.

171
0:21:09.000 --> 0:21:14.000
Предоставлена таблица в пяти различных характеристиках.

172
0:21:14.000 --> 0:21:16.000
Давайте пройдемся по каждому из них.

173
0:21:16.000 --> 0:21:23.000
Запуск инстанса с EBS намного быстрее чем запуск с Instance Store.

174
0:21:23.000 --> 0:21:29.000
Это связано с тем, что Instance Store хранит некоторые части данных в Amazon S3.

175
0:21:29.000 --> 0:21:32.000
И загрузка данных с Amazon S3 занимает некоторое время.

176
0:21:32.000 --> 0:21:39.000
Максимальный размер Root Volume

177
0:21:39.000 --> 0:21:42.000
для EBS - 16 ТБ,

178
0:21:42.000 --> 0:21:45.000
а для Instance Store всего лишь 10 ГБ.

179
0:21:45.000 --> 0:21:48.000
Но для большинства задач 10 ГБ более чем достаточно.

180
0:21:49.000 --> 0:21:53.000
Если мы говорим про возможность останавливать инстансы,

181
0:21:53.000 --> 0:21:58.000
мы это можем сделать для инстансов с EBS.

182
0:21:58.000 --> 0:22:05.000
И в момент когда инстанс остановлен, мы за это не несем никаких затрат.

183
0:22:06.000 --> 0:22:08.000
Если мы говорим про Instance Store,

184
0:22:08.000 --> 0:22:10.000
остановить такой инстанс невозможно,

185
0:22:10.000 --> 0:22:12.000
его можно лишь перезагрузить,

186
0:22:12.000 --> 0:22:14.000
либо терминейтнуть,

187
0:22:14.000 --> 0:22:16.000
то есть отключить.

188
0:22:16.000 --> 0:22:20.000
В момент когда вы отключаете все данные, которые хранились в Instance Store, пропадают.

189
0:22:22.000 --> 0:22:25.000
Если мы говорим про возможность изменять тип инстанса,

190
0:22:25.000 --> 0:22:28.000
то в случае с EBS это очень легко делается.

191
0:22:28.000 --> 0:22:32.000
Вы можете в любой момент остановить инстанс,

192
0:22:32.000 --> 0:22:34.000
изменить Instance type,

193
0:22:34.000 --> 0:22:36.000
и в момент когда вы ее включите обратно,

194
0:22:36.000 --> 0:22:38.000
Instance type уже будет изменен.

195
0:22:38.000 --> 0:22:40.000
Если мы говорим про Instance Store,

196
0:22:40.000 --> 0:22:42.000
то это сделать невозможно

197
0:22:42.000 --> 0:22:47.000
ввиду того, что это тот раздел жесткого диска,

198
0:22:47.000 --> 0:22:51.000
который находится физически рядом с виртуальным сервером.

199
0:22:51.000 --> 0:22:54.000
Поэтому при смене Instance type

200
0:22:54.000 --> 0:22:57.000
вас перекинет уже на другой физический сервер,

201
0:22:57.000 --> 0:22:59.000
у которого свой Instance store.

202
0:22:59.000 --> 0:23:01.000
Таким образом

203
0:23:01.000 --> 0:23:03.000
нет возможности изменить Instance type.

204
0:23:03.000 --> 0:23:05.000
Если мы говорим про

205
0:23:05.000 --> 0:23:07.000
вопросы оплаты,

206
0:23:07.000 --> 0:23:10.000
то в случае с EBS вы несете затраты

207
0:23:10.000 --> 0:23:13.000
по тарифам сервиса

208
0:23:13.000 --> 0:23:15.000
Amazon EBS.

209
0:23:15.000 --> 0:23:18.000
В случае когда мы говорим про затраты Instance Store,

210
0:23:18.000 --> 0:23:20.000
это те затраты,

211
0:23:20.000 --> 0:23:23.000
связанные с хранением данных в Amazon S3.

212
0:23:23.000 --> 0:23:25.000
Зачастую

213
0:23:25.000 --> 0:23:29.000
хранение данных в Amazon S3 дешевле чем в EBS.

214
0:23:31.000 --> 0:23:33.000
Если мы говорим про.

215
0:23:33.000 --> 0:23:34.000
Гигабайты.

216
0:23:34.000 --> 0:23:36.000
До 100 гигабайтов.

217
0:23:36.000 --> 0:23:38.000
То эти затраты они минимальные.

218
0:23:38.000 --> 0:23:40.000
Отличаются не сильно.

219
0:23:40.000 --> 0:23:42.000
Поэтому следует этот момент также учитывать.

220
0:23:42.000 --> 0:23:44.000
Если у вас очень большое количество.

221
0:23:44.000 --> 0:23:46.000
Серверов.

222
0:23:46.000 --> 0:23:48.000
�  вам достаточно преимуществ.

223
0:23:48.000 --> 0:23:50.000
�  недостатков.

224
0:23:50.000 --> 0:23:52.000
InstantStore.

225
0:23:52.000 --> 0:23:54.000
То вы ее можете использовать.

226
0:23:54.000 --> 0:23:56.000
�  получать некоторую выгоду.

227
0:23:56.000 --> 0:23:58.000
Ввиду того что данные хранятся в S3.

228
0:23:58.000 --> 0:24:00.000
�  это дешевле.

229
0:24:00.000 --> 0:24:02.000
Во всех остальных случаях.

230
0:24:02.000 --> 0:24:04.000
� екомендуется как best practice.

231
0:24:04.000 --> 0:24:06.000
� спользовать EBS.

232
0:24:06.000 --> 0:24:08.000
Для.

233
0:24:08.000 --> 0:24:10.000
Вашего.

234
0:24:10.000 --> 0:24:12.000
Root Volume.

235
0:24:12.000 --> 0:24:14.000
Давайте теперь.

236
0:24:14.000 --> 0:24:16.000
Поговорим немного про.

237
0:24:16.000 --> 0:24:18.000
Instance Life Cycle.

238
0:24:18.000 --> 0:24:20.000
То есть.

239
0:24:20.000 --> 0:24:22.000
Жизненный цикл.

240
0:24:22.000 --> 0:24:24.000
�  ситу инстанца.

241
0:24:24.000 --> 0:24:26.000
Все начинается из состояния.

242
0:24:26.000 --> 0:24:28.000
Pending.

243
0:24:28.000 --> 0:24:30.000
В момент когда мы запускаем первый раз.

244
0:24:30.000 --> 0:24:32.000
Наш инстанц из AMI.

245
0:24:32.000 --> 0:24:34.000
Поднимается сервер.

246
0:24:34.000 --> 0:24:36.000
�  в момент когда она.

247
0:24:36.000 --> 0:24:38.000
Включается она в состоянии.

248
0:24:38.000 --> 0:24:40.000
В состояние pending мы так же можем.

249
0:24:40.000 --> 0:24:42.000
Попадать из состояния.

250
0:24:42.000 --> 0:24:44.000
Это относится только.

251
0:24:44.000 --> 0:24:46.000
К нему.

252
0:24:46.000 --> 0:24:48.000
К нему мы можем.

253
0:24:48.000 --> 0:24:50.000
Останавливать.

254
0:24:50.000 --> 0:24:52.000
Так вот когда мы.

255
0:24:52.000 --> 0:24:54.000
Остановили ее включаем.

256
0:24:54.000 --> 0:24:56.000
В первую очередь она переходит из состояния.

257
0:24:56.000 --> 0:24:58.000
Сто пыд в состояние pending.

258
0:24:58.000 --> 0:25:00.000
Далее как только оно.

259
0:25:00.000 --> 0:25:02.000
Включится и будет готова к работе.

260
0:25:02.000 --> 0:25:04.000
� з состояния pending.

261
0:25:04.000 --> 0:25:06.000
Она перейдет в состояние running.

262
0:25:06.000 --> 0:25:08.000
С этого момента вы можете по SSH.

263
0:25:08.000 --> 0:25:10.000
Подключаться к этому инстанцу.

264
0:25:10.000 --> 0:25:12.000
�  работать с ней.

265
0:25:12.000 --> 0:25:14.000
�  вы можете.

266
0:25:14.000 --> 0:25:16.000
Перезагружать.

267
0:25:16.000 --> 0:25:18.000
Она переходит в состояние rebooting.

268
0:25:18.000 --> 0:25:20.000
�  возвращается обратно в состояние running.

269
0:25:20.000 --> 0:25:22.000
В случае когда мы делаем reboot.

270
0:25:22.000 --> 0:25:24.000
Его публичный IP адрес.

271
0:25:24.000 --> 0:25:26.000
�  физический сервер остаются теми же.

272
0:25:26.000 --> 0:25:28.000
В случае если не было проблем.

273
0:25:28.000 --> 0:25:30.000
Физически с этим сервером.

274
0:25:30.000 --> 0:25:32.000
Для EBS.

275
0:25:32.000 --> 0:25:34.000
Backed Instance.

276
0:25:34.000 --> 0:25:36.000
У нас есть возможность ее.

277
0:25:36.000 --> 0:25:38.000
Останавливать.

278
0:25:38.000 --> 0:25:40.000
Как только мы это делаем.

279
0:25:40.000 --> 0:25:42.000
В случае когда она полностью остановится.

280
0:25:42.000 --> 0:25:44.000
Она переходит в состояние stopping.

281
0:25:46.000 --> 0:25:48.000
Мы также можем отправить.

282
0:25:48.000 --> 0:25:50.000
Наш EBS.

283
0:25:50.000 --> 0:25:52.000
Backed Instance.

284
0:25:52.000 --> 0:25:54.000
На гибернацию.

285
0:25:54.000 --> 0:25:56.000
Это когда состояние текущее.

286
0:25:56.000 --> 0:25:58.000
Сохраняется в память.

287
0:25:58.000 --> 0:26:00.000
Операционную.

288
0:26:00.000 --> 0:26:02.000
�  таким образом она быстрее включается.

289
0:26:02.000 --> 0:26:04.000
В этом случае.

290
0:26:04.000 --> 0:26:06.000
Она также переходит через.

291
0:26:06.000 --> 0:26:08.000
Stopped и pending.

292
0:26:08.000 --> 0:26:10.000
Переходит в состояние врань.

293
0:26:12.000 --> 0:26:14.000
Отличие.

294
0:26:14.000 --> 0:26:16.000
От остановки и гибернации.

295
0:26:16.000 --> 0:26:18.000
В том что в случае с гибернацией.

296
0:26:18.000 --> 0:26:20.000
Мы сохраняем.

297
0:26:20.000 --> 0:26:22.000
Физический сервер.

298
0:26:22.000 --> 0:26:24.000
Он запускается на нем же.

299
0:26:24.000 --> 0:26:26.000
Сохраняются его IP адреса.

300
0:26:26.000 --> 0:26:28.000
Приватные публичные.

301
0:26:28.000 --> 0:26:30.000
�  вы продолжаете с этой машиной работать.

302
0:26:30.000 --> 0:26:32.000
В том случае если не было проблем.

303
0:26:32.000 --> 0:26:34.000
Физически с этим сервером.

304
0:26:34.000 --> 0:26:36.000
В случае когда мы ее останавливаем.

305
0:26:36.000 --> 0:26:38.000
То физический сервер который хостит нашу.

306
0:26:38.000 --> 0:26:40.000
Виртуальную машину.

307
0:26:40.000 --> 0:26:42.000
Она может сменится.

308
0:26:44.000 --> 0:26:46.000
Последнее состояние это остановка.

309
0:26:48.000 --> 0:26:50.000
Если машина.

310
0:26:50.000 --> 0:26:52.000
Она работает.

311
0:26:52.000 --> 0:26:54.000
�  мы ее терминейтим.

312
0:26:54.000 --> 0:26:56.000
Она переходит в состояние shutting down.

313
0:26:56.000 --> 0:26:58.000
Отключается и в итоге переходит в состояние.

314
0:26:58.000 --> 0:27:00.000
Terminated.

315
0:27:00.000 --> 0:27:02.000
Какое то время она в AWS Management консоли.

316
0:27:02.000 --> 0:27:04.000
У вас будет отображаться.

317
0:27:04.000 --> 0:27:06.000
Terminated и через некоторое время.

318
0:27:06.000 --> 0:27:08.000
Она совсем пропадет.

319
0:27:08.000 --> 0:27:10.000
В состоянии terminated.

320
0:27:10.000 --> 0:27:12.000
Мы также можем переходить из состояния stopped.

321
0:27:12.000 --> 0:27:14.000
То есть если.

322
0:27:14.000 --> 0:27:16.000
был остановлен.

323
0:27:16.000 --> 0:27:18.000
То мы не переводя ее в состояние running.

324
0:27:18.000 --> 0:27:20.000
Можем ее терминейтить.

325
0:27:24.000 --> 0:27:26.000
Пару слов.

326
0:27:26.000 --> 0:27:28.000
Хотелось бы сказать про создание.

327
0:27:28.000 --> 0:27:30.000
Нового AMA.

328
0:27:30.000 --> 0:27:32.000
Представим что мы находимся в регионе A.

329
0:27:32.000 --> 0:27:34.000
Есть у нас некоторые AMA.

330
0:27:34.000 --> 0:27:36.000
Будь то созданные нами.

331
0:27:36.000 --> 0:27:38.000
Будь то AMA предоставленные.

332
0:27:38.000 --> 0:27:40.000
Вот AWS либо любой другой.

333
0:27:40.000 --> 0:27:42.000
Во время запуска инстанса.

334
0:27:42.000 --> 0:27:44.000
Мы получаем.

335
0:27:44.000 --> 0:27:46.000
Точную копию AMA.

336
0:27:46.000 --> 0:27:48.000
Уже в запустившемся инстансе.

337
0:27:48.000 --> 0:27:50.000
Будет у нас unmodified instance.

338
0:27:50.000 --> 0:27:52.000
Далее мы можем подключаться.

339
0:27:52.000 --> 0:27:54.000
К этому инстанцу.

340
0:27:54.000 --> 0:27:56.000
Проводить некоторые манипуляции.

341
0:27:58.000 --> 0:28:00.000
Еще один подход.

342
0:28:00.000 --> 0:28:02.000
К созданию AMA.

343
0:28:02.000 --> 0:28:04.000
Это сервис EC2 Image Builder.

344
0:28:04.000 --> 0:28:06.000
� спользуя этот сервис.

345
0:28:06.000 --> 0:28:08.000
Вы можете с легкостью.

346
0:28:08.000 --> 0:28:10.000
В понятном UI интерфейсе.

347
0:28:10.000 --> 0:28:12.000
Автоматизировать.

348
0:28:12.000 --> 0:28:14.000
Создание.

349
0:28:14.000 --> 0:28:16.000
Управление.

350
0:28:16.000 --> 0:28:18.000
Обслуживание.

351
0:28:18.000 --> 0:28:20.000
� азвертывание.

352
0:28:20.000 --> 0:28:22.000
А также работа с контролем.

353
0:28:22.000 --> 0:28:24.000
Версии ваших AMA.

354
0:28:24.000 --> 0:28:26.000
На этом слайде.

355
0:28:26.000 --> 0:28:28.000
Вы видите.

356
0:28:28.000 --> 0:28:30.000
Сервис EC2 Image Builder.

357
0:28:30.000 --> 0:28:32.000
Он состоит из 5 основных шагов.

358
0:28:32.000 --> 0:28:34.000
Самым первым делом.

359
0:28:34.000 --> 0:28:36.000
Вам нужно выбрать source image.

360
0:28:36.000 --> 0:28:38.000
Это операционная система.

361
0:28:38.000 --> 0:28:40.000
На котором будет базироваться ваш AMA.

362
0:28:40.000 --> 0:28:42.000
Можете выбрать.

363
0:28:42.000 --> 0:28:44.000
Amazon Linux 2.

364
0:28:44.000 --> 0:28:46.000
Windows операционную систему.

365
0:28:46.000 --> 0:28:48.000
Ubuntu и так далее.

366
0:28:48.000 --> 0:28:50.000
Вторым шагом.

367
0:28:50.000 --> 0:28:52.000
Предлагается определить список.

368
0:28:52.000 --> 0:28:54.000
Компонентов.

369
0:28:54.000 --> 0:28:56.000
Вы указываете какие приложения.

370
0:28:56.000 --> 0:29:00.000
Один из примеров это установка языка программирования Python.

371
0:29:00.000 --> 0:29:02.000
Третьим шагом.

372
0:29:02.000 --> 0:29:04.000
Предлагается запустить так называемые.

373
0:29:04.000 --> 0:29:06.000
Hardening Tests.

374
0:29:06.000 --> 0:29:08.000
Для проверки.

375
0:29:08.000 --> 0:29:10.000
Безопасности.

376
0:29:10.000 --> 0:29:12.000
Есть специальные тесты.

377
0:29:12.000 --> 0:29:14.000
Которые предоставляются от AWS.

378
0:29:14.000 --> 0:29:16.000
Также вы можете.

379
0:29:16.000 --> 0:29:18.000
Добавить и включить здесь.

380
0:29:18.000 --> 0:29:20.000
Свои собственные тесты.

381
0:29:20.000 --> 0:29:22.000
После того как.

382
0:29:22.000 --> 0:29:24.000
AMI проходит.

383
0:29:24.000 --> 0:29:26.000
Проверка на безопасность.

384
0:29:26.000 --> 0:29:28.000
Мы переходим к четвертому шагу.

385
0:29:28.000 --> 0:29:30.000
Четвертый шаг.

386
0:29:30.000 --> 0:29:32.000
Это расписание.

387
0:29:32.000 --> 0:29:34.000
Как часто будет создаваться.

388
0:29:34.000 --> 0:29:36.000
Новые AMI.

389
0:29:36.000 --> 0:29:38.000
Может возникнуть вопрос.

390
0:29:38.000 --> 0:29:40.000
Для чего нам необходимо.

391
0:29:40.000 --> 0:29:42.000
На периодической основе.

392
0:29:42.000 --> 0:29:44.000
Создавать AMI.

393
0:29:44.000 --> 0:29:46.000
Ответ достаточно прост.

394
0:29:46.000 --> 0:29:48.000
Мы с вами знаем.

395
0:29:48.000 --> 0:29:50.000
Что операционные системы.

396
0:29:50.000 --> 0:29:52.000
Что программное обеспечение.

397
0:29:52.000 --> 0:29:54.000
Стоят на месте.

398
0:29:54.000 --> 0:29:56.000
Один из видов обновления.

399
0:29:56.000 --> 0:29:58.000
Это не новый функционал.

400
0:29:58.000 --> 0:30:00.000
А обновление безопасности.

401
0:30:00.000 --> 0:30:02.000
Патчи безопасности.

402
0:30:02.000 --> 0:30:04.000
Так вот.

403
0:30:04.000 --> 0:30:06.000
Это расписание.

404
0:30:06.000 --> 0:30:08.000
Оно позволяет вам создавать.

405
0:30:08.000 --> 0:30:10.000
AMI.

406
0:30:10.000 --> 0:30:12.000
� овно с таким же составом.

407
0:30:12.000 --> 0:30:14.000
Компонентов.

408
0:30:14.000 --> 0:30:16.000
Внутри.

409
0:30:16.000 --> 0:30:18.000
Но при этом уже будут применены.

410
0:30:18.000 --> 0:30:20.000
Новые обновления.

411
0:30:20.000 --> 0:30:22.000
Приложения.

412
0:30:22.000 --> 0:30:24.000
Последним шагом.

413
0:30:24.000 --> 0:30:26.000
Вам необходимо определить.

414
0:30:26.000 --> 0:30:28.000
На какие регионы.

415
0:30:28.000 --> 0:30:30.000
Будут распространяться ваши AMI.

416
0:30:30.000 --> 0:30:32.000
Вы можете выбрать один основной.

417
0:30:32.000 --> 0:30:34.000
� ли несколько регионов.

418
0:30:34.000 --> 0:30:36.000
Если вы хостите свою инфраструктуру.

419
0:30:36.000 --> 0:30:38.000
В нескольких регионах.

420
0:30:40.000 --> 0:30:42.000
На этом.

421
0:30:42.000 --> 0:30:44.000
Мы заканчиваем третью часть.

422
0:30:44.000 --> 0:30:46.000
Нашей сегодняшней лекции.

423
0:30:46.000 --> 0:30:48.000
� азобрали основные моменты.

424
0:30:48.000 --> 0:30:50.000
AMI.

425
0:30:50.000 --> 0:30:52.000
Мы с вами добрались.

426
0:30:52.000 --> 0:30:54.000
До четвертой части нашей сегодняшней лекции.

427
0:30:54.000 --> 0:30:56.000
�  поговорим.

428
0:30:56.000 --> 0:30:58.000
О нюансах.

429
0:30:58.000 --> 0:31:00.000
Выбора.

430
0:31:00.000 --> 0:31:02.000
Типа. � нстанса.

431
0:31:02.000 --> 0:31:04.000
Что такое.

432
0:31:04.000 --> 0:31:06.000
Тип инстанса.

433
0:31:06.000 --> 0:31:08.000
Это некоторая уникальная конфигурация.

434
0:31:08.000 --> 0:31:10.000
Которая включает в себя.

435
0:31:10.000 --> 0:31:12.000
Характеристики CPU.

436
0:31:12.000 --> 0:31:14.000
Процессорных мощностей.

437
0:31:14.000 --> 0:31:16.000
Далее.

438
0:31:16.000 --> 0:31:18.000
Наш хранилище.

439
0:31:18.000 --> 0:31:20.000
Наши жесткие диски.

440
0:31:20.000 --> 0:31:22.000
�  Network Performance.

441
0:31:22.000 --> 0:31:24.000
То есть.

442
0:31:24.000 --> 0:31:26.000
Свойства железа.

443
0:31:26.000 --> 0:31:28.000
По работе с сетью.

444
0:31:30.000 --> 0:31:32.000
Название типа инстанса.

445
0:31:32.000 --> 0:31:34.000
Состоит из нескольких частей.

446
0:31:34.000 --> 0:31:36.000
Вы это можете видеть.

447
0:31:36.000 --> 0:31:38.000
На слайде.

448
0:31:38.000 --> 0:31:40.000
Самое первое.

449
0:31:40.000 --> 0:31:42.000
Это семейство типов инстанцев.

450
0:31:42.000 --> 0:31:44.000
Про них мы поговорим на следующих слайдах.

451
0:31:44.000 --> 0:31:46.000
М.

452
0:31:46.000 --> 0:31:48.000
Далее вторым обязательно идет.

453
0:31:48.000 --> 0:31:50.000
Номер поколения.

454
0:31:50.000 --> 0:31:52.000
В нашем случае М5.

455
0:31:52.000 --> 0:31:54.000
Это значит.

456
0:31:54.000 --> 0:31:56.000
� нстанс из семейства М 5 поколения.

457
0:31:56.000 --> 0:31:58.000
Каждый год.

458
0:31:58.000 --> 0:32:00.000
Amazon.

459
0:32:00.000 --> 0:32:02.000
Увеличивает это число.

460
0:32:02.000 --> 0:32:04.000
�  предлагает нам еще.

461
0:32:04.000 --> 0:32:06.000
Более привлекательные условия.

462
0:32:06.000 --> 0:32:08.000
Обычно за ту же цену.

463
0:32:08.000 --> 0:32:10.000
Предлагается.

464
0:32:10.000 --> 0:32:12.000
Машина.

465
0:32:12.000 --> 0:32:14.000
Более мощная.

466
0:32:14.000 --> 0:32:16.000
Либо чем-то.

467
0:32:16.000 --> 0:32:18.000
В лучшую сторону.

468
0:32:18.000 --> 0:32:20.000
Отличающаяся от предыдущего поколения.

469
0:32:20.000 --> 0:32:22.000
Например.

470
0:32:22.000 --> 0:32:24.000
М6.

471
0:32:24.000 --> 0:32:26.000
Она будет точно.

472
0:32:26.000 --> 0:32:28.000
Такое же по цене.

473
0:32:28.000 --> 0:32:30.000
�  по характеристикам.

474
0:32:30.000 --> 0:32:32.000
Может быть где-то.

475
0:32:32.000 --> 0:32:34.000
Быть лучше.

476
0:32:34.000 --> 0:32:36.000
Третья часть.

477
0:32:36.000 --> 0:32:38.000
Это некоторые дополнительные возможности.

478
0:32:38.000 --> 0:32:40.000
В этом случае вы видите.

479
0:32:40.000 --> 0:32:42.000
Для.

480
0:32:42.000 --> 0:32:44.000
Жесткого диска.

481
0:32:44.000 --> 0:32:46.000
� спользует.

482
0:32:46.000 --> 0:32:48.000
Тип SSD.

483
0:32:48.000 --> 0:32:50.000
Вместо хард драйва.

484
0:32:52.000 --> 0:32:54.000
После этих основных частей.

485
0:32:54.000 --> 0:32:56.000
Через точку.

486
0:32:56.000 --> 0:32:58.000
У нас описывается размер инстанса.

487
0:32:58.000 --> 0:33:00.000
Есть определенная градация.

488
0:33:00.000 --> 0:33:02.000
Начиная от nano.

489
0:33:02.000 --> 0:33:04.000
Micro и так далее.

490
0:33:04.000 --> 0:33:06.000
Здесь мы видим на примере Xlarge.

491
0:33:06.000 --> 0:33:08.000
Что говорит о том.

492
0:33:08.000 --> 0:33:10.000
Что это за инстанс Xlarge.

493
0:33:10.000 --> 0:33:12.000
Так же можете видеть.

494
0:33:12.000 --> 0:33:14.000
Характеристики.

495
0:33:14.000 --> 0:33:16.000
У него 4 ядра процессора.

496
0:33:16.000 --> 0:33:18.000
Оперативная память на 16 гигабайтов.

497
0:33:18.000 --> 0:33:20.000
Один жесткий диск на 150.

498
0:33:20.000 --> 0:33:22.000
Гигабайтов.

499
0:33:22.000 --> 0:33:24.000
�  Network performance.

500
0:33:24.000 --> 0:33:26.000
Мы можем передавать данные по сети.

501
0:33:26.000 --> 0:33:28.000
До 10 гигабитов.

502
0:33:28.000 --> 0:33:30.000
В секунду.

503
0:33:30.000 --> 0:33:32.000
Увеличение.

504
0:33:32.000 --> 0:33:34.000
� азмера.

505
0:33:34.000 --> 0:33:36.000
Увеличивает соответственно одну или несколько.

506
0:33:36.000 --> 0:33:38.000
Характеристик который вы видите.

507
0:33:38.000 --> 0:33:40.000
В левой части этого слайда.

508
0:33:42.000 --> 0:33:44.000
На следующих двух слайдах.

509
0:33:44.000 --> 0:33:46.000
Мы разберем 5 самых популярных.

510
0:33:46.000 --> 0:33:48.000
Семейств типов инстанцев.

511
0:33:48.000 --> 0:33:50.000
Для каждого семейства.

512
0:33:50.000 --> 0:33:52.000
Будут данные примеры.

513
0:33:52.000 --> 0:33:54.000
� спользования.

514
0:33:54.000 --> 0:33:56.000
А также буквенные обозначения.

515
0:33:56.000 --> 0:33:58.000
Давайте пройдемся по каждому из них.

516
0:33:58.000 --> 0:34:00.000
Самый первый самый популярный.

517
0:34:00.000 --> 0:34:02.000
�  подходящий для большинства случаев.

518
0:34:02.000 --> 0:34:04.000
Это General Purpose.

519
0:34:04.000 --> 0:34:17.020
� 

520
0:34:17.020 --> 0:34:18.020
возможно

521
0:34:18.020 --> 0:34:20.020
CN.

522
0:34:20.020 --> 0:34:22.020
Это дополнительно увеличиваются.

523
0:34:22.020 --> 0:34:24.020
Характеристики.

524
0:34:24.020 --> 0:34:26.020
По работе с сетью.

525
0:34:26.020 --> 0:34:28.020
Далее.

526
0:34:28.020 --> 0:34:30.020
Увеличенный.

527
0:34:30.020 --> 0:34:32.020
Объем.

528
0:34:32.020 --> 0:34:34.020
Буквенные обозначения.

529
0:34:34.020 --> 0:34:36.020
R, X и HMI.

530
0:34:36.020 --> 0:34:38.020
После этого.

531
0:34:38.020 --> 0:34:40.020
Есть у нас семейство.

532
0:34:40.020 --> 0:34:42.020
Storage Optimized.

533
0:34:42.020 --> 0:34:44.020
Они ориентированы.

534
0:34:44.020 --> 0:34:46.020
По работе с.

535
0:34:46.020 --> 0:34:48.020
Операциями водо-вывода.

536
0:34:48.020 --> 0:34:50.020
По работе с жестким диском.

537
0:34:50.020 --> 0:34:52.020
Примерами.

538
0:34:52.020 --> 0:34:54.020
Буквенных обозначений.

539
0:34:54.020 --> 0:34:56.020
Могут быть I, D, H.

540
0:34:56.020 --> 0:34:58.020
�  еще одно.

541
0:34:58.020 --> 0:35:00.020
Также набирающие популярность.

542
0:35:00.020 --> 0:35:02.020
Семейство.

543
0:35:02.020 --> 0:35:04.020
Это Accelerated Computing.

544
0:35:04.020 --> 0:35:06.020
� спользуется для.

545
0:35:06.020 --> 0:35:08.020
Тренировки моделей.

546
0:35:08.020 --> 0:35:10.020
Нейронных сетей.

547
0:35:10.020 --> 0:35:12.020
Машинам обучения.

548
0:35:12.020 --> 0:35:14.020
Все те нагрузки.

549
0:35:14.020 --> 0:35:16.020
Которые требовательны.

550
0:35:16.020 --> 0:35:18.020
К ресурсам.

551
0:35:18.020 --> 0:35:20.020
Видеокарты.

552
0:35:20.020 --> 0:35:22.020
�  в этом случае.

553
0:35:22.020 --> 0:35:24.020
Буквенное обозначение.

554
0:35:24.020 --> 0:35:26.020
P, G и F.

555
0:35:26.020 --> 0:35:28.020
При всех прочих.

556
0:35:28.020 --> 0:35:30.020
Характеристиках.

557
0:35:30.020 --> 0:35:32.020
В типах инстанцев.

558
0:35:32.020 --> 0:35:34.020
� з Accelerated Computing.

559
0:35:34.020 --> 0:35:36.020
Будет дополнительно.

560
0:35:36.020 --> 0:35:38.020
� ли увеличенное.

561
0:35:38.020 --> 0:35:40.020
Количество памяти.

562
0:35:40.020 --> 0:35:42.020
Для видеокарты.

563
0:35:44.020 --> 0:35:46.020
Для того.

564
0:35:46.020 --> 0:35:48.020
Чтобы принять решение.

565
0:35:48.020 --> 0:35:50.020
Какой тип инстанца.

566
0:35:50.020 --> 0:35:52.020
Подходит вам.

567
0:35:52.020 --> 0:35:54.020
Что необходимо сделать.

568
0:35:54.020 --> 0:35:56.020
Основные два пункта.

569
0:35:56.020 --> 0:35:58.020
Ваше приложение.

570
0:35:58.020 --> 0:36:00.020
�  второй знать бюджет.

571
0:36:00.020 --> 0:36:02.020
Чем мощнее инстанц.

572
0:36:02.020 --> 0:36:04.020
Очевидно это требует.

573
0:36:04.020 --> 0:36:06.020
Больших затрат денежных.

574
0:36:08.020 --> 0:36:10.020
Для того.

575
0:36:10.020 --> 0:36:12.020
Чтобы определиться.

576
0:36:12.020 --> 0:36:14.020
С типом нового инстанца.

577
0:36:14.020 --> 0:36:16.020
Вы можете.

578
0:36:16.020 --> 0:36:18.020
На основной странице.

579
0:36:18.020 --> 0:36:20.020
Перейти.

580
0:36:20.020 --> 0:36:22.020
Во вкладку.

581
0:36:22.020 --> 0:36:24.020
�  посмотреть какие виды есть.

582
0:36:24.020 --> 0:36:26.020
Наоборот.

583
0:36:26.020 --> 0:36:28.020
Зафиксировать.

584
0:36:28.020 --> 0:36:30.020
Некоторые характеристики.

585
0:36:30.020 --> 0:36:32.020
Например.

586
0:36:32.020 --> 0:36:34.020
Количество процессорных ядер.

587
0:36:34.020 --> 0:36:36.020
�  посмотреть какие варианты.

588
0:36:36.020 --> 0:36:38.020
У вас остаются.

589
0:36:38.020 --> 0:36:40.020
� екомендуется использовать.

590
0:36:40.020 --> 0:36:42.020
Последнее поколение.

591
0:36:42.020 --> 0:36:44.020
Так как оно самое оптимальное.

592
0:36:44.020 --> 0:36:46.020
С точки зрения цены.

593
0:36:46.020 --> 0:36:48.020
�  качества.

594
0:36:48.020 --> 0:36:50.020
Если вы работаете.

595
0:36:50.020 --> 0:36:52.020
Уже существующим инстанцем.

596
0:36:52.020 --> 0:36:54.020
Видите что есть необходимость.

597
0:36:54.020 --> 0:36:56.020
Обновить.

598
0:36:56.020 --> 0:36:58.020
Тип инстанца.

599
0:36:58.020 --> 0:37:00.020
� екомендуется посмотреть в сторону.

600
0:37:00.020 --> 0:37:02.020
Сервиса AWS Compute Optimizer.

601
0:37:02.020 --> 0:37:04.020
Она использует историю нагрузки.

602
0:37:04.020 --> 0:37:06.020
На ваши.

603
0:37:06.020 --> 0:37:08.020
� сситу инстанции.

604
0:37:08.020 --> 0:37:10.020
�  дает некоторые рекомендации.

605
0:37:10.020 --> 0:37:12.020
По типу инстанцев.

606
0:37:12.020 --> 0:37:14.020
По их размерам.

607
0:37:14.020 --> 0:37:16.020
Количеству и даже конфигурации авто скейлинг группы.

608
0:37:18.020 --> 0:37:20.020
По результатам анализа.

609
0:37:20.020 --> 0:37:22.020
Он может выдать вам вердикт.

610
0:37:22.020 --> 0:37:24.020
� менно.

611
0:37:24.020 --> 0:37:26.020
По вашим инстанцам.

612
0:37:26.020 --> 0:37:28.020
� ли они перегружены.

613
0:37:28.020 --> 0:37:30.020
Нет.

614
0:37:30.020 --> 0:37:32.020
Оптимизированы.

615
0:37:32.020 --> 0:37:34.020
� ли с пометкой.

616
0:37:34.020 --> 0:37:36.020
Что говорит о том.

617
0:37:36.020 --> 0:37:38.020
Что информации по нагрузкам.

618
0:37:38.020 --> 0:37:40.020
Недостаточно для конкретного инстанца.

619
0:37:40.020 --> 0:37:42.020
На этом мы разобрали.

620
0:37:42.020 --> 0:37:44.020
Основные вопросы связанные.

621
0:37:44.020 --> 0:37:46.020
С выбором типа инстанца.

622
0:37:46.020 --> 0:37:48.020
�  ситу.

623
0:37:48.020 --> 0:37:50.020
Переходим к следующей части.

624
0:37:52.020 --> 0:37:54.020
Мы с вами добрались до пятой части.

625
0:37:54.020 --> 0:37:56.020
Нашей сегодняшней лекции.

626
0:37:56.020 --> 0:37:58.020
�  поговорим про UserData.

627
0:37:58.020 --> 0:38:00.020
Что же такое UserData?

628
0:38:00.020 --> 0:38:02.020
Для чего мы ее можем использовать?

629
0:38:02.020 --> 0:38:04.020
UserData это набор некоторых команд.

630
0:38:04.020 --> 0:38:06.020
Которые отрабатывают.

631
0:38:06.020 --> 0:38:08.020
Во время инициации.

632
0:38:08.020 --> 0:38:10.020
Вашего инстанца.

633
0:38:10.020 --> 0:38:12.020
Если говорить про LifeCycle.

634
0:38:12.020 --> 0:38:14.020
� нстанца.

635
0:38:14.020 --> 0:38:16.020
То все команды внутри UserData.

636
0:38:16.020 --> 0:38:18.020
Отрабатывают.

637
0:38:18.020 --> 0:38:20.020
В шаге pending.

638
0:38:20.020 --> 0:38:22.020
Обратите внимание.

639
0:38:22.020 --> 0:38:24.020
Что UserData запускается только при первом запуске.

640
0:38:24.020 --> 0:38:26.020
Поэтому.

641
0:38:26.020 --> 0:38:28.020
После того как вы остановите.

642
0:38:28.020 --> 0:38:30.020
Еще раз запустите.

643
0:38:30.020 --> 0:38:32.020
Либо перезагрузите ваш инстанц.

644
0:38:32.020 --> 0:38:34.020
UserData отрабатывать не будет.

645
0:38:34.020 --> 0:38:36.020
Зачем использовать UserData?

646
0:38:36.020 --> 0:38:38.020
Обычно.

647
0:38:38.020 --> 0:38:40.020
Там есть список команд.

648
0:38:40.020 --> 0:38:42.020
Которые обновляют существующее ПО.

649
0:38:42.020 --> 0:38:44.020
Это ПО уже включено в AMI.

650
0:38:44.020 --> 0:38:46.020
Но может там быть.

651
0:38:46.020 --> 0:38:48.020
В не самой последней версии.

652
0:38:48.020 --> 0:38:50.020
Поэтому.

653
0:38:50.020 --> 0:38:52.020
� спользуя UserData.

654
0:38:52.020 --> 0:38:54.020
В момент запуска вы подтягиваете самые последние изменения.

655
0:38:54.020 --> 0:38:56.020
�  дозагружаете.

656
0:38:56.020 --> 0:38:58.020
Обновление вашего ПО.

657
0:38:58.020 --> 0:39:00.020
Далее.

658
0:39:00.020 --> 0:39:02.020
Также UserData попадает.

659
0:39:02.020 --> 0:39:04.020
Те команды.

660
0:39:04.020 --> 0:39:06.020
Которые требуют непосредственного.

661
0:39:06.020 --> 0:39:08.020
Непосредственной привязки к вашему инстанцу.

662
0:39:08.020 --> 0:39:10.020
Например.

663
0:39:10.020 --> 0:39:12.020
Некоторые команды могут использовать.

664
0:39:12.020 --> 0:39:14.020
Это данные вашего инстанца.

665
0:39:14.020 --> 0:39:16.020
Может быть публичные или внутренние.

666
0:39:16.020 --> 0:39:18.020
API для дополнительной настройки.

667
0:39:18.020 --> 0:39:20.020
В этом случае.

668
0:39:20.020 --> 0:39:22.020
Мы не можем добавить ее в AMI.

669
0:39:22.020 --> 0:39:24.020
�  она будет находиться в UserData.

670
0:39:24.020 --> 0:39:26.020
Также в UserData запускаются.

671
0:39:26.020 --> 0:39:28.020
Команды для старта веб-сервера.

672
0:39:28.020 --> 0:39:30.020
В этом случае.

673
0:39:30.020 --> 0:39:32.020
Обратите внимание.

674
0:39:32.020 --> 0:39:34.020
Что UserData запускается только один раз.

675
0:39:34.020 --> 0:39:36.020
Поэтому помимо запуска.

676
0:39:36.020 --> 0:39:38.020
Веб-сервера в первый раз.

677
0:39:38.020 --> 0:39:40.020
Вам также необходимо внести.

678
0:39:40.020 --> 0:39:42.020
Вправки в автозагрузку.

679
0:39:42.020 --> 0:39:44.020
Чтобы при каждом включении.

680
0:39:44.020 --> 0:39:46.020
�  выключении вашего инстанца.

681
0:39:46.020 --> 0:39:48.020
Стартовал веб-сервер.

682
0:39:48.020 --> 0:39:50.020
Либо любое другое программное обеспечение.

683
0:39:50.020 --> 0:39:52.020
Если же говорить.

684
0:39:52.020 --> 0:39:54.020
В сравнении.

685
0:39:54.020 --> 0:39:56.020
Куда.

686
0:39:56.020 --> 0:39:58.020
Передавать.

687
0:39:58.020 --> 0:40:00.020
Те или иные команды.

688
0:40:00.020 --> 0:40:02.020
В AMI или UserData.

689
0:40:02.020 --> 0:40:04.020
Так как они достаточно.

690
0:40:04.020 --> 0:40:06.020
Заменяемы.

691
0:40:06.020 --> 0:40:08.020
Отвечу следующим образом.

692
0:40:08.020 --> 0:40:10.020
Всегда должен быть некоторый баланс.

693
0:40:10.020 --> 0:40:12.020
Все те команды.

694
0:40:12.020 --> 0:40:14.020
Которые вы можете вложить в AMI.

695
0:40:14.020 --> 0:40:16.020
Желательно положить туда.

696
0:40:16.020 --> 0:40:18.020
Это первая часть команд.

697
0:40:18.020 --> 0:40:20.020
Вторая часть команд по обновлению.

698
0:40:20.020 --> 0:40:22.020
�  все те нюансы которые говорил ранее.

699
0:40:22.020 --> 0:40:24.020
Следует добавить UserData.

700
0:40:24.020 --> 0:40:26.020
Так как большой объем команд в UserData.

701
0:40:26.020 --> 0:40:28.020
Замедлит старт вашего инстанца.

702
0:40:28.020 --> 0:40:30.020
Когда у вас будет баланс.

703
0:40:30.020 --> 0:40:32.020
Часть команд будет на стороне AMI.

704
0:40:32.020 --> 0:40:34.020
Часть команд на стороне UserData.

705
0:40:34.020 --> 0:40:36.020
То.

706
0:40:36.020 --> 0:40:38.020
С одной стороны у вас будет актуальный AMI.

707
0:40:38.020 --> 0:40:40.020
С другой стороны.

708
0:40:40.020 --> 0:40:42.020
� нстанц будет запускаться намного быстрее.

709
0:40:42.020 --> 0:40:44.020
Потому что UserData.

710
0:40:44.020 --> 0:40:46.020
Не такая большая.

711
0:40:46.020 --> 0:40:48.020
�  в итоге вы получаете.

712
0:40:48.020 --> 0:40:50.020
� нстанц с обновленным программным обеспечением.

713
0:40:50.020 --> 0:40:52.020
�  полностью готовым к работе.

714
0:40:52.020 --> 0:40:54.020
� аз уж мы.

715
0:40:54.020 --> 0:40:56.020
Заговорили.

716
0:40:56.020 --> 0:40:58.020
О информации про наш инстанц.

717
0:40:58.020 --> 0:41:00.020
Так называемый инстанц метадейта.

718
0:41:00.020 --> 0:41:02.020
Давайте остановимся на том.

719
0:41:02.020 --> 0:41:04.020
Где и как эту информацию можно получить.

720
0:41:04.020 --> 0:41:06.020
На уровне каждого инстанца.

721
0:41:06.020 --> 0:41:08.020
Есть некоторые URL.

722
0:41:08.020 --> 0:41:12.020
Это 169.254.169.254.

723
0:41:12.020 --> 0:41:14.020
Slash latest.

724
0:41:14.020 --> 0:41:16.020
Slash metadata.

725
0:41:16.020 --> 0:41:18.020
По эту матрицу находится.

726
0:41:18.020 --> 0:41:20.020
Основная информация.

727
0:41:20.020 --> 0:41:22.020
Связанная непосредственно к этому инстанцу.

728
0:41:22.020 --> 0:41:24.020
Этот URL доступен только на уровне.

729
0:41:24.020 --> 0:41:26.020
Конкретного.

730
0:41:26.020 --> 0:41:28.020
� нстанца.

731
0:41:28.020 --> 0:41:30.020
Также.

732
0:41:30.020 --> 0:41:32.020
Если вместо metadata написать UserData.

733
0:41:32.020 --> 0:41:34.020
Вы получите список тех команд.

734
0:41:34.020 --> 0:41:36.020
Которые есть в вашей UserData.

735
0:41:36.020 --> 0:41:38.020
Также можете ее использовать.

736
0:41:38.020 --> 0:41:40.020
Для дополнительной настройки.

737
0:41:44.020 --> 0:41:46.020
Когда я говорил про баланс.

738
0:41:46.020 --> 0:41:48.020
Команд.

739
0:41:48.020 --> 0:41:50.020
На стороне AMI и UserData.

740
0:41:50.020 --> 0:41:52.020
Естественно.

741
0:41:52.020 --> 0:41:54.020
Нет универсального ответа.

742
0:41:54.020 --> 0:41:56.020
Всегда надо смотреть.

743
0:41:56.020 --> 0:41:58.020
На конкретную бизнес задачу.

744
0:41:58.020 --> 0:42:00.020
Давайте рассмотрим.

745
0:42:00.020 --> 0:42:02.020
Есть 4 различных варианта.

746
0:42:02.020 --> 0:42:04.020
Того где могут находиться ваши команды.

747
0:42:04.020 --> 0:42:06.020
AMI и UserData.

748
0:42:06.020 --> 0:42:08.020
Какие это преимущества дает.

749
0:42:08.020 --> 0:42:10.020
�  какие у каждого подхода есть недостатки.

750
0:42:10.020 --> 0:42:12.020
Если вы обратите внимание.

751
0:42:12.020 --> 0:42:14.020
Что на самом верху.

752
0:42:14.020 --> 0:42:16.020
Есть стрелка flexibility.

753
0:42:16.020 --> 0:42:18.020
То есть.

754
0:42:18.020 --> 0:42:20.020
Каждый следующий вариант.

755
0:42:20.020 --> 0:42:22.020
Слева направо.

756
0:42:22.020 --> 0:42:24.020
Он дает большую гибкость.

757
0:42:24.020 --> 0:42:26.020
Если посмотреть на стрелку внизу.

758
0:42:26.020 --> 0:42:28.020
Simplicity.

759
0:42:28.020 --> 0:42:30.020
Противоположное.

760
0:42:30.020 --> 0:42:32.020
�  мы.

761
0:42:32.020 --> 0:42:34.020
Справа налево.

762
0:42:34.020 --> 0:42:36.020
Упрощаем.

763
0:42:36.020 --> 0:42:38.020
� аботу с нашими инстанциями.

764
0:42:38.020 --> 0:42:40.020
Но при этом теряем в гибкости.

765
0:42:40.020 --> 0:42:42.020
Давайте подробнее посмотрим.

766
0:42:42.020 --> 0:42:44.020
На каждой из конфигураций.

767
0:42:44.020 --> 0:42:46.020
Самый первый это fully baked AMI.

768
0:42:46.020 --> 0:42:48.020
В котором.

769
0:42:48.020 --> 0:42:50.020
Все абсолютно.

770
0:42:50.020 --> 0:42:52.020
Команды необходимые для запуска.

771
0:42:52.020 --> 0:42:54.020
Начиная от операционной системы.

772
0:42:54.020 --> 0:42:56.020
Ее дополнительные настройки.

773
0:42:56.020 --> 0:42:58.020
Для приложения и установки.

774
0:42:58.020 --> 0:43:00.020
Соответственно.

775
0:43:00.020 --> 0:43:02.020
Самого приложения.

776
0:43:02.020 --> 0:43:04.020
Она происходит на стороне AMI.

777
0:43:04.020 --> 0:43:06.020
В этом случае.

778
0:43:06.020 --> 0:43:08.020
Ваш инстанц запускается.

779
0:43:08.020 --> 0:43:10.020
Максимально быстро.

780
0:43:10.020 --> 0:43:12.020
� .

781
0:43:12.020 --> 0:43:14.020
User data может быть.

782
0:43:14.020 --> 0:43:16.020
Совсем пустой.

783
0:43:16.020 --> 0:43:18.020
Это связано с тем.

784
0:43:18.020 --> 0:43:20.020
Что AMI вы готовите.

785
0:43:20.020 --> 0:43:22.020
Асинхронно.

786
0:43:22.020 --> 0:43:24.020
Она уже предварительно приготовлена.

787
0:43:24.020 --> 0:43:26.020
В момент необходимости запуска.

788
0:43:26.020 --> 0:43:28.020
Вы.

789
0:43:28.020 --> 0:43:30.020
Включаете только сервер.

790
0:43:30.020 --> 0:43:32.020
�  все остальное у вас готово.

791
0:43:32.020 --> 0:43:34.020
Плюсом может быть то.

792
0:43:34.020 --> 0:43:36.020
Что вы очень быстро запускаете.

793
0:43:36.020 --> 0:43:38.020
Ваше сервера.

794
0:43:38.020 --> 0:43:40.020
�  они в самое максимально.

795
0:43:40.020 --> 0:43:42.020
Быстрое время готовы к работе.

796
0:43:42.020 --> 0:43:44.020
Недостатком может являться то.

797
0:43:44.020 --> 0:43:46.020
Что любое приложение.

798
0:43:46.020 --> 0:43:48.020
Для корректной работы.

799
0:43:48.020 --> 0:43:50.020
Требует другое ПО.

800
0:43:50.020 --> 0:43:52.020
�  возможно не одно.

801
0:43:52.020 --> 0:43:54.020
Каждое из этих ПО.

802
0:43:54.020 --> 0:43:56.020
Независимо друг от друга.

803
0:43:56.020 --> 0:43:58.020
� азвивается.

804
0:43:58.020 --> 0:44:00.020
Выходят патчи безопасности.

805
0:44:00.020 --> 0:44:02.020
Обновление функционала.

806
0:44:02.020 --> 0:44:04.020
�  так далее.

807
0:44:04.020 --> 0:44:06.020
Поэтому с этим подходом.

808
0:44:06.020 --> 0:44:08.020
� екомендуется чаще.

809
0:44:08.020 --> 0:44:10.020
Готовить.

810
0:44:10.020 --> 0:44:12.020
� ли обновлять ваши AMI.

811
0:44:12.020 --> 0:44:14.020
Следующие два пункта.

812
0:44:14.020 --> 0:44:16.020
Они.

813
0:44:16.020 --> 0:44:18.020
Увеличивают гибкость.

814
0:44:18.020 --> 0:44:20.020
Но при этом немного усложняет.

815
0:44:20.020 --> 0:44:22.020
В том плане.

816
0:44:22.020 --> 0:44:24.020
Что есть отдельный набор команд.

817
0:44:24.020 --> 0:44:26.020
На стороне AMI.

818
0:44:26.020 --> 0:44:28.020
�  отдельный набор команд.

819
0:44:28.020 --> 0:44:30.020
На стороне UserData.

820
0:44:30.020 --> 0:44:32.020
В первом случае.

821
0:44:32.020 --> 0:44:34.020
У вас приложение устанавливается.

822
0:44:34.020 --> 0:44:36.020
Только в момент запуска приложения.

823
0:44:36.020 --> 0:44:38.020
Это может быть.

824
0:44:38.020 --> 0:44:40.020
Необходимо.

825
0:44:40.020 --> 0:44:42.020
Так как.

826
0:44:42.020 --> 0:44:44.020
Внутри AMI.

827
0:44:44.020 --> 0:44:46.020
Не получится добавить те команды.

828
0:44:46.020 --> 0:44:48.020
По настройке вашего приложения.

829
0:44:48.020 --> 0:44:50.020
Вы можете добавить.

830
0:44:50.020 --> 0:44:52.020
Некоторые данные.

831
0:44:52.020 --> 0:44:54.020
О конкретном инстансе.

832
0:44:54.020 --> 0:44:56.020
Все остальное находится внутри AMI.

833
0:44:56.020 --> 0:44:58.020
Более гибкий подход.

834
0:44:58.020 --> 0:45:00.020
Это когда вы настраиваете.

835
0:45:00.020 --> 0:45:02.020
Операционную систему.

836
0:45:02.020 --> 0:45:04.020
Устанавливаете все необходимые.

837
0:45:04.020 --> 0:45:06.020
Для корректного функционирования.

838
0:45:06.020 --> 0:45:08.020
Этой операционной системы.

839
0:45:08.020 --> 0:45:10.020
Внутри AMI.

840
0:45:10.020 --> 0:45:12.020
А вторую часть.

841
0:45:12.020 --> 0:45:14.020
Подготовку среды.

842
0:45:14.020 --> 0:45:16.020
Для вашего приложения.

843
0:45:16.020 --> 0:45:18.020
В этом случае она запускаться будет еще дольше.

844
0:45:18.020 --> 0:45:20.020
Но при этом вы получаете гибкость.

845
0:45:20.020 --> 0:45:22.020
�  любые команды.

846
0:45:22.020 --> 0:45:24.020
Они могут быть.

847
0:45:24.020 --> 0:45:26.020
� зменены на стороне UserData.

848
0:45:26.020 --> 0:45:28.020
Новый AMI для этого выпускать не нужно.

849
0:45:30.020 --> 0:45:32.020
�  самое последнее.

850
0:45:32.020 --> 0:45:34.020
Это GEOS.

851
0:45:34.020 --> 0:45:36.020
То есть расшифруется как.

852
0:45:36.020 --> 0:45:38.020
Just In Us OS.

853
0:45:38.020 --> 0:45:40.020
Простыми словами.

854
0:45:40.020 --> 0:45:42.020
Это только операционная.

855
0:45:42.020 --> 0:45:44.020
Система.

856
0:45:44.020 --> 0:45:46.020
А еще есть еще.

857
0:45:46.020 --> 0:45:48.020
На стороне UserData.

858
0:45:48.020 --> 0:45:50.020
Настройка операционной системы.

859
0:45:50.020 --> 0:45:52.020
Патчи безопасности.

860
0:45:52.020 --> 0:45:54.020
Настройка логирования.

861
0:45:54.020 --> 0:45:56.020
�  все что выше.

862
0:45:56.020 --> 0:45:58.020
Это подготовка среды для приложения.

863
0:45:58.020 --> 0:46:00.020
�  само приложение на стороне UserData.

864
0:46:00.020 --> 0:46:02.020
В этом случае.

865
0:46:02.020 --> 0:46:04.020
Вам достаточно выбрать.

866
0:46:04.020 --> 0:46:06.020
Любой подходящий для вас.

867
0:46:06.020 --> 0:46:08.020
AMI который предоставляет AWS.

868
0:46:08.020 --> 0:46:10.020
�  все необходимые настройки.

869
0:46:10.020 --> 0:46:12.020
Производительные на стороне UserData.

870
0:46:12.020 --> 0:46:14.020
Ничего связанного с AMI делать не нужно.

871
0:46:16.020 --> 0:46:18.020
Достаточно использовать уже готовые.

872
0:46:20.020 --> 0:46:22.020
Но при этом нужно будет менеджировать UserData.

873
0:46:22.020 --> 0:46:24.020
�  понимать что у вас максимальная гибкость.

874
0:46:24.020 --> 0:46:26.020
Вы можете менять.

875
0:46:26.020 --> 0:46:28.020
Очень часто ваши UserData.

876
0:46:28.020 --> 0:46:30.020
Не меняя AMI.

877
0:46:30.020 --> 0:46:32.020
Но при этом понимаете.

878
0:46:32.020 --> 0:46:34.020
Что запуск вашего инстанца.

879
0:46:34.020 --> 0:46:36.020
Требует намного больше времени.

880
0:46:36.020 --> 0:46:38.020
�  до того что она фактически.

881
0:46:38.020 --> 0:46:40.020
Полноценно будет настраиваться.

882
0:46:40.020 --> 0:46:42.020
На этом мы разобрали.

883
0:46:42.020 --> 0:46:44.020
Все что связано.

884
0:46:44.020 --> 0:46:46.020
С UserData.

885
0:46:46.020 --> 0:46:48.020
В EC2 инстанции.

886
0:46:48.020 --> 0:46:50.020
Заканчиваем пятую часть.

887
0:46:50.020 --> 0:46:52.020
�  двигаемся дальше.

888
0:46:52.020 --> 0:46:54.020
Мы с вами.

889
0:46:54.020 --> 0:46:56.020
Добрались до шестой части.

890
0:46:56.020 --> 0:46:58.020
Нашей сегодняшней лекции.

891
0:46:58.020 --> 0:47:00.020
�  затронем все аспекты.

892
0:47:00.020 --> 0:47:02.020
Связанные с хранением.

893
0:47:02.020 --> 0:47:04.020
При работе с сервисом Amazon EC2.

894
0:47:04.020 --> 0:47:06.020
Как мы знаем.

895
0:47:06.020 --> 0:47:08.020
У нас есть.

896
0:47:08.020 --> 0:47:10.020
Два раздела.

897
0:47:10.020 --> 0:47:12.020
Это Root volume и Data volume.

898
0:47:12.020 --> 0:47:14.020
В Root volume мы устанавливаем.

899
0:47:14.020 --> 0:47:16.020
Нашу операционную систему.

900
0:47:16.020 --> 0:47:18.020
Все приложения.

901
0:47:18.020 --> 0:47:20.020
А в Data volume храним данные.

902
0:47:20.020 --> 0:47:22.020
Так вот когда мы говорим про Root volume.

903
0:47:22.020 --> 0:47:24.020
Root volume может быть.

904
0:47:24.020 --> 0:47:26.020
Instant store.

905
0:47:26.020 --> 0:47:28.020
Либо поддерживается Amazon EBS.

906
0:47:28.020 --> 0:47:30.020
Если мы говорим про Data volume.

907
0:47:30.020 --> 0:47:32.020
То они опциональные.

908
0:47:32.020 --> 0:47:34.020
� х может и не быть.

909
0:47:34.020 --> 0:47:36.020
Если мы говорим.

910
0:47:36.020 --> 0:47:38.020
Про данные.

911
0:47:38.020 --> 0:47:40.020
Которые доступны только для.

912
0:47:40.020 --> 0:47:42.020
Текущего инстенса.

913
0:47:42.020 --> 0:47:44.020
То мы можем использовать.

914
0:47:44.020 --> 0:47:46.020
Наш Instant store.

915
0:47:46.020 --> 0:47:48.020
Хоть он и небольшой и ограничен.

916
0:47:48.020 --> 0:47:50.020
Также мы можем добавить.

917
0:47:50.020 --> 0:47:52.020
Дополнительные.

918
0:47:52.020 --> 0:47:54.020
Независимые от Root volume.

919
0:47:54.020 --> 0:47:56.020
EBS жесткие диски.

920
0:47:56.020 --> 0:47:58.020
Если же мы говорим.

921
0:47:58.020 --> 0:48:00.020
Что нам нужно такое хранилище.

922
0:48:00.020 --> 0:48:02.020
Которое общее.

923
0:48:02.020 --> 0:48:04.020
Обще доступное среди всех EC2 инстенцев.

924
0:48:04.020 --> 0:48:06.020
То нам на помощь приходят.

925
0:48:06.020 --> 0:48:08.020
Еще два сервиса.

926
0:48:08.020 --> 0:48:10.020
Первый это Amazon EFS.

927
0:48:10.020 --> 0:48:12.020
Для Linux based серверов.

928
0:48:12.020 --> 0:48:14.020
�  второй это Amazon FSx.

929
0:48:14.020 --> 0:48:16.020
For Windows Server.

930
0:48:16.020 --> 0:48:18.020
Windows File Server.

931
0:48:18.020 --> 0:48:20.020
Это аналогичный.

932
0:48:20.020 --> 0:48:22.020
Сервис только для.

933
0:48:22.020 --> 0:48:24.020
Машин с операционной системой.

934
0:48:24.020 --> 0:48:26.020
Windows.

935
0:48:26.020 --> 0:48:28.020
Давайте остановимся на каждом.

936
0:48:28.020 --> 0:48:30.020
� з вариантов более подробно.

937
0:48:30.020 --> 0:48:32.020
Самый первый это Instant store.

938
0:48:32.020 --> 0:48:34.020
Instant store это не постоянное.

939
0:48:34.020 --> 0:48:36.020
Блочное хранилище.

940
0:48:36.020 --> 0:48:38.020
На него можно установить.

941
0:48:38.020 --> 0:48:40.020
Операционную систему.

942
0:48:40.020 --> 0:48:42.020
У нее есть ограничения.

943
0:48:42.020 --> 0:48:44.020
Которые мы рассмотрели ранее.

944
0:48:44.020 --> 0:48:46.020
В том числе преимущества.

945
0:48:46.020 --> 0:48:48.020
Самый основной момент.

946
0:48:48.020 --> 0:48:50.020
Который связан с Instant store.

947
0:48:50.020 --> 0:48:52.020
Это то что его невозможно остановить.

948
0:48:52.020 --> 0:48:54.020
Если же.

949
0:48:54.020 --> 0:48:56.020
У вас есть лишние.

950
0:48:56.020 --> 0:48:58.020
� нстанции и вам необходимо.

951
0:48:58.020 --> 0:49:00.020
� х отключить.

952
0:49:00.020 --> 0:49:02.020
То при отключении.

953
0:49:02.020 --> 0:49:04.020
Они.

954
0:49:04.020 --> 0:49:06.020
Все те данные которые хранятся в Instant store.

955
0:49:06.020 --> 0:49:08.020
Они будут потеряны.

956
0:49:08.020 --> 0:49:10.020
Поэтому в Instant store.

957
0:49:10.020 --> 0:49:12.020
Данные хранить можно.

958
0:49:12.020 --> 0:49:14.020
Но это такие данные.

959
0:49:14.020 --> 0:49:16.020
Кеш данные.

960
0:49:16.020 --> 0:49:18.020
Либо данные которые можно с легкостью.

961
0:49:18.020 --> 0:49:20.020
Восстановить.

962
0:49:20.020 --> 0:49:22.020
�  не страшно потерять.

963
0:49:22.020 --> 0:49:24.020
В этом случае можно использовать Instant store.

964
0:49:24.020 --> 0:49:26.020
Следующий это EBS.

965
0:49:26.020 --> 0:49:28.020
Это.

966
0:49:28.020 --> 0:49:30.020
Жесткие диски которые подключены через интернет.

967
0:49:30.020 --> 0:49:32.020
Они не относятся.

968
0:49:32.020 --> 0:49:34.020
Физически.

969
0:49:34.020 --> 0:49:36.020
К нашему виртуальному серверу.

970
0:49:36.020 --> 0:49:38.020
�  есть у нее ряд преимуществ.

971
0:49:38.020 --> 0:49:40.020
Бест практиц.

972
0:49:40.020 --> 0:49:42.020
Это.

973
0:49:42.020 --> 0:49:44.020
� спользовать EBS.

974
0:49:44.020 --> 0:49:46.020
Так как преимуществ намного больше.

975
0:49:46.020 --> 0:49:48.020
Но по оплате.

976
0:49:48.020 --> 0:49:50.020
Выходит.

977
0:49:50.020 --> 0:49:52.020
Немного дороже.

978
0:49:52.020 --> 0:49:54.020
Ввиду того что жесткие диски обычно.

979
0:49:54.020 --> 0:49:56.020
Устанавливаются не более 100 гигабайтов.

980
0:49:56.020 --> 0:49:58.020
То разница в цене.

981
0:49:58.020 --> 0:50:00.020
Она не ощутима.

982
0:50:00.020 --> 0:50:02.020
�  те преимущества которые вы получаете.

983
0:50:02.020 --> 0:50:04.020
Они намного больше.

984
0:50:06.020 --> 0:50:08.020
Основные преимущества.

985
0:50:08.020 --> 0:50:10.020
Которые вы получаете.

986
0:50:10.020 --> 0:50:12.020
При работе с Amazon EBS.

987
0:50:12.020 --> 0:50:14.020
Это то что вы можете.

988
0:50:14.020 --> 0:50:16.020
Отсоединить.

989
0:50:16.020 --> 0:50:18.020
Ваш жесткий диск от инстанца.

990
0:50:18.020 --> 0:50:20.020
�  подключить к другому инстанцу.

991
0:50:20.020 --> 0:50:22.020
Вы дальше продолжите работать с этим жестким диском.

992
0:50:22.020 --> 0:50:24.020
Также это то что.

993
0:50:24.020 --> 0:50:26.020
Вы можете использовать.

994
0:50:26.020 --> 0:50:28.020
� азличные.

995
0:50:28.020 --> 0:50:30.020
Типы жестких дисков.

996
0:50:30.020 --> 0:50:32.020
Это SSD жесткий диск.

997
0:50:32.020 --> 0:50:34.020
Либо HDD.

998
0:50:34.020 --> 0:50:36.020
Другой момент.

999
0:50:36.020 --> 0:50:38.020
То что вы можете создавать снапшоты.

1000
0:50:38.020 --> 0:50:40.020
Которые будут храниться в S3.

1001
0:50:42.020 --> 0:50:44.020
Давайте рассмотрим.

1002
0:50:44.020 --> 0:50:46.020
Какие типы волюмов.

1003
0:50:46.020 --> 0:50:48.020
Сервиса Amazon EBS.

1004
0:50:48.020 --> 0:50:50.020
Нам доступны.

1005
0:50:50.020 --> 0:50:52.020
Есть 4 вида.

1006
0:50:52.020 --> 0:50:54.020
SSD Backed Volumes.

1007
0:50:54.020 --> 0:50:56.020
�  HDD Backed Volumes.

1008
0:50:58.020 --> 0:51:00.020
Если мы говорим.

1009
0:51:00.020 --> 0:51:02.020
Про Root Volume.

1010
0:51:02.020 --> 0:51:04.020
Это.

1011
0:51:04.020 --> 0:51:06.020
Тот volume на который устанавливается операционная система.

1012
0:51:06.020 --> 0:51:08.020
То в ней.

1013
0:51:08.020 --> 0:51:10.020
Она должна быть только.

1014
0:51:10.020 --> 0:51:12.020
Типа SSD.

1015
0:51:12.020 --> 0:51:14.020
Таким образом у нас.

1016
0:51:14.020 --> 0:51:16.020
Только два варианта для Root Volume.

1017
0:51:16.020 --> 0:51:18.020
General Purpose SSD.

1018
0:51:18.020 --> 0:51:20.020
GP2 либо Provisioned IOPS SSD.

1019
0:51:20.020 --> 0:51:22.020
IO1.

1020
0:51:24.020 --> 0:51:26.020
Для большинства случаев.

1021
0:51:26.020 --> 0:51:28.020
Типа.

1022
0:51:28.020 --> 0:51:30.020
General Purpose SSD.

1023
0:51:30.020 --> 0:51:32.020
Будет достаточно.

1024
0:51:32.020 --> 0:51:34.020
Она достаточно быстро работает.

1025
0:51:34.020 --> 0:51:36.020
В случае если вам.

1026
0:51:36.020 --> 0:51:38.020
Помимо скорости также важно.

1027
0:51:40.020 --> 0:51:42.020
Высокая пропускная способность.

1028
0:51:42.020 --> 0:51:44.020
То нужно смотреть в сторону Provisioned IOPS SSD.

1029
0:51:44.020 --> 0:51:46.020
Оно дороже.

1030
0:51:46.020 --> 0:51:48.020
Но при этом вы получаете скорость.

1031
0:51:48.020 --> 0:51:50.020
Пропускную способность.

1032
0:51:50.020 --> 0:51:52.020
Если мы говорим.

1033
0:51:52.020 --> 0:51:54.020
Про вторую группу.

1034
0:51:54.020 --> 0:51:56.020
Это HDD Backed Volumes.

1035
0:51:56.020 --> 0:51:58.020
Они не подходят.

1036
0:51:58.020 --> 0:52:00.020
Как для Root Volume.

1037
0:52:00.020 --> 0:52:02.020
Но при этом вы можете использовать.

1038
0:52:02.020 --> 0:52:04.020
Эти volume.

1039
0:52:04.020 --> 0:52:06.020
Как Data Volume.

1040
0:52:06.020 --> 0:52:08.020
Для хранения данных.

1041
0:52:08.020 --> 0:52:10.020
Выделяют два вида.

1042
0:52:10.020 --> 0:52:12.020
Первый это Throat Put Optimized HDD.

1043
0:52:12.020 --> 0:52:14.020
ST1.

1044
0:52:14.020 --> 0:52:16.020
Второй это Cold HDD SC1.

1045
0:52:16.020 --> 0:52:18.020
В случае если у вас.

1046
0:52:18.020 --> 0:52:20.020
Нагрузки.

1047
0:52:20.020 --> 0:52:22.020
Требующие.

1048
0:52:22.020 --> 0:52:24.020
Высокую пропускную способность.

1049
0:52:24.020 --> 0:52:26.020
�  при этом данные.

1050
0:52:26.020 --> 0:52:28.020
Часто запрашиваются.

1051
0:52:28.020 --> 0:52:30.020
В этом случае ST1.

1052
0:52:30.020 --> 0:52:32.020
Это ваш выбор.

1053
0:52:32.020 --> 0:52:34.020
В случае если вы.

1054
0:52:34.020 --> 0:52:36.020
Хотите сэкономить на ваших жестких дисках.

1055
0:52:36.020 --> 0:52:38.020
При этом.

1056
0:52:38.020 --> 0:52:40.020
Данные не часто запрашиваются.

1057
0:52:40.020 --> 0:52:42.020
То Cold HDD.

1058
0:52:42.020 --> 0:52:46.020
�  идеальный вариант.

1059
0:52:46.020 --> 0:52:48.020
Есть еще один функционал.

1060
0:52:48.020 --> 0:52:50.020
Который помогает нам.

1061
0:52:50.020 --> 0:52:52.020
Увеличить IOPerformance.

1062
0:52:52.020 --> 0:52:54.020
То есть Input Output операции.

1063
0:52:54.020 --> 0:52:56.020
Связанные с жесткими дисками.

1064
0:52:56.020 --> 0:52:58.020
Это Amazon EBS Optimized Instances.

1065
0:52:58.020 --> 0:53:00.020
Это такой функционал.

1066
0:53:00.020 --> 0:53:02.020
Который поддерживается.

1067
0:53:02.020 --> 0:53:04.020
Не всеми EC2 инстанциями.

1068
0:53:04.020 --> 0:53:06.020
�  в случае если оно.

1069
0:53:06.020 --> 0:53:08.020
Поддерживается.

1070
0:53:08.020 --> 0:53:10.020
То между вашим виртуальным.

1071
0:53:10.020 --> 0:53:12.020
Сервером EC2 инстанция.

1072
0:53:12.020 --> 0:53:14.020
�  отдельно стоящим.

1073
0:53:14.020 --> 0:53:16.020
EBS Volume.

1074
0:53:16.020 --> 0:53:18.020
Настраивается выделенное.

1075
0:53:18.020 --> 0:53:20.020
Выделенное.

1076
0:53:20.020 --> 0:53:22.020
Сетевое подключение.

1077
0:53:22.020 --> 0:53:24.020
Это увеличивает.

1078
0:53:24.020 --> 0:53:26.020
Скорость передачи данных.

1079
0:53:30.020 --> 0:53:32.020
Давайте теперь.

1080
0:53:32.020 --> 0:53:34.020
� ассмотрим оставшиеся два.

1081
0:53:34.020 --> 0:53:36.020
Сервиса которые нам помогают.

1082
0:53:36.020 --> 0:53:38.020
Предоставить общий доступ.

1083
0:53:38.020 --> 0:53:40.020
В этом случае.

1084
0:53:40.020 --> 0:53:42.020
EBS нам не поможет.

1085
0:53:42.020 --> 0:53:44.020
Так как в один момент времени.

1086
0:53:44.020 --> 0:53:46.020
EBS Volume может быть подключен.

1087
0:53:46.020 --> 0:53:48.020
Только к одному инстанцию.

1088
0:53:48.020 --> 0:53:50.020
Да можно переподключить.

1089
0:53:50.020 --> 0:53:52.020
Но для этого нужно отключить.

1090
0:53:52.020 --> 0:53:54.020
От предыдущего инстанца.

1091
0:53:54.020 --> 0:53:56.020
Если мы говорим про S3.

1092
0:53:56.020 --> 0:53:58.020
Оно доступно.

1093
0:53:58.020 --> 0:54:00.020
Для всех инстанцев.

1094
0:54:00.020 --> 0:54:02.020
Можно соответственно настройки.

1095
0:54:02.020 --> 0:54:04.020
Произвести.

1096
0:54:04.020 --> 0:54:06.020
Но оно не идеальное.

1097
0:54:06.020 --> 0:54:08.020
Объектное хранилище.

1098
0:54:08.020 --> 0:54:10.020
В зависимости от типа нагрузок.

1099
0:54:10.020 --> 0:54:12.020
Оно может не подойти.

1100
0:54:12.020 --> 0:54:14.020
В случае если вам нужен.

1101
0:54:14.020 --> 0:54:16.020
� менно.

1102
0:54:16.020 --> 0:54:18.020
Жесткий диск. Блочное хранилище.

1103
0:54:18.020 --> 0:54:20.020
Которое доступно для.

1104
0:54:20.020 --> 0:54:22.020
Всех ваших EC2 инстанцев.

1105
0:54:22.020 --> 0:54:24.020
То рекомендуется использовать.

1106
0:54:24.020 --> 0:54:26.020
Amazon EFS для Linux.

1107
0:54:26.020 --> 0:54:28.020
Операционных систем.

1108
0:54:28.020 --> 0:54:30.020
�  Amazon FSx.

1109
0:54:30.020 --> 0:54:32.020
Это специально для.

1110
0:54:32.020 --> 0:54:34.020
EC2 машин.

1111
0:54:34.020 --> 0:54:36.020
С операционной системой Windows.

1112
0:54:36.020 --> 0:54:38.020
Давайте.

1113
0:54:38.020 --> 0:54:40.020
Отдельно рассмотрим каждый.

1114
0:54:40.020 --> 0:54:42.020
Сервис.

1115
0:54:42.020 --> 0:54:44.020
Amazon EFS.

1116
0:54:44.020 --> 0:54:46.020
Еще раз повторюсь.

1117
0:54:46.020 --> 0:54:48.020
Предназначен для Linux.

1118
0:54:48.020 --> 0:54:50.020
Бейзет нагрузок.

1119
0:54:50.020 --> 0:54:52.020
Она монтируется через NFS протоколы.

1120
0:54:52.020 --> 0:54:54.020
К вашему EC2 инстанцу.

1121
0:54:54.020 --> 0:54:56.020
Может увеличиваться до 5 байтов.

1122
0:54:56.020 --> 0:54:58.020
� азмеров.

1123
0:54:58.020 --> 0:55:00.020
Также оно.

1124
0:55:00.020 --> 0:55:02.020
Автоматически масштабируется.

1125
0:55:02.020 --> 0:55:04.020
�  в ровном уменьшении.

1126
0:55:04.020 --> 0:55:06.020
Вы оплачиваете только.

1127
0:55:06.020 --> 0:55:08.020
За то что используете.

1128
0:55:08.020 --> 0:55:10.020
Например.

1129
0:55:10.020 --> 0:55:12.020
Пол месяца вы хранили 100 гигабайт данных.

1130
0:55:12.020 --> 0:55:14.020
А оставшаяся часть времени вы хранили 10 гигабайт данных.

1131
0:55:14.020 --> 0:55:16.020
�  соответственно.

1132
0:55:16.020 --> 0:55:18.020
Оплата будет.

1133
0:55:18.020 --> 0:55:20.020
� овно столько.

1134
0:55:20.020 --> 0:55:22.020
Сколько вы использовали.

1135
0:55:24.020 --> 0:55:26.020
На этом слайде.

1136
0:55:26.020 --> 0:55:28.020
Вы можете видеть примеры юсткейсов EFS.

1137
0:55:28.020 --> 0:55:30.020
Это как раз таки все те случаи.

1138
0:55:30.020 --> 0:55:32.020
В которых нужен общий доступ.

1139
0:55:34.020 --> 0:55:36.020
В одном месте.

1140
0:55:36.020 --> 0:55:38.020
Для всех ваших EC2 инстанцев.

1141
0:55:38.020 --> 0:55:40.020
Также вы видите.

1142
0:55:40.020 --> 0:55:42.020
Пример команды.

1143
0:55:42.020 --> 0:55:44.020
Для монтирования EFS.

1144
0:55:44.020 --> 0:55:46.020
В вашей EC2 машины.

1145
0:55:48.020 --> 0:55:50.020
Аналогичный с Amazon EFS.

1146
0:55:50.020 --> 0:55:52.020
Service.

1147
0:55:52.020 --> 0:55:54.020
Amazon EFS Windows.

1148
0:55:54.020 --> 0:55:56.020
File Server.

1149
0:55:56.020 --> 0:55:58.020
Оно поддерживает работу с EC2 инстанциями.

1150
0:55:58.020 --> 0:56:00.020
С операционной системой Windows.

1151
0:56:00.020 --> 0:56:02.020
Поддерживает технологию NTFS.

1152
0:56:02.020 --> 0:56:04.020
Нативно интегрирована с Microsoft Windows.

1153
0:56:06.020 --> 0:56:08.020
Здесь также хотел бы отметить.

1154
0:56:08.020 --> 0:56:10.020
Что интегрируется с Microsoft Active Directory.

1155
0:56:10.020 --> 0:56:12.020
�  поддерживает Windows Access Control List.

1156
0:56:14.020 --> 0:56:16.020
Это значит.

1157
0:56:16.020 --> 0:56:18.020
Что вы в Amazon EFS X.

1158
0:56:18.020 --> 0:56:20.020
Можете хранить.

1159
0:56:20.020 --> 0:56:22.020
Все данные ваших сотрудников.

1160
0:56:22.020 --> 0:56:24.020
Они будут храниться.

1161
0:56:24.020 --> 0:56:26.020
В одном месте.

1162
0:56:26.020 --> 0:56:28.020
�  доступны с любой.

1163
0:56:28.020 --> 0:56:30.020
С любой EC2 машины.

1164
0:56:30.020 --> 0:56:32.020
На котором стоит Windows.

1165
0:56:32.020 --> 0:56:34.020
Операционная система.

1166
0:56:34.020 --> 0:56:36.020
�  более того.

1167
0:56:36.020 --> 0:56:38.020
Вы можете разграничить право доступа.

1168
0:56:38.020 --> 0:56:40.020
Так что бы сотрудники не могли видеть.

1169
0:56:40.020 --> 0:56:42.020
Персональные данные других сотрудников.

1170
0:56:44.020 --> 0:56:46.020
На этом слайде вы также видите другие примеры.

1171
0:56:46.020 --> 0:56:48.020
� дея в том.

1172
0:56:48.020 --> 0:56:50.020
Что у вас.

1173
0:56:50.020 --> 0:56:52.020
Благодаря этому сервису.

1174
0:56:52.020 --> 0:56:54.020
Будет отдельно стоящий.

1175
0:56:54.020 --> 0:56:56.020
Обще доступный жесткий диск.

1176
0:56:56.020 --> 0:56:58.020
На котором вы можете записывать.

1177
0:56:58.020 --> 0:57:00.020
�  совместно использовать.

1178
0:57:00.020 --> 0:57:02.020
Общие данные.

1179
0:57:06.020 --> 0:57:08.020
На этом мы заканчиваем шестую секцию.

1180
0:57:08.020 --> 0:57:10.020
Это последняя секция в рамках.

1181
0:57:10.020 --> 0:57:12.020
Нашей сегодняшней лекции.

1182
0:57:12.020 --> 0:57:14.020
� азобрали вопросы хранения.

1183
0:57:14.020 --> 0:57:16.020
Связанные с сервисом Amazon EC2.

1184
0:57:18.020 --> 0:57:20.020
На этом мы подошли к концу нашей сегодняшней лекции.

1185
0:57:20.020 --> 0:57:22.020
� ассмотрели ряд вопросов.

1186
0:57:22.020 --> 0:57:24.020
Связанных с EC2.

1187
0:57:26.020 --> 0:57:28.020
Я хотел бы отметить.

1188
0:57:28.020 --> 0:57:30.020
Что это первая часть.

1189
0:57:30.020 --> 0:57:32.020
� з двух.

1190
0:57:32.020 --> 0:57:34.020
Посвященной теме Compute.

1191
0:57:34.020 --> 0:57:36.020
Сегодня мы с вами.

1192
0:57:36.020 --> 0:57:38.020
� азобрали следующие темы.

1193
0:57:38.020 --> 0:57:40.020
Поговорили про AMI.

1194
0:57:40.020 --> 0:57:42.020
Зачем она нужна.

1195
0:57:42.020 --> 0:57:44.020
Какие преимущества дает.

1196
0:57:44.020 --> 0:57:46.020
Далее рассмотрели подробнее.

1197
0:57:46.020 --> 0:57:48.020
Что такое Instance Type.

1198
0:57:48.020 --> 0:57:50.020
Какие семейства бывают.

1199
0:57:50.020 --> 0:57:52.020
Выбрать оптимальный для себя Instance Type.

1200
0:57:52.020 --> 0:57:54.020
Далее поговорили про User Data.

1201
0:57:54.020 --> 0:57:56.020
Для чего она нужна.

1202
0:57:56.020 --> 0:57:58.020
Какие преимущества дает.

1203
0:57:58.020 --> 0:58:00.020
�  в конце рассмотрели все.

1204
0:58:00.020 --> 0:58:02.020
Моменты связанные с хранением.

1205
0:58:02.020 --> 0:58:04.020
В рамках использования сервиса Amazon EC2.

1206
0:58:08.020 --> 0:58:10.020
На этом мы заканчиваем нашу сегодняшнюю лекцию.

1207
0:58:10.020 --> 0:58:12.020
Спасибо за внимание.

1208
0:58:12.020 --> 0:58:22.020
Увидимся с вами на следующих наших активностях.

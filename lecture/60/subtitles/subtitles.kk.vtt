WEBVTT

00:00:00.000 --> 00:00:05.000
Қайырлы күн, құрметті студенттер! Сізді
келесі дәрісте көргеніме қуаныштымын.

00:00:05.000 --> 00:00:15.000
Бұл - Compute ауқымды тақырыбының бірінші бөлімі.
Бұл - бұлтты есептеулерге қатысты сервистер.

00:00:15.000 --> 00:00:20.000
Ең алдымен, бұл Amazon EC2, ол туралы
бүгін айтатын боламыз. Ендеше, бастайық.

00:00:20.000 --> 00:00:27.047
Бүгінгі дәрісте 6 тақырыпқа тоқталамыз.
Бірінші бөлімде зертханалық жұмыс аясында

00:00:27.071 --> 00:00:35.000
қарастырылатын бизнес жағдайымызды еске 
түсіреміз. Осы аптада не істейтінімізді көреміз.

00:00:35.000 --> 00:00:41.000
Әрі қарай, Amazon EC2 сервисі туралы
бірнеше жаңа мәліметтерді талдаймыз.

00:00:41.000 --> 00:00:48.000
Одан кейін AMI, оның не екенін, артықшылықтары
мен кемшіліктері туралы толығырақ айтамыз.

00:00:48.000 --> 00:00:53.730
Келесі, төртінші тақырыпта пайдалану жағдайлары
 мен бизнес тапсырмаларына байланысты

00:00:53.754 --> 00:00:59.000
EC2 инстансының дұрыс түрін қалай
таңдауға болатынын толығырақ талқылаймыз.

00:00:59.000 --> 00:01:06.988
Соңғы екі тақырыпта маңызды функционалдылық
туралы сөйлесетін боламыз, бұл User Data және Amazon

00:01:07.012 --> 00:01:15.000
EC2 сервисімен жұмыс істейтін сақтаумен байланысты
қандай IT ресурстары бар екенін қарастырамыз.

00:01:17.000 --> 00:01:24.080
Ендеше, бірінші бөлімді бастайық. Бұл 
зертханалық жұмысымызға тікелей қатысты,

00:01:24.104 --> 00:01:31.000
осы слайдта көріп отырған IT архитектурасын
AWS бұлтында жасайтын боламыз.

00:01:31.000 --> 00:01:38.177
Әр апта сайын жаңа компонентті қосамыз.
Осы аптада Amazon EFS-пен байланысқан

00:01:38.201 --> 00:01:45.000
EC2 инстанстарын қосатын боламыз.
Мұның бәрі техникалық жағына қатысты.

00:01:45.000 --> 00:01:48.817
Енді бизнес-кейстің өзі туралы
толығырақ сөйлесейік, яғни

00:01:48.841 --> 00:01:53.000
бұл техникалық мәселені қандай
жағдайлар үшін шешуге болады.

00:01:53.000 --> 00:01:59.488
Біздің бизнес-кейсімізде Фрэнк пен
Мартаға тиесілі наубайхана мен кафе бар

00:01:59.512 --> 00:02:06.000
екені есімізде. Бұл істе оларға қызы
София мен жұмысшысы Нихил көмектеседі.

00:02:06.000 --> 00:02:16.000
Олар статикалық веб-сайтты іске қосқаннан кейін
келушілер саны артты. Бұл кафе иелерін қуантты.

00:02:16.000 --> 00:02:27.178
Олар дамудың одан арғы қадамдарын
қарастыра бастады және нәтижесінде көптеген

00:02:27.202 --> 00:02:40.000
келушілер жолжөнекей өнімдерді сатып алу
үшін ғана кафеге кіреді деген тұжырым жасады.

00:02:40.000 --> 00:02:45.031
Осыған байланысты тұтынушылардың
өтініші бойынша веб-сайтқа

00:02:45.055 --> 00:02:50.000
онлайн тапсырыс беру
мүмкіндігін қосу ыңғайлы болар еді.

00:02:50.000 --> 00:02:54.100
Яғни, техникалық тұрғыдан
алғанда, бұл - енді статикалық

00:02:54.124 --> 00:02:58.000
емес, тапсырыс беруге
болатын динамикалық веб-сайт.

00:02:58.000 --> 00:03:04.071
Сондай-ақ, осы бизнес-кейстің бөлігі
ретінде осы веб-сайттың динамикалығын

00:03:04.095 --> 00:03:10.000
көрсету үшін жеке парақшада қандай
тапсырыстар жасалғанын көре аламыз.

00:03:10.000 --> 00:03:25.000
Жақсы, бірінші бөлімді аяқтап, келесі бөлімге
көшеміз. Дәрісіміздің екінші бөліміне келдік.

00:03:25.000 --> 00:03:32.000
Бастамас бұрын, есептеулерге қатысты негізгі
сервистердің қандай түрлері бар еске түсірейік.

00:03:32.000 --> 00:03:38.859
Оларды бес түрлі топқа бөлуге болады.
Олардың айырмашылығы, біріншісінде

00:03:38.883 --> 00:03:47.000
инфрақұрылымға жоғары бақылау бар.
Оның бөліктерін кез келген жолмен реттей аламыз.

00:03:47.000 --> 00:03:55.359
Осылайша, IT-инфрақұрылымын қолдау
бойынша жұмыстың көп бөлігін AWS-ке тапсырған

00:03:55.383 --> 00:04:03.000
кезде serverless-ке ауысамыз.
Яғни, біз тек кішігірім бөлігін жасаймыз.

00:04:03.000 --> 00:04:11.488
Енді әр топты талдап көрейік. Біріншісі - Virtual 
Machines. Виртуалды машинаға SSH

00:04:11.512 --> 00:04:20.000
арқылы қосылып, қажетті параметрлерді
орнатып, кез келген қолданбаны орната аламыз.

00:04:20.000 --> 00:04:25.982
Ал бұл жағдайда, егер сервистер
туралы айтатын болсақ, бұл Amazon EC2,

00:04:26.006 --> 00:04:31.988
Elastic Compute Cloud, ең негізгі сервис.
Және сәл өзгеше, бірақ сонымен

00:04:32.012 --> 00:04:37.994
бірге виртуалды серверлерді
қамтамасыз ететін Amazon Lightsail сервисі.

00:04:38.018 --> 00:04:44.000
Келесі деңгейде бізде бақылау
азырақ, бірақ әлі де бар, бұл - Containers.

00:04:44.000 --> 00:04:49.000
Ең айқын өкілі - Amazon ECS, ол
Docker-контейнерлерімен жұмыс істейді.

00:04:49.000 --> 00:05:00.000
Үшінші топ - PaaS, Platform as a Service, AWS
Elastic Beanstalk сервисін айтуға болады.

00:05:00.000 --> 00:05:05.966
Идея мынада: қолданбаңыздың кодын жазып,
инфрақұрылымыңыздың конфигурациясын

00:05:05.990 --> 00:05:11.000
сипаттайтын құжатты дайындап,
оны осы сервиске жүктеп саласыз.

00:05:11.000 --> 00:05:16.776
Содан кейін келесі жағдай орын
алады: AWS Elastic Beanstalk сервисі

00:05:16.800 --> 00:05:22.575
осы инфрақұрылымды орнатумен
байланысты барлық мәселелерді шешеді,

00:05:22.599 --> 00:05:28.288
барлық қажетті қосымша ресурстарды
орнатады және сіз UI арқылы,

00:05:28.312 --> 00:05:34.000
яғни AWS Management Console арқылы
инфрақұрылымды басқара аласыз.

00:05:34.000 --> 00:05:39.719
Төртінші топ - Serverless, біз
IT-инфрақұрылымын қолдауға қатысты

00:05:39.743 --> 00:05:46.000
барлық жұмысты AWS-ке өткіземіз
және бізге тек код жазу керек болады.

00:05:46.000 --> 00:05:51.054
Көрнекті өкілі AWS Lambda болып табылады, 
яғни код жазасыз, оны жүктейсіз және

00:05:51.078 --> 00:05:56.000
AWS техникалық қызмет көрсетуге
қатысты барлық мәселені өз жағында шешеді.

00:05:56.000 --> 00:06:02.000
Нәтижесінде сіз Lambda функциясының орындалуының
секундына гигабайт саны үшін ғана төлейсіз.

00:06:02.000 --> 00:06:08.803
Lambda функциясы орындалмаған
жағдайда, ештеңе төлемейсіз.

00:06:08.827 --> 00:06:18.902
Бұл Serverless-тің артықшылығы. Атап өткім
келетін ақпарат, әдетте, егер сізде біркелкі

00:06:18.926 --> 00:06:29.000
тұрақты жүктемелер болса, Amazon EC2
немесе оған жақын сервистерге жүгіну ұсынылады.

00:06:29.000 --> 00:06:35.232
Егер сіз, мысалы, шағын стартап
болсаңыз немесе IT-инфрақұрылымыңыздың

00:06:35.256 --> 00:06:41.488
жүктемесі тұрақты болмаса, олар
әртүрлі уақытта келеді, жүктеме мүлде

00:06:41.512 --> 00:06:48.019
келмейтін кезеңдер де болады, бұл
жағдайда Serverless нұсқасын қарастыру

00:06:48.043 --> 00:06:54.000
ұсынылады, өйткені жүктеме
болмаған кезде сіз ештеңе төлемейсіз.

00:06:54.000 --> 00:07:02.000
Осылайша, Serverless шешімдер мұндай жұмыс
жүктемелері үшін үнемді шешім болып табылады.

00:07:02.000 --> 00:07:14.000
Serverless тағы бір өкілі - AWS Fargate. Бұл -
контейнерлерді басқаруға мүмкіндік беретін сервис.

00:07:14.000 --> 00:07:20.000
Яғни, оны шешуге көмектесетін
арнайы бөлек Serverless шешім.

00:07:20.000 --> 00:07:27.232
Сондай-ақ, есептеуге қатысты
басқа санаттағы екі сервисті

00:07:27.256 --> 00:07:34.488
атап өткім келеді. Бұл - AWS Outposts.
Идея мынада: AWS Outposts

00:07:34.512 --> 00:07:42.261
сервисін жергілікті есептеу
қуатыңызбен байланыстыра

00:07:42.285 --> 00:07:49.000
аласыз және оларды AWS
қуаты сияқты басқара аласыз.

00:07:49.000 --> 00:07:55.740
Екінші мысал - AWS Batch, бұл
белгілі бір тапсырмаларды бач ретінде,

00:07:55.764 --> 00:08:02.000
яғни белгілі бір топтарда
орындауға мүмкіндік беретін сервис.

00:08:06.000 --> 00:08:11.532
Бұл дәрісте Amazon Elastic Compute Cloud (Amazon
EC2) сервисі туралы егжей-тегжейлі айтатын боламыз.

00:08:11.556 --> 00:08:14.914
Бұл не? Бұл - бізді виртуалды 
машиналармен, яғни

00:08:14.938 --> 00:08:19.299
серверлермен қамтамасыз ететін 
сервис. Біздің API немесе AWS

00:08:19.323 --> 00:08:23.429
Management Console пайдалана
отырып, бірнеше минут ішінде

00:08:23.453 --> 00:08:28.000
бұл серверлерді кез келген
мөлшерде орнату мүмкіндігіміз бар.

00:08:28.000 --> 00:08:33.468
Қажет болса, біз IT инфрақұрылымындағы
жүктемеге байланысты

00:08:33.492 --> 00:08:40.000
масштабтауды үлкейту және кішірейтуді
автоматты түрде реттей аламыз.

00:08:40.000 --> 00:08:47.138
Оның үстіне, сервис бұлтқа
негізделгендіктен, ол тек

00:08:47.162 --> 00:08:55.000
қажет есептеу қуаты үшін
ғана төлеуге мүмкіндік береді.

00:08:55.000 --> 00:09:00.837
Мысал келтірейін, егер кейбір
есептеулер үшін қысқа мерзімді

00:09:00.861 --> 00:09:07.492
есептеу қуаты қажет десек және
бұл есептеулер жұмыс істеген кезде,

00:09:07.516 --> 00:09:13.790
мысалы, 100 машина 3 күнді
алады, біз іс жүзінде AWS-те бар кез

00:09:13.814 --> 00:09:21.000
келген конфигурациялы 100 серверін
сұрап, оларды 3 күнге іске қосамыз.

00:09:21.000 --> 00:09:29.027
Есептеулерімізді аяқтағаннан кейін бұл серверлерді
қайтара аламыз және айдың соңында жұмыс істеп

00:09:29.051 --> 00:09:37.000
тұрған серверлер саны үшін осы 3 күн үшін төлейміз.
Осылайша тек пайдаланғанымыз үшін төлейміз.

00:09:37.000 --> 00:09:42.172
Amazon EC2 неден тұратыны туралы
бірнеше сөз айта кетейін. Бізде AWS

00:09:42.196 --> 00:09:47.988
Regions бар екенін білеміз, әрбір
AWS Regions-та бірнеше availability zone

00:09:48.012 --> 00:09:53.494
бар және availability zone аясында
бірнеше дата-центр бар. Дата-центрде

00:09:53.518 --> 00:09:59.000
бізде ондаған мың серверлер бар
және әрбір сервер мүмкіндігінше қуатты.

00:09:59.000 --> 00:10:05.488
Енді гипервизорды қолданудың
арқасында бізде бір қуатты физикалық

00:10:05.512 --> 00:10:12.000
серверді жүздеген шағын виртуалды
серверлерге бөлу мүмкіндігі бар.

00:10:12.000 --> 00:10:18.078
Осылайша, Amazon EC2
сервисінде 700-ден астам әртүрлі

00:10:18.102 --> 00:10:25.000
опциялардың ішінен қалаған
конфигурацияны таңдауға болады.

00:10:25.000 --> 00:10:30.465
Виртуалды серверді алған кезде
оның құрамында CPU процессор

00:10:30.489 --> 00:10:35.482
бар, яғни есептеу қуатының
өзі, RAM, оперативті жады

00:10:35.506 --> 00:10:40.454
және деректерді сақтайтын
орын - Instance Store немесе

00:10:40.478 --> 00:10:45.988
Amazon EBS. Amazon EBS – бізге 
тұрақты сақтауды қамтамасыз

00:10:46.012 --> 00:10:51.475
ететін бөлек сервис.
Instance Store - уақытша сақтау орны.

00:10:51.499 --> 00:10:56.962
Осы екі сақтау опциясының
ерекшеліктері мен айырмашылықтары

00:10:56.986 --> 00:11:01.457
туралы сәл кейінірек айтатын
 боламыз. Amazon EC2

00:11:01.481 --> 00:11:07.000
сервисін пайдалану жағдайлары
туралы бірнеше сөз айтайық.

00:11:07.000 --> 00:11:14.000
Әдетте, бұл сервис есептеу ресурстарын
толық бақылау қажет болған жағдайда таңдалады.

00:11:14.000 --> 00:11:18.988
Виртуалды серверлермен жұмыс істегенде,
кез келген қолданбаны орната аламыз,

00:11:19.012 --> 00:11:24.000
оны өзіміз қалағандай баптай аламыз
және бұл жерде бізді ешкім шектемейді.

00:11:24.000 --> 00:11:29.572
Кез келген операциялық жүйені
орната аламыз, демек, кез келген

00:11:29.596 --> 00:11:35.168
дерлік IT-инфрақұрылымын,
физикалық серверлерде жұмыс істейтін

00:11:35.192 --> 00:11:40.723
жергілікті дата-центрде
орналастырылған кез келген қолданбаны

00:11:40.747 --> 00:11:46.000
AWS бұлтындағы Amazon EC2
сервисіне тасымалдауға болады.

00:11:46.000 --> 00:11:58.000
Сондай-ақ, есептеу шығындарын оңтайландырғымыз
келсе, Amazon EC2 сервисін пайдалана бастаймыз.

00:11:58.000 --> 00:12:04.988
Reserved Instances сатып алуға, Spot Instances
пайдалануға, сондай-ақ Amazon EC2 виртуалды

00:12:05.012 --> 00:12:12.000
серверлерін пайдалану үшін айтарлықтай
жеңілдіктер беретін Savings Plans мүмкіндіктері бар.

00:12:16.000 --> 00:12:23.000
EC2 виртуалды серверін орнату кезінде
бірнеше шешім қабылдауымыз керек.

00:12:23.000 --> 00:12:28.484
Ең негізгі қадамдарды қарастырайық.
Ең бірінші қадам - өзіміз

00:12:28.508 --> 00:12:35.000
дайындайтын AMI немесе AWS-те бар
AMI пайдалану туралы шешім қабылдау.

00:12:35.000 --> 00:12:42.000
Әрі қарай, қандай инстанс түрін
қолданатынымызды анықтаймыз.

00:12:42.000 --> 00:12:51.000
Бұл жағдайда қанша процессор, қанша жедел
жады және сақтау орны қажет екенін білуіміз керек.

00:12:51.000 --> 00:12:58.696
Содан кейін EC2 инстанстарының дата-центрде 
қалай орналасуын қалайтынымызды

00:12:58.720 --> 00:13:06.000
қосымша көрсете аламыз. Бұл туралы 
келесі слайдтарда айтатын боламыз.

00:13:06.000 --> 00:13:11.219
Қолданбамыз басқа сервистермен
жұмыс істейтін болса, біздің инстансты

00:13:11.243 --> 00:13:17.000
пайдаланатын және басқа сервистерге
қол жеткізетін рөлді теңшеуіміз керек.

00:13:17.000 --> 00:13:22.000
Сондай-ақ, User Data-ны пайдаланамыз
ба, жоқ па, соны түсіну керек.

00:13:22.000 --> 00:13:28.384
Біз инстансымызды алдын ала
конфигурациялау үшін кейбір командаларды

00:13:28.408 --> 00:13:34.792
AMI-ге қоса аламыз, бірақ кейбір
себептерге байланысты кейбірін AMI-ге

00:13:34.816 --> 00:13:41.896
орналастыра алмаймыз, сондықтан инстанс
орнатылған кезде кейбір командаларды

00:13:41.920 --> 00:13:49.000
орындайтын User Data теңшеуіміз керек.
Сақтау мәселелері де шешілуі керек.

00:13:49.000 --> 00:13:59.184
Екі нұсқа бар, Instance store пайдалануға болады, бұл
ескі опция не Amazon EBS, Persistent Block Storage,

00:13:59.208 --> 00:14:09.000
тұрақты блокты сақтау орнын ұсынатын бөлек сервисті
пайдалануға болады, AWS ұсынған best practice.

00:14:09.000 --> 00:14:14.252
Әрі қарай, қауіпсіздікке қатысты
мәселелерді қарастыруымыз керек -

00:14:14.276 --> 00:14:19.528
бұл Security Group баптау, қандай
трафикке рұқсат етілген, қандай

00:14:19.552 --> 00:14:24.764
трафикке тыйым салынған және
ең соңғы Key pair, бұл - SSH арқылы

00:14:24.788 --> 00:14:30.000
қашықтан виртуалды серверлерге
қосылуға мүмкіндік беретін кілт.

00:14:30.000 --> 00:14:35.370
Осымен, екінші бөлімінің
соңына жеттік, Amazon EC2 сервисі

00:14:35.394 --> 00:14:40.764
дегеніміз не, қандай мүмкіндіктер
беретіні туралы жадымызды

00:14:40.788 --> 00:14:45.977
жаңарттық, сондай-ақ
серверімізді сәтті баптау және іске

00:14:46.001 --> 00:14:51.000
қосу үшін орындалуы керек
қадамдарға назар аудардық.

00:14:51.000 --> 00:14:57.281
Бірінші және ең негізгісі - AMI таңдау,
AMI дегеніміз не және ол бізге қандай

00:14:57.305 --> 00:15:04.000
мүмкіндіктер беретіні туралы бүгінгі
дәрісіміздің үшінші бөлімінде қарастырамыз.

00:15:04.000 --> 00:15:14.488
Енді AMI дегеніміз не екенін қарастырайық,
ол Amazon Machine Image дегенді білдіреді, бұл -

00:15:14.512 --> 00:15:25.000
осы үлгі template негізінде EC2 виртуалды
серверлерін жасауға мүмкіндік беретін үлгі түрі.

00:15:25.000 --> 00:15:35.000
Суретте көріп отырғаныңыздай, тек AMI
көмегімен бірдей EC2 инстанстарын орната аламыз.

00:15:35.000 --> 00:15:41.488
AMI - root volume-ді, яғни операциялық
жүйе орнатылған қатқыл дискінің

00:15:41.512 --> 00:15:48.000
түбірлік бөлімін, мүмкін кейбір
бағдарламалық жасақтаманы, сипаттайды.

00:15:48.000 --> 00:15:55.000
Төменде осы AMI пайдаланатын
аккаунттар туралы ақпарат сипатталған.

00:15:55.000 --> 00:16:06.000
Үшінші тармақ - сақтау мақсаттары үшін қатқыл
дискінің қосымша бөлімдерінің сипаттамасы.

00:16:06.000 --> 00:16:19.000
AMI бізге қандай артықшылықтар береді, бұл 3R -
Repeatability, Reusability және Recoverability.

00:16:19.000 --> 00:16:25.000
Яғни бұл шаблонды бір рет жасап,
бірнеше рет қолданамыз деген ой.

00:16:25.000 --> 00:16:31.488
Сонымен қатар, адам факторы алынып
тасталды және параметрлер конфигурациясының

00:16:31.512 --> 00:16:38.000
кейбір бөлігі осы үлгіде орналасқан және
басқа конфигурацияны алу мүмкін емес.

00:16:38.000 --> 00:16:42.634
Осылайша, бұл адам факторын жояды.
Тағы бір мәселе, біз AMI-ді

00:16:42.658 --> 00:16:47.064
ең қарапайым түрде пайдалана
аламыз, бұл серверді, барлық

00:16:47.088 --> 00:16:51.298
қажетті бағдарламалық
жасақтаманы орнату, барлығы дұрыс

00:16:51.322 --> 00:16:56.000
жұмыс істейтініне көз жеткізу
және осы серверден AMI жасау.

00:16:56.000 --> 00:17:02.000
Бұл қалпына келтіру үшін пайдалануға
болатын реттелетін үлгі болады.

00:17:02.000 --> 00:17:08.488
Егер бірдеңе болып, серверіңіз
істен шықса, реттелетін AMI көмегімен

00:17:08.512 --> 00:17:15.000
оны тез жұмысқа қайтара аласыз.
Бұл, әрине, ең қарапайым пайдалану.

00:17:15.000 --> 00:17:21.000
AMI пайдаланудың неғұрлым озық тәжірибелері
бар, олар туралы кейінірек айтатын боламыз.

00:17:23.000 --> 00:17:29.000
Енді дұрыс AMI таңдауға мүмкіндік
беретін негізгі ойларды қарастырайық.

00:17:29.000 --> 00:17:35.000
Бес түрлі тармақ бар.
Біріншісі және негізгісі – аймақ.

00:17:35.000 --> 00:17:42.000
AMI белгілі бір AWS аймағында жасалатынын
және сол жерде қолданылатынын білеміз.

00:17:42.000 --> 00:17:50.000
Бұл AMI-ды басқа аймақта пайдаланғыңыз
келсе, оны көшіру керек. Мұны істеу өте оңай.

00:17:50.000 --> 00:18:01.000
Бұл жағдайда көшірме осы AMI үшін бөлек бірегей
ID алады және одан кейін дербес пайдаланылады.

00:18:02.000 --> 00:18:06.000
Екінші тармақ - операциялық жүйені 
таңдау. Біз ештеңемен шектелмейміз.

00:18:06.000 --> 00:18:12.626
Кез келген операциялық жүйені орната 
аламыз. Бұл жағдайда ең көп таралған

00:18:12.650 --> 00:18:19.000
опциялар Windows OS немесе Linux
OS кейбір нұсқалары болып табылады.

00:18:20.000 --> 00:18:27.994
Әрі қарай, IT сақтау ресурсы туралы шешім
қабылдау керек. Бұл EBS, тұрақты блоктық

00:18:28.018 --> 00:18:37.000
сақтауды қамтамасыз етуге көмектесетін бөлек
сервис немесе ол Instance Store болуы мүмкін.

00:18:37.000 --> 00:18:44.000
Instance Store - бұл виртуалды машинамыздың
жанында физикалық орналасқан жад.

00:18:44.000 --> 00:18:49.746
Бұл ұсынылмайды, өйткені бұл ескі
қолдану жағдайы және best practice

00:18:49.770 --> 00:18:55.000
ретінде артықшылықтарына
байланысты EBS пайдалану ұсынылады.

00:18:55.000 --> 00:18:58.000
Бұл туралы келесі слайдтарда
толығырақ тоқталамыз.

00:18:59.000 --> 00:19:08.000
Төртінші тармақ - архитектураны таңдау.
Біз 32 немесе 64 битті таңдай аламыз.

00:19:08.000 --> 00:19:12.199
Сонымен қатар, біз ARM
архитектурасын таңдай аламыз.

00:19:12.223 --> 00:19:17.000
Сондай-ақ, AWS Graviton-нан
өзіндік әзірлеме пайда болды.

00:19:17.000 --> 00:19:24.000
Оның белгілі бір артықшылықтар бар.
Толығырақ ресми AWS құжаттамасынан оқи аласыз.

00:19:24.000 --> 00:19:33.000
Қай архитектура жақсырақ жұмыс істейтін, жұмыс
 жүктемелерінің түрлері үшін салыстырулар бар.

00:19:34.000 --> 00:19:40.488
Соңғы тармақ - виртуализация түрі.
Екі нұсқа бар, PV Paravirtual және

00:19:40.512 --> 00:19:47.000
HVM Hardware Virtual Machine.
Көп жағдайда HVM пайдалану ұсынылады.

00:19:47.000 --> 00:19:54.488
Енді AMI-ді қайдан алуға болатыны 
туралы айтайық. Біріншісі - Quick Start.

00:19:54.512 --> 00:20:02.000
Бұл - AWS ұсынған дайын AMI.
Екіншісі - My AMIs деп аталатын.

00:20:02.000 --> 00:20:11.988
Бұл өзіміз үшін жасайтын барлық AMI, 
реттелетін AMI. Келесі - AWS Marketplace бар.

00:20:12.012 --> 00:20:22.000
Бұл - басқа компаниялар жасаған
AMI-ді пайдалануға болатын арнайы орын.

00:20:22.000 --> 00:20:30.000
Дегенмен, AWS ешқандай кепілдік бермейді. Сондықтан,
мұнда пайдалану сіздің тәуекеліңізге байланысты.

00:20:30.000 --> 00:20:37.000
AWS Marketplace-те танымал вендорлардың
тегін және ақылы AMI-ларын таба аласыз.

00:20:37.000 --> 00:20:43.000
Мысалы, Red Hat және т.б.
Төртінші – Community AMIs.

00:20:43.000 --> 00:20:49.258
Бұл - AWS пайдаланушылары жасаған AMI.
Бұл жерде тағы да AWS ешқандай

00:20:49.282 --> 00:20:56.000
жауапкершілік көтермейді және бұл
AMI-ді өз тәуекеліңізбен пайдаланасыз.

00:20:59.000 --> 00:21:06.000
Енді Root Volume үшін сақтаудың
екі түрін салыстыруға келдік.

00:21:06.000 --> 00:21:14.000
Бұл Instance Store және Amazon EBS.
Кесте бес түрлі сипаттамада берілген.

00:21:14.000 --> 00:21:23.000
Әрқайсысына тоқталайық. EBS-тен инстансты іске қосу
Instance Store-дан іске қосудан әлдеқайда жылдамырақ.

00:21:23.000 --> 00:21:29.000
Себебі, Instance Store деректердің кейбір
бөліктерін Amazon S3 ішінде сақтайды.

00:21:29.000 --> 00:21:38.237
Amazon S3-тен деректерді жүктеу біраз уақытты 
алады. EBS үшін Root Volume-нің ең үлкен көлемі

00:21:38.261 --> 00:21:48.000
16 ТБ, ал Instance Store үшін ол тек 10 ГБ. Бірақ 
көптеген тапсырмалар үшін 10 ГБ та жеткілікті.

00:21:49.000 --> 00:21:58.000
Егер инстансты тоқтату мүмкіндігі туралы айтатын
болсақ, EBS-тегі инстанстар үшін жасай аламыз.

00:21:58.000 --> 00:22:05.000
Және инстансты тоқтатқанда, бұл үшін
ешқандай шығынға ұшырамаймыз.

00:22:06.000 --> 00:22:11.022
Егер Instance Store туралы айтатын
болсақ, мұндай инстансты тоқтату мүмкін

00:22:11.046 --> 00:22:16.000
емес, оны тек қайта жүктеуге немесе
тоқтатуға, яғни оны өшіруге болады.

00:22:16.000 --> 00:22:20.000
Тоқтатқан кезде, Instance Store-да
сақталған барлық деректер жоғалады.

00:22:22.000 --> 00:22:28.000
Егер инстанстың түрін өзгерту мүмкіндігі туралы 
айтсақ, онда EBS жағдайында мұны істеу өте оңай.

00:22:28.000 --> 00:22:32.988
Инстансты кез келген уақытта
тоқтата аласыз, Instance type өзгерте

00:22:33.012 --> 00:22:38.000
аласыз және оны қайта қосқан
кезде Instance type өзгертілген болады.

00:22:38.000 --> 00:22:44.133
Егер Instance Store туралы айтатын болсақ,
онда бұл виртуалды сервердің жанында

00:22:44.157 --> 00:22:51.000
физикалық түрде орналасқан қатқыл дискінің
бөлімі болғандықтан мұны істеу мүмкін емес.

00:22:51.000 --> 00:22:59.000
Сондықтан, Instance type өзгерткен кезде,
жеке Instance store бар басқа физикалық серверге

00:22:59.000 --> 00:23:06.735
тасымалданасыз. Осылайша, Instance type өзгертуге
 мүмкіндік жоқ. Егер төлем мәселелері туралы

00:23:06.759 --> 00:23:15.000
айтатын болсақ, онда EBS жағдайында Amazon EBS
сервисінің тарифтеріне сәйкес шығындарды төлейсіз.

00:23:15.000 --> 00:23:21.564
Instance Store шығындары туралы айтатын болсақ,
бұл - Amazon S3 сервисінде деректерді сақтауға

00:23:21.588 --> 00:23:29.000
байланысты шығындар. Көбінесе Amazon S3 сервисінде
деректерді сақтау EBS сервисінде сақтаудан арзанырақ.

00:23:31.000 --> 00:23:36.488
Егер гигабайттар туралы айтатын болсақ,
100 гигабайтқа дейін, онда бұл шығындар

00:23:36.512 --> 00:23:42.000
минималды және айтарлықтай ерекшеленбейді.
Сондықтан бұл жайтты да ескерген жөн.

00:23:42.000 --> 00:23:46.446
Егер сізде серверлер саны өте
көп болса және Instance Store-ның

00:23:46.470 --> 00:23:50.700
артықшылықтары мен кемшіліктері
жеткілікті болса, деректер

00:23:50.724 --> 00:23:55.644
Amazon S3 сервисінде сақталғандықтан
және ол арзанырақ болғандықтан,

00:23:55.668 --> 00:24:00.000
оны пайдаланып, кейбір
артықшылықтарға қол жеткізе аласыз.

00:24:00.000 --> 00:24:12.000
Барлық басқа жағдайларда Root Volume үшін Amazon
EBS-ті пайдалану best practice ретінде ұсынылады.

00:24:12.000 --> 00:24:24.000
Енді Instance Lifecycle, яғни EC2 инстансының
өмірлік циклі туралы сөйлесейік.

00:24:24.000 --> 00:24:30.979
Барлығы Pending күйінен басталады.
Инстансты бірінші рет іске қосқан кезде

00:24:31.003 --> 00:24:37.982
AMI-ден сервер іске қосылады.
Ол қосылған кезде ол Pending күйінде болады.

00:24:38.006 --> 00:24:41.988
Pending күйіне Stopped
күйінен де жете аламыз.

00:24:42.012 --> 00:24:48.676
Бұл тек тоқтатуға болатын Amazon
EBS-backed Instances-тарға қатысты.

00:24:49.000 --> 00:24:54.000
Сонымен, оны тоқтатып, қосқан кезде, ең
алдымен, ол Stopped күйден Pending күйіне өтеді.

00:24:54.000 --> 00:25:02.000
Әрі қарай, ол қосылып, жұмысқа дайын болғаннан
кейін Pending күйінен Running күйіне ауысады.

00:25:02.000 --> 00:25:10.000
Енді осы EC2 инстансына SSH арқылы
қосылып, онымен жұмыс істей аласыз.

00:25:10.000 --> 00:25:20.000
Қосылған инстансты қайта жүктеуге болады.
Ол Rebooting күйіне өтіп, Running күйіне оралады.

00:25:20.000 --> 00:25:24.628
Reboot кезінде сол серверде
физикалық ақаулар болмаса, оның

00:25:24.652 --> 00:25:30.000
жалпыға ортақ IP мекенжайы мен
физикалық сервер өзгеріссіз қалады.

00:25:30.000 --> 00:25:37.000
Amazon EBS-backed Instances үшін
оны тоқтату мүмкіндігі бар.

00:25:37.000 --> 00:25:42.000
Оны істегеннен кейін ол Running
күйінен Stopping күйіне өтеді.

00:25:42.000 --> 00:25:46.028
Толық тоқтағаннан кейін ол
Stopped күйіне өтетін болады.

00:25:46.052 --> 00:25:52.000
Сондай-ақ, Amazon EBS-backed Instances-тарды
күту күйіне, яғни гибернацияға жібере аламыз.

00:25:52.000 --> 00:26:00.988
Бұл жағдайда ағымдағы күй операциялық жадта
сақталады. Осылайша ол тезірек қосылады.

00:26:01.012 --> 00:26:10.000
Ол, сондай-ақ, Stopped және Pending күйлері
арқылы өтеді және соңында Running күйіне өтеді.

00:26:12.000 --> 00:26:22.000
Тоқтаудың гибернациядан айырмашылығы
гибернация күйінде физикалық серверді сақтаймыз.

00:26:22.000 --> 00:26:27.598
Ол жұмыс істейді, оның жеке және жалпы
IP мекенжайлары сақталады және осы

00:26:27.622 --> 00:26:34.000
құрылғымен жұмыс істей бересіз. Бұл серверде 
физикалық ақаулар болмаған жағдайда.

00:26:34.000 --> 00:26:42.000
Егер оны тоқтатсақ, виртуалды машинамызды
орналастыратын физикалық сервер өзгеруі мүмкін.

00:26:44.000 --> 00:26:51.720
Соңғы күй – аялдама. Егер машина 
жұмыс істеп тұрса және оны тоқтатсақ, ол

00:26:51.744 --> 00:27:00.000
Shutting down күйіне өтеді, яғни өшеді
және соңында Terminated күйіне өтеді.

00:27:00.000 --> 00:27:03.988
AWS Management Console-де
біраз уақыт оны Terminated деп

00:27:04.012 --> 00:27:08.000
көресіз және біраз уақыттан
кейін ол толығымен жоғалады.

00:27:08.000 --> 00:27:15.561
Terminated күйіне біз Stopped күйінен
өте аламыз, яғни Amazon EBS-backed

00:27:15.585 --> 00:27:24.000
Instance тоқтатылған болса, оны Running
күйіне тасымалдамай-ақ тоқтата аламыз.

00:27:24.000 --> 00:27:32.000
Енді жаңа AMI құру туралы бірнеше сөз айтқым 
келеді. Біз A аймағындамыз деп елестетіп көрейік.

00:27:32.000 --> 00:27:40.000
Кейбір AMI бар, олар біз жасаған немесе кез келген
басқа AWS қамтамасыз ететін AMI-лар болуы мүмкін.

00:27:40.000 --> 00:27:48.124
Инстанс іске қосылғанда AMI-дің нақты көшірмесін
аламыз, іске қосылған инстанста Unmodified

00:27:48.148 --> 00:27:56.000
instance болады. Содан кейін осы инстансқа
қосылып, кейбір әрекеттерді орындай аламыз.

00:27:58.000 --> 00:28:04.244
AMI құрудың тағы бір тәсілі -
EC2 Image Builder сервисі.

00:28:04.268 --> 00:28:11.253
Бұл сервисті пайдалана отырып, анық
UI интерфейсінде AMI құрылғыларын

00:28:11.277 --> 00:28:17.899
жасауды, басқаруды, техникалық
қызмет көрсетуді, орналастыруды

00:28:17.923 --> 00:28:24.000
және нұсқаларды басқаруды
оңай автоматтандыруға болады.

00:28:24.000 --> 00:28:30.000
Бұл слайдта EC2 Image Builder
сервисінің image pipeline көресіз.

00:28:30.000 --> 00:28:35.065
Ол 5 негізгі қадамнан тұрады.
Ең бірінші істеу керек нәрсе - source

00:28:35.089 --> 00:28:40.000
image таңдау, яғни бұл сіздің
AMI негізделген операциялық жүйе.

00:28:40.000 --> 00:28:48.000
Amazon Linux 2, Windows операциялық
жүйесін, Ubuntu және т.б. таңдауға болады.

00:28:48.000 --> 00:28:52.701
Екінші қадам - компоненттер 
тізімін анықтау. Қандай қолданбалар

00:28:52.725 --> 00:28:56.817
мен бағдарламалық жасақтама
орнатылатынын көрсетесіз.

00:28:56.841 --> 00:29:04.967
Мысалы, Python бағдарламалау тілін орнату.
Үшінші қадам - қауіпсіздікті тексеру үшін

00:29:04.991 --> 00:29:14.000
Hardening Tests деп аталатын сынақтарды орындау.
AWS қамтамасыз ететін арнайы сынақтар бар.

00:29:14.000 --> 00:29:20.000
Сондай-ақ, мұнда өз
сынақтарыңызды қосуға болады.

00:29:20.000 --> 00:29:28.000
AMI қауіпсіздік тексеруінен өткеннен
кейін төртінші қадамға көшеміз.

00:29:28.000 --> 00:29:36.000
Төртінші қадам - жаңа AMI қаншалықты
жиі жасалатынын жоспарлау.

00:29:36.000 --> 00:29:46.000
Сұрақ туындауы мүмкін: неліктен мерзімді негізде
AMI құрып отыру керек? Жауап өте қарапайым.

00:29:46.000 --> 00:29:54.032
Операциялық жүйелер мен бағдарламалық жасақтама
әрқашан дамып жатқанын білеміз. Ал жаңартудың

00:29:54.056 --> 00:30:02.000
бір түрі - функционалдылықпен қатар қауіпсіздіктің
 жаңартылуы, яғни қауіпсіздік патчтары.

00:30:02.000 --> 00:30:12.388
Осылайша, бұл кесте құрамдастардың дәл
осындай құрамы бар AMI жасауға мүмкіндік

00:30:12.412 --> 00:30:22.000
береді, бірақ белгілі бір қолданбалар
үшін жаңа жаңартулар қолданылады.

00:30:22.000 --> 00:30:29.988
Соңғы қадам - AMI қай аймақтарды қамтитынын 
анықтау. Инфрақұрылымды бірнеше

00:30:30.012 --> 00:30:38.000
аймақта орналастырсаңыз, бір негізгі
немесе бірнеше аймақты таңдауға болады.

00:30:40.000 --> 00:30:50.000
Осымен бүгінгі дәрісіміздің үшінші бөлімі аяқталды.
AMI-ге қатысты негізгі ойларды талқыладық.

00:30:50.000 --> 00:30:55.068
Енді дәрісіміздің төртінші
бөліміне жеттік және EC2

00:30:55.092 --> 00:31:01.380
инстансының түрін таңдаудың
нюанстары туралы айтатын боламыз.

00:31:01.404 --> 00:31:06.826
Инстанс түрі дегеніміз не?
Бұл - процессорды өңдеу CPU

00:31:06.850 --> 00:31:12.784
қуат сипаттамаларын қамтитын
кейбір бірегей конфигурация.

00:31:13.000 --> 00:31:20.000
Келесі, Memory - операциялық жады болып 
табылады. Storage - сақтау, біздің қатқыл дискілер.

00:31:20.000 --> 00:31:28.000
Ал Network Performance, яғни желімен жұмыс
істеуге арналған аппараттық құралдардың қасиеттері.

00:31:30.000 --> 00:31:36.587
Инстанс түрінің атауы бірнеше бөліктен 
тұрады. Оны слайдтан көре аласыз.

00:31:36.611 --> 00:31:44.000
Ең бірінші - инстанс түрлерінің топтары.
Ол туралы келесі слайдтарда айтатын боламыз.

00:31:44.000 --> 00:31:50.000
Біздің жағдайда бұл m тобы.
Келесі, екіншісі - буын нөмірі болуы керек.

00:31:50.000 --> 00:31:56.000
Біздің жағдайда m5, m тобының
5-ші буын инстансын білдіреді.

00:31:56.000 --> 00:32:07.253
Жыл сайын Amazon бұл санды арттырып, одан
да тартымды шарттарды ұсынады: әдетте бірдей

00:32:07.277 --> 00:32:18.000
бағаға олар алдыңғы буынға қарағанда
қуаттырақ немесе жақсырақ машинаны ұсынады.

00:32:19.000 --> 00:32:30.000
Мысалы, m6 буыны бағасы бойынша дәл солай
болады, бірақ жақсы өнімділікке ие болуы мүмкін.

00:32:30.000 --> 00:32:40.187
Үшінші бөлігі - кейбір қосымша мүмкіндіктер.
Бұл жағдайда сіз d әрпін көресіз,

00:32:40.211 --> 00:32:50.000
бұл қатқыл дискінің осы түрі HDD
орнына SSD түрін қолданатынын білдіреді.

00:32:52.000 --> 00:32:58.000
Осы негізгі бөліктерден кейін нүкте
арқылы инстанстың өлшемі сипатталады.

00:32:58.000 --> 00:33:04.663
Nano, micro және т.б. бастап белгілі 
бір градация бар. Мысалы, xlarge бұл

00:33:04.687 --> 00:33:12.369
инстанстың өте үлкен екенін білдіреді.
Сіз, сондай-ақ, сипаттамаларын көре аласыз.

00:33:12.393 --> 00:33:20.918
Оның 4 процессорлық ядросы бар.
16 ГБ жедел жады. Бір қатқыл диск 150 ГБ.

00:33:20.942 --> 00:33:30.000
Network performance – секундына 10 гигабитке
дейін деректерді желі арқылы тасымалдай аламыз.

00:33:30.000 --> 00:33:40.000
Көлемді ұлғайту осы слайдтың сол жағындағы бір
немесе бірнеше сипаттамаларды сәйкесінше үлкейтеді.

00:33:42.000 --> 00:33:48.000
Келесі екі слайдта инстанс түрлерінің
ең танымал 5 тобын қарастырамыз.

00:33:48.000 --> 00:33:56.000
Әрбір топ үшін пайдалану мысалдары
және әріптік белгілеулер беріледі.

00:33:56.000 --> 00:34:02.000
Әрқайсысына тоқталайық. Ең танымал, көп 
жағдайда қолайлы - General Purpose.

00:34:02.000 --> 00:34:07.737
Әріптік белгілеулер - M, T, A.
Келесі Compute optimized,

00:34:07.761 --> 00:34:13.498
бұл - барлық басқа шарттар тең болған
жағдайда, CPU ядроларының саны

00:34:13.522 --> 00:34:19.306
көбірек болатын инстанстар.
Әріптік белгілеулер - C, мүмкін CN,

00:34:19.330 --> 00:34:25.020
мұнда N - желімен жұмыс істеу
сипаттамалары одан әрі артады.

00:34:25.020 --> 00:34:32.977
Әрі қарай, Memory optimized тобы бар,
RAM жедел жад көлемі ұлғайған.

00:34:33.001 --> 00:34:42.020
Әріптік белгілеулер - R, X және HMI болып табылады.
Осыдан кейін Storage Optimized тобы бар.

00:34:42.020 --> 00:34:49.008
Олар қатқыл дискімен жұмыс істеу бойынша
енгізу-шығару операцияларымен жұмыс

00:34:49.032 --> 00:34:56.020
істеуге бағытталған. Әріптік белгілеулердің
мысалдары I, D, H болуы мүмкін.

00:34:56.020 --> 00:35:03.325
Сондай-ақ, танымал болып келе
жатқан тағы бір топ - нейрондық

00:35:03.349 --> 00:35:10.654
желілердің модельдерін, оқу
машиналарын, видеокарта ресурстарын

00:35:10.678 --> 00:35:18.760
талап ететін барлық жүктемелерді оқыту
үшін қолданылатын Accelerated Computing.

00:35:18.784 --> 00:35:26.020
Әріптік белгілеулері P, G
және F болып табылады.

00:35:26.020 --> 00:35:34.296
Барлық басқа сипаттамалар тең
болғанда, Accelerated Computing инстанстары

00:35:34.320 --> 00:35:42.020
видеокарта үшін қосымша немесе
ұлғайтылған жад көлеміне ие болады.

00:35:44.020 --> 00:35:52.182
Қандай инстанс түрі сәйкес келетінін анықтау
үшін екі негізгі тармақты ескеру қажет. Біріншіден

00:35:52.206 --> 00:36:00.020
- қосымшаңызда қандай жүктемелер болатынын 
білу. Екіншіден - бюджетіңізді білуіңіз керек.

00:36:00.020 --> 00:36:06.020
Инстанс неғұрлым күшті болса, бұл
көбірек ақшаны қажет ететіні анық.

00:36:08.020 --> 00:36:13.508
Жаңа инстанстың түрін таңдау үшін
EC2 сервисінің негізгі парақшасындағы

00:36:13.532 --> 00:36:19.020
Instance Types қойындысына өтіп,
қандай түрлер бар екенін көруге болады.

00:36:19.020 --> 00:36:24.508
Сізге қажетті топтарды қалдыруға
немесе керісінше белгілі бір

00:36:24.532 --> 00:36:30.020
сипаттаманың мөлшерін анықтауға
болатын ыңғайлы фильтр бар.

00:36:30.020 --> 00:36:38.020
Мысалы, процессор ядроларының
санын және қалған опциялар.

00:36:38.020 --> 00:36:48.020
Баға мен сапа жағынан ең оңтайлы болғандықтан,
 соңғы буынды пайдалану ұсынылады.

00:36:48.020 --> 00:36:54.791
Егер бұрыннан бар инстанспен жұмыс
істеп жатсаңыз және инстанстың түрін жаңарту

00:36:54.815 --> 00:37:02.020
қажеттілігі бар екенін көрсеңіз, AWS
Compute Optimizer сервисіне жүгіну ұсынылады.

00:37:02.020 --> 00:37:09.124
Ол EC2 инстанстарының жүктеу тарихын пайдаланады
және инстанстардың түріне, олардың өлшеміне,

00:37:09.148 --> 00:37:16.020
санына және тіпті Auto Scaling тобының
конфигурациясына қатысты кейбір ұсыныстар береді.

00:37:18.020 --> 00:37:23.072
Талдау нәтижелеріне сүйене
отырып, инстанстарыңызға

00:37:23.096 --> 00:37:29.059
қатысты, шамадан тыс не аз
жүктелгенін, оңтайландырылғанын

00:37:29.083 --> 00:37:34.175
немесе None деп белгіленгенін
анықтауы мүмкін, бұл

00:37:34.199 --> 00:37:40.020
жүктемелер туралы ақпарат
жеткіліксіз екенін көрсетеді.

00:37:40.020 --> 00:37:49.008
Осымен EC2 инстансы түрін таңдауға
қатысты негізгі мәселелерді талқыладық.

00:37:49.032 --> 00:37:58.976
Келесі бөлімге көшейік. Дәрісіміздің бесінші
бөліміне жеттік және User Data туралы айтамыз.

00:37:59.000 --> 00:38:03.947
User Data дегеніміз не?
Оны не үшін пайдалана аламыз?

00:38:03.971 --> 00:38:10.020
User Data – инстансты іске қосу кезінде
өңделетін кейбір командалар жиынтығы.

00:38:10.020 --> 00:38:17.047
Егер инстанс LifeCycle туралы айтатын болсақ,
онда User Data-дағы барлық командалар Pending

00:38:17.071 --> 00:38:24.020
қадамында өңделеді. User Data тек бірінші
рет қосылу кезінде ғана қосылатынын ескеріңіз.

00:38:24.020 --> 00:38:28.502
Сондықтан, инстансты
тоқтатып, қайта бастағаннан кейін

00:38:28.526 --> 00:38:33.008
немесе қайта жүктегеннен
кейін User Data өңделмейді.

00:38:33.032 --> 00:38:36.872
Неліктен User Data пайдалану керек?
Әдетте бар

00:38:36.896 --> 00:38:42.020
бағдарламалық жасақтаманы
жаңартатын командалар тізімі бар.

00:38:42.020 --> 00:38:48.020
Бұл бағдарламалық жасақтама AMI құрамына әлдеқашан
енгізілген. Бірақ ол соңғы нұсқасы болмауы мүмкін.

00:38:48.020 --> 00:38:52.691
Сондықтан, іске қосу кезінде
User Data пайдаланып, сіз соңғы

00:38:52.715 --> 00:38:58.020
өзгерістерді енгізіп, бағдарламалық
жасақтама жаңартуын жүктейсіз.

00:38:58.020 --> 00:39:08.020
Сондай-ақ, User Data-ға инстансқа тікелей
қосылуды қажет ететін командалар кіреді.

00:39:08.020 --> 00:39:13.008
Мысалы, кейбір командалар инстанстың
метадеректерін пайдалануы мүмкін

00:39:13.032 --> 00:39:18.020
немесе қосымша теңшеу үшін жалпыға
ортақ немесе ішкі API болуы мүмкін.

00:39:18.020 --> 00:39:24.020
Бұл жағдайда оны AMI-ге қоса алмаймыз.
Және ол User Data-да болады.

00:39:24.020 --> 00:39:28.020
Сондай-ақ, User Data-да веб-серверді іске
қосатын командаларды іске қосады.

00:39:28.020 --> 00:39:34.020
Бұл жағдайда User Data тек бір
рет іске қосылатынын ескеріңіз.

00:39:34.020 --> 00:39:41.766
Сондықтан, веб-серверді бірінші рет іске қосумен
қатар, инстансты қосқан сайын және өшірген сайын

00:39:41.790 --> 00:39:50.020
веб-сервер немесе кез келген басқа бағдарламалық
жасақтама іске қосылуы үшін өзгертулер енгізу қажет.

00:39:50.020 --> 00:39:57.186
Салыстырмалы түрде айтатын болсақ,
белгілі бір командаларды қайда жіберу керек,

00:39:57.210 --> 00:40:04.284
AMI немесе User Data ма, өйткені олар
бір-бірімен ауыса алады, мен келесідей

00:40:04.308 --> 00:40:11.340
жауап берейін. Әрқашан тепе-теңдік 
болуы керек. AMI-ге қосуға болатын барлық

00:40:11.364 --> 00:40:18.020
командаларды сол жерге қосқан
жөн, бұл - командалардың бірінші бөлігі.

00:40:18.020 --> 00:40:24.020
Жаңарту командаларының екінші бөлігі және бұрын
айтылған барлық нюанстар User Data-ға қосылуы керек.

00:40:24.020 --> 00:40:28.020
User Data-дағы командалардың үлкен көлемі
инстанстың іске қосылуын баяулатады.

00:40:28.020 --> 00:40:32.502
Тепе-теңдік орнаған кезде, кейбір
командалар AMI жағында болады, ал

00:40:32.526 --> 00:40:37.008
кейбір командалар User Data жағында
болады, содан кейін бір жағынан

00:40:37.032 --> 00:40:41.081
сізде жаңартылған AMI болады,
екінші жағынан инстанс әлдеқайда

00:40:41.105 --> 00:40:46.020
жылдамырақ іске қосылатын болады,
себебі User Data соншалықты үлкен емес.

00:40:46.020 --> 00:40:52.020
Нәтижесінде жаңартылған бағдарламалық жасақтамасы
бар және жұмысқа толығымен дайын инстансты аласыз.

00:40:52.020 --> 00:40:57.722
Енді инстансымыз туралы ақпарат,
мысалы instance metadata деп

00:40:57.746 --> 00:41:04.020
аталатын ақпаратты қайдан және
қалай алуға болатынына тоқталайық.

00:41:04.020 --> 00:41:16.020
Әрбір инстанстың деңгейінде URL мекенжайы бар.
Бұл - 169.254.169.254/latest/meta-data/.

00:41:16.020 --> 00:41:22.020
Бұл мекенжай осы инстансқа тікелей
қатысты негізгі ақпаратты қамтиды.

00:41:22.020 --> 00:41:28.020
URL мекенжайы тек белгілі бір
инстанстың деңгейінде қолжетімді.

00:41:28.020 --> 00:41:36.020
Сондай-ақ, егер metadata орнына User Data деп
жазсаңыз, User Data-дағы командалар тізімін аласыз.

00:41:36.020 --> 00:41:44.449
Оны қосымша баптау үшін де пайдалануға 
болады. Мен AMI және User Data

00:41:44.473 --> 00:41:54.020
жағындағы командалардың балансы
туралы айтқанымда, әрине, әмбебап жауап жоқ.

00:41:54.020 --> 00:41:58.020
Сіз әрқашан нақты бизнес
мәселесіне қарауыңыз керек.

00:41:58.020 --> 00:42:04.008
Командаларыңызды AMI және UserData
деректерінде орналастыруға болатын 4 түрлі нұсқаны

00:42:04.032 --> 00:42:10.020
қарастырайық, бұл қандай артықшылықтар
береді және әрбір тәсілдің кемшіліктері қандай.

00:42:10.020 --> 00:42:16.508
Ең жоғарғы жағында - Flexibility
көрсеткіші бар екенін байқайсыз,

00:42:16.532 --> 00:42:23.020
яғни әрбір келесі опция солдан
оңға қарай көбірек икемділік береді.

00:42:23.020 --> 00:42:31.168
Төменгі жағындағы - Simplicity көрсеткішіне
қарасаңыз, бұл керісінше және оңнан солға

00:42:31.192 --> 00:42:40.020
қарай EC2 инстанстарымен жұмысты жеңілдетеміз,
бірақ сонымен бірге икемділікті жоғалтамыз.

00:42:40.020 --> 00:42:44.020
Конфигурациялардың әрқайсысын
толығырақ қарастырайық.

00:42:44.020 --> 00:42:48.869
Ең біріншісі - Fully baked AMI,
онда операциялық жүйеден

00:42:48.893 --> 00:42:53.654
бастап, оның қосымша
параметрлерін, қолданбаға ортаны

00:42:53.678 --> 00:42:58.522
дайындау және орнату үшін,
сәйкесінше, қолданбаның өзін

00:42:58.546 --> 00:43:04.020
іске қосу үшін барлық қажетті
командалар AMI жағында болады.

00:43:04.020 --> 00:43:16.020
Бұл жағдайда инстансыңыз мүмкіндігінше жылдам іске
қосылады және User data толығымен бос болуы мүмкін.

00:43:16.020 --> 00:43:24.020
Бұл AMI-ді асинхронды түрде дайындағаныңызға
байланысты. Ол алдын ала дайындалған, бәрі дайын.

00:43:24.020 --> 00:43:31.020
Іске қосылу қажет болғанда, тек серверді
қосасыз, қалғаны дайын болады.

00:43:31.020 --> 00:43:35.508
Артықшылығы - өзіңіздің
серверлеріңізді тез іске қосасыз

00:43:35.532 --> 00:43:40.020
және олар мүмкіндігінше аз
уақытта жұмысқа дайын болады.

00:43:40.020 --> 00:43:46.396
Кемшілігі - кез келген қолданба дұрыс
жұмыс істеуі үшін басқа бағдарламалық

00:43:46.420 --> 00:43:52.020
жасақтаманы қажет етуі мүмкін,
мүмкін біреуден көп болуы мүмкін.

00:43:52.020 --> 00:43:58.008
Бұл бағдарламалық жасақтаманың
әрқайсысы бір-бірінен тәуелсіз дамиды,

00:43:58.032 --> 00:44:04.020
қауіпсіздік патчтары шығарылады,
функционалдылық жаңартылады және т.б.

00:44:04.020 --> 00:44:12.020
Сондықтан, осы тәсілмен AMI-ді жиірек
дайындау немесе жаңарту ұсынылады.

00:44:12.020 --> 00:44:21.008
Келесі екі тармақ икемділікті арттырады, бірақ
AMI жағында командалардың бөлек жинағы және

00:44:21.032 --> 00:44:30.020
User Data жағында бөлек жинағы бар болғандықтан
инстанспен жұмыс істеуді біршама қиындатады.

00:44:30.020 --> 00:44:38.150
Бірінші жағдайда, қолданба іске қосылған
кезде ғана орнатылады. Бұл қажет болуы мүмкін,

00:44:38.174 --> 00:44:46.020
себебі AMI ішінде қолданбаңызды баптау
үшін сол командаларды қосу мүмкін болмайды.

00:44:46.020 --> 00:44:52.020
Бұл - белгілі бір инстансқа қатысты кейбір
деректерді пайдаланған кездегі жағдай.

00:44:52.020 --> 00:44:56.411
Қалғанының бәрі AMI ішінде.
Одан да икемді тәсіл - операциялық

00:44:56.435 --> 00:45:00.610
жүйені баптап, осы операциялық
жүйенің дұрыс жұмыс істеуі

00:45:00.634 --> 00:45:04.809
үшін барлық қажетті бағдарламалық
жасақтаманы AMI ішінде

00:45:04.833 --> 00:45:09.008
орнату және екінші бөлігін,
атап айтқанда қолданбаңыз үшін

00:45:09.032 --> 00:45:12.885
ортаны дайындау және
қолданбаңызды тікелей User Data-да

00:45:12.909 --> 00:45:17.335
орнатуды орындау. Бұл жағдайда 
оны іске қосу үшін одан да көп

00:45:17.359 --> 00:45:21.677
уақыт қажет, бірақ сонымен
бірге икемділікке ие боласыз және

00:45:21.701 --> 00:45:26.020
кез келген командаларды User
Data жағында өзгертуге болады.

00:45:26.020 --> 00:45:38.020
Сонымен қатар жаңа AMI шығарудың қажеті жоқ.
Соңғысы - JeOS, ол Just Enough OS дегенді білдіреді.

00:45:38.020 --> 00:45:44.020
Қарапайым сөзбен айтқанда, бұл
жай ғана операциялық жүйе.

00:45:44.020 --> 00:45:51.639
Қалғанының бәрі, операциялық жүйені орнату,
қауіпсіздік патчтары, бақылау мен журнал жүргізуді

00:45:51.663 --> 00:46:00.020
орнату және жоғарыдағының бәрі, қолданба үшін ортаны
дайындау және қолданбаның өзі User Data жағында.

00:46:00.020 --> 00:46:06.008
Бұл жағдайда сізге AWS ұсынған
кез келген қолайлы AMI таңдап,

00:46:06.032 --> 00:46:12.020
User Data жағында барлық
қажетті параметрлерді жасау керек.

00:46:12.020 --> 00:46:18.008
AMI-ге қатысты ештеңе істеудің қажеті жоқ.
Дайын ақпаратты пайдалану жеткілікті, бірақ сонымен

00:46:18.032 --> 00:46:24.020
бірге сізге User Data-ны басқару керек және
сізде максималды икемділік бар екенін түсіну керек.

00:46:24.020 --> 00:46:31.668
User Data-ны AMI өзгертпестен жиі өзгертуге
болады, бірақ инстансты іске қосу әлдеқайда көп

00:46:31.692 --> 00:46:40.020
уақытты қажет ететінін түсіну керексіз, себебі ол
тек іске қосу кезінде ғана толығымен бапталады.

00:46:40.020 --> 00:46:50.020
Осымен EC2 инстансында User Data-ға
қатысты барлығын қарастырдық.

00:46:50.020 --> 00:46:54.020
Ендеше бесінші бөлімді
аяқтап, әрі қарай жүреміз.

00:46:54.020 --> 00:46:59.121
Дәрісіміздің алтыншы бөліміне жеттік
және Amazon EC2 сервисімен жұмыс

00:46:59.145 --> 00:47:04.020
істеу кезінде сақтауға қатысты
барлық аспектілерді қарастырамыз.

00:47:04.020 --> 00:47:12.020
Біз білетіндей, бізде екі бөлім бар,
олар Root volume және Data volume.

00:47:12.020 --> 00:47:18.020
Root volume-де операциялық жүйемізді
және барлық қолданбаларды орнатамыз.

00:47:18.020 --> 00:47:22.681
Ал деректерді Data
volume-де сақтаймыз.

00:47:22.705 --> 00:47:28.020
Root volume Instance store немесе
Amazon EBS қолдау көрсетуі мүмкін.

00:47:28.020 --> 00:47:34.020
Егер Data volume туралы айтатын болсақ, онда
олар міндетті емес, олар болмауы да мүмкін.

00:47:34.020 --> 00:47:40.584
Егер тек ағымдағы инстансқа қол
жетімді деректер туралы айтатын

00:47:40.608 --> 00:47:48.020
болсақ, шағын және шектеулі болса
да Instance store пайдалана аламыз.

00:47:48.020 --> 00:47:54.020
Қосымша Root volume-ге тәуелсіз,
EBS қатқыл дискілерін қоса аламыз.

00:47:54.020 --> 00:48:03.063
Егер барлық EC2 инстанстары арасында
жалпыға қолжетімді сақтау керек десек, көмекке

00:48:03.087 --> 00:48:12.020
тағы екі сервис келеді. Біріншісі - Linux
based серверлерге арналған Amazon EFS.

00:48:12.020 --> 00:48:18.020
Екіншісі - Amazon FSx For
Windows File Server.

00:48:18.020 --> 00:48:26.020
Бұл тек Windows операциялық жүйесі бар
машиналарға арналған ұқсас сервис.

00:48:26.020 --> 00:48:32.020
Нұсқалардың әрқайсысын толығырақ
қарастырайық. Біріншісі - Instance store.

00:48:32.020 --> 00:48:40.020
Instance store - тұрақты емес блокты сақтау қоймасы.
Оған операциялық жүйені орнатуға болады.

00:48:40.020 --> 00:48:46.020
Оның біз бұрын қарастырған кейбір
шектеулері және артықшылықтары бар.

00:48:46.020 --> 00:48:52.020
Instance store туралы ең негізгі
ақпарат - оны тоқтату мүмкін емес.

00:48:52.020 --> 00:48:59.599
Егер сізде қосымша инстанстар
болса және оларды өшіру қажет болса,

00:48:59.623 --> 00:49:08.020
оларды өшірген кезде Instance store
сақталған барлық деректер жоғалады.

00:49:08.020 --> 00:49:15.635
Сондықтан, деректерді Instance store-да сақтауға
болады, бірақ оңай қалпына келтіруге болатын

00:49:15.659 --> 00:49:24.020
деректер немесе жоғалту қорқынышты емес
кэш деректері. Instance store пайдалана аласыз.

00:49:24.020 --> 00:49:30.020
Келесі - Amazon EBS. Бұл - Интернет 
арқылы қосылған қатқыл дискілер.

00:49:30.020 --> 00:49:38.020
Олар физикалық түрде виртуалды серверімізге 
жатпайды. Және оның бірқатар артықшылықтары бар.

00:49:38.020 --> 00:49:43.366
Best practice - EBS
пайдалану, өйткені көптеген

00:49:43.390 --> 00:49:50.367
артықшылықтары бар, бірақ
қатқыл дискілер көлемі әдетте 100

00:49:50.391 --> 00:49:57.193
гигабайттан аспайтындықтан
төлем сәл қымбатырақ, сонда да

00:49:57.217 --> 00:50:04.020
баға айырмашылығы байқалмайды
және көбірек пайда әкеледі.

00:50:06.020 --> 00:50:14.008
Amazon EBS-пен жұмыс істегендегі негізгі
артықшылықтар мынада: қатқыл дискіні инстанстан

00:50:14.032 --> 00:50:22.020
ажыратып, оны басқа инстансқа қосып, сол
қатқыл дискімен жұмыс істеуді жалғастыра аласыз.

00:50:22.020 --> 00:50:31.020
Сонымен қатар қатқыл дискілердің әртүрлі
түрлерін пайдалана аласыз - SSD немесе HDD.

00:50:31.020 --> 00:50:40.020
Тағы бір мәселе - Amazon S3 ішінде
сақталатын снапшоттарды жасауға болады.

00:50:42.020 --> 00:50:48.020
Amazon EBS сервисінің volume-дердің қандай
түрлері қолжетімді екенін қарастырайық.

00:50:48.020 --> 00:50:56.020
Екі топқа бөлінген 4 түрі бар - SSD-backed
Volumes және HDD-backed Volumes.

00:50:58.020 --> 00:51:05.131
Егер біз Root Volume туралы
айтатын болсақ, бұл операциялық

00:51:05.155 --> 00:51:12.020
жүйе орнатылатын volume,
онда тек SSD түрі болуы керек.

00:51:12.020 --> 00:51:22.008
Осылайша, Root Volume үшін екі ғана
нұсқа бар - General Purpose SSD (gp2) немесе

00:51:22.032 --> 00:51:32.020
Provisioned IOPS SSD (io1). Көп жағдайда 
General Purpose SSD жеткілікті болады.

00:51:32.020 --> 00:51:38.008
Ол өте тез жұмыс істейді. Егер сіз үшін 
жылдамдықтан басқа жоғары өткізу

00:51:38.032 --> 00:51:44.020
қабілеті де маңызды болса, онда
Provisioned IOPS SSD-ге жүгінуіңіз керек.

00:51:44.020 --> 00:51:50.020
Бұл қымбатырақ, бірақ сіз жылдамдық
пен өткізу қабілеттілігін аласыз.

00:51:50.020 --> 00:51:56.652
Егер екінші топ туралы айтатын болсақ - бұл
HDD-backed Volumes, олар Root Volume үшін

00:51:56.676 --> 00:52:04.020
жарамсыз, бірақ бұл volume-ді деректерді сақтау
үшін Data Volume ретінде пайдалануға болады.

00:52:04.020 --> 00:52:10.482
Екі түрі бар, біріншісі -
Throughput Optimized HDD (st1).

00:52:10.506 --> 00:52:18.008
Екіншісі - Cold HDD (sc1).
Біріншісі - стандартты HDD дискілері.

00:52:18.032 --> 00:52:25.247
Егер сізде жоғары өткізу
қабілеттілігін қажет ететін жүктемелер

00:52:25.271 --> 00:52:32.020
болса және деректер жиі
сұралса, st1 - сіздің таңдауыңыз.

00:52:32.020 --> 00:52:39.008
Егер қатқыл дискілерде ақша
үнемдегіңіз келсе, бірақ деректер

00:52:39.032 --> 00:52:46.020
жиі сұралмайтын болса, Cold
HDD жақсы нұсқа болып табылады.

00:52:46.020 --> 00:52:51.617
I/O Performance-ты, яғни қатқыл дискілермен
байланысты Input Output әрекеттерін,

00:52:51.641 --> 00:52:58.020
арттыруға көмектесетін тағы бір функционалдылық
бар – бұл Amazon EBS-optimized Instances.

00:52:58.020 --> 00:53:04.819
Бұл барлық EC2 инстанстары
қолдамайтын функция және оған

00:53:04.843 --> 00:53:11.643
қолдау көрсетілсе, EC2
инстансының виртуалды сервері мен

00:53:11.667 --> 00:53:18.270
оқшауланған EBS Volume
арасында арнайы желілік қосылым

00:53:18.294 --> 00:53:26.020
бапталынады. Бұл деректерді тасымалдау 
жылдамдығын арттырады.

00:53:30.020 --> 00:53:34.045
Енді EC2 инстанстарына ортақ
қолжетімділікті қамтамасыз

00:53:34.069 --> 00:53:38.020
етуге көмектесетін қалған
екі сервисті қарастырайық.

00:53:38.020 --> 00:53:48.020
Бұл жағдайда EBS көмектеспейді, өйткені бір уақытта
EBS Volume-ді тек бір инстансқа қосуға болады.

00:53:48.020 --> 00:53:54.020
Иә, қайта қосылуға болады, бірақ мұны істеу
үшін алдыңғы инстансты ажырату керек.

00:53:54.020 --> 00:54:00.020
Егер S3 туралы айтатын болсақ, ол
барлық инстанстар үшін қол жетімді.

00:54:00.020 --> 00:54:06.118
Сәйкес параметрлерді орнатуға болады,
бірақ ол мінсіз емес, өйткені ол блокты сақтау

00:54:06.142 --> 00:54:12.020
емес, объектілі сақтау және жүктеме
түріне байланысты ол сәйкес келмеуі мүмкін.

00:54:12.020 --> 00:54:19.893
Егер қатқыл диск қажет болса, барлық EC2
инстанстары үшін қолжетімді блокты сақтау

00:54:19.917 --> 00:54:28.667
қоймасы керек болса, Linux операциялық
жүйелеріне арналған Amazon EFS және Amazon FSx for

00:54:28.691 --> 00:54:37.442
Windows File Server, бұл әсіресе Windows
операциялық жүйесі бар EC2 машиналарына арналған.

00:54:37.466 --> 00:54:46.020
Әр сервисті бөлек қарастырайық. Amazon
EFS сервисі Linux-based жүктемелеріне арналған.

00:54:46.020 --> 00:54:56.020
Ол NFS протоколдары арқылы EC2 инстансына 
орнатылады. Көлемі петабайтқа дейін өсе алады.

00:54:56.020 --> 00:55:00.745
Сондай-ақ, ол автоматты
түрде жоғары және төмен бағытта

00:55:00.769 --> 00:55:06.020
масштабталады, сондықтан тек
пайдаланғаныңыз үшін төлейсіз.

00:55:06.020 --> 00:55:14.008
Мысалы, жарты ай бойы 100 гигабайт
деректерді сақтадыңыз, ал қалған уақытта

00:55:14.032 --> 00:55:22.020
10 гигабайт деректерді сақтадыңыз.
Тиісінше, төлем пайдаланғаныңызға қарай болады.

00:55:24.020 --> 00:55:31.049
Бұл слайдта EFS use cases қолдану жағдайларының
мысалдарын көре аласыз. Бұл барлық EC2

00:55:31.073 --> 00:55:38.020
инстанстары үшін бір жерде ортақ қолжетімділікті 
қажет ететін жағдайлардың барлығы.

00:55:38.020 --> 00:55:46.020
Сондай-ақ, EC2 машиналарында EFS орнатуға
арналған команданың мысалын көресіз.

00:55:46.020 --> 00:55:54.020
Amazon EFS сервисіне ұқсас сервис - Amazon
FSx for Windows File Server болып табылады.

00:55:54.020 --> 00:56:00.008
Ол Windows операциялық жүйесімен жұмыс істейтін
EC2 инстанстарымен жұмыс істеуді қолдайды.

00:56:00.032 --> 00:56:04.020
Сондай-ақ, NTFS технологиясын қолдайды. Microsoft
Windows жүйесімен жергілікті түрде біріктірілген.

00:56:06.020 --> 00:56:12.457
Сондай-ақ, Microsoft Active Directory
қызметімен біріктірілген және Windows

00:56:12.481 --> 00:56:19.703
Access Control Lists (ACLs) қолдайды.
Бұл Amazon FSx жүйесінде барлық қызметкерлер

00:56:19.727 --> 00:56:26.597
деректерін сақтай алатыныңызды білдіреді.
Олар бір жерде сақталады және Windows

00:56:26.621 --> 00:56:34.020
операциялық жүйесімен жұмыс істейтін кез
келген EC2 құрылғысынан қолжетімді болады.

00:56:34.020 --> 00:56:38.275
Сонымен қатар, қызметкерлер
басқа қызметкерлердің жеке деректерін

00:56:38.299 --> 00:56:42.020
көре алмайтындай қол жеткізу
құқықтарын ажырата аласыз.

00:56:44.020 --> 00:56:50.609
Осы слайдтан басқа мысалдарды да 
көруге болады. Идеясы мынада:

00:56:50.633 --> 00:56:57.221
бұл сервистің көмегімен сізде
жалпы деректерді жазуға және ортақ

00:56:57.245 --> 00:57:04.192
пайдалануға болатын оқшауланған
жалпыға ортақ қатқыл дискі болады.

00:57:04.216 --> 00:57:12.020
Осымен алтыншы бөлім аяқталады.
Бұл - бүгінгі дәрісіміздің соңғы бөлімі.

00:57:12.020 --> 00:57:18.132
Amazon EC2 сервисіне қатысты сақтау
мәселелерін қарастырдық. Осымен бүгінгі

00:57:18.156 --> 00:57:24.020
дәрісімізді аяқтаймыз. EC2-ге қатысты 
бірқатар мәселелерді талқыладық.

00:57:24.020 --> 00:57:34.020
Бұл Compute тақырыбына арналған екі
бөлімнің біріншісі екенін атап өткім келеді.

00:57:34.020 --> 00:57:38.502
Бүгін келесі тақырыптарды қарастырдық.
AMI туралы айттық, ол не үшін

00:57:38.526 --> 00:57:43.008
қажет, қандай артықшылықтар береді.
Әрі қарай, Instance Type деген не,

00:57:43.032 --> 00:57:47.612
қандай топтары бар, олар қалай
ерекшеленетінін және өзіңіз үшін оңтайлы

00:57:47.636 --> 00:57:52.020
Instance Type қалай таңдауға
болатынын егжей-тегжейлі қарастырдық.

00:57:52.020 --> 00:57:58.020
Келесі - User Data, ол не үшін қажет және
қандай артықшылықтар беретіні туралы айттық.

00:57:58.020 --> 00:58:08.008
Соңында Amazon EC2 сервисін пайдалану кезінде
сақтауға қатысты барлық мәселелерді қарастырдық.

00:58:08.032 --> 00:58:14.020
Осымен бүгінгі дәрісіміз аяқталды. Назарларыңызға
рахмет. Келесі белсенділіктерде кездескенше!
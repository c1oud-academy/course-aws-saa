WEBVTT

00:00:00.000 --> 00:00:05.400
Қайырлы күн, құрметті студенттер!
Сізді келесі дәрісте көргеніме қуаныштымын.

00:00:05.400 --> 00:00:08.720
Біз Networking-ке арналған
дәрістер сериясын бастаймыз.

00:00:08.720 --> 00:00:16.760
Осы аптада AWS бұлтында желіні
орнату туралы сөйлесетін боламыз.

00:00:16.760 --> 00:00:21.160
Екінші аптада дәріс болмайды, бірақ
ауқымды зертханалық жұмыстар болады.

00:00:21.160 --> 00:00:25.667
Оған алдыңғы дәрістерде
алған барлық білімдеріңіз,

00:00:25.691 --> 00:00:31.120
сондай-ақ соңғы дәрісте
қарастырылған материалдар кіреді.

00:00:31.120 --> 00:00:35.388
Үшінші аптада AWS бұлтындағы
желіге жергілікті желіні

00:00:35.412 --> 00:00:39.680
қосуға арналған сервистер
мен опцияларды қарастырамыз.

00:00:39.680 --> 00:00:45.600
Ендеше, бастайық.
Бүгінгі дәріс төрт бөлімнен тұрады.

00:00:45.600 --> 00:00:50.107
Бірінші бөлімде зертханалық
жұмыстың аясында  жасайтын

00:00:50.131 --> 00:00:55.320
бұлттағы архитектурадағы келесі
жақсартуларды қарастырамыз.

00:00:55.320 --> 00:01:01.320
Екінші бөлімде VPC сервисін және оның
мүмкіндіктерін егжей-тегжейлі қарастырамыз.

00:01:01.320 --> 00:01:07.173
Үшінші бөлімде VPC және оның құрамдас
бөліктерімен байланысты нюанстарды

00:01:07.197 --> 00:01:12.720
қарастырамыз, бұл Интернет
қосылымын баптауға мүмкіндігін береді.

00:01:12.720 --> 00:01:22.400
Ал соңғы төртінші бөлімде, VPC қауіпсіздігін
қамтамасыз етуге байланысты нюанстарды қарастырамыз.

00:01:22.400 --> 00:01:28.908
Дәрісіміздің бірінші бөлімінде
зертханалық жұмыстың бөлігі

00:01:28.932 --> 00:01:35.440
ретінде AWS бұлтындағы
инфрақұрылымды өзгертуді талқылаймыз.

00:01:35.440 --> 00:01:42.280
Бізде жаңа компоненттер VPC, Internet gateway,
NAT gateway және үш subnet бар екенін көріп тұрсыз.

00:01:42.280 --> 00:01:48.796
Мұның бәрі үйлесімді жұмыс істейді, біріншіден,
қауіпсіздікті қамтамасыз етеді, екіншіден,

00:01:48.820 --> 00:01:54.920
Интернетке қосылуды қажет ететін барлық
ресурстар бар, олар да осы қолжетімділікке ие.

00:01:54.920 --> 00:02:06.120
Бизнес-кейс туралы айтатын болсақ, кафеде
жұмыс жақсы жүріп жатыр, клиенттер көп.

00:02:06.120 --> 00:02:12.288
София мен Никхил күнделікті
жұмысынан босап, AWS бұлтындағы

00:02:12.312 --> 00:02:18.160
IT-инфрақұрылымын одан әрі
дамытуды талқылай бастады.

00:02:18.160 --> 00:02:25.149
Олар AWS-пен жұмыс істейтін кафеге тұрақты
келушілермен кеңесті, біздің жағдайда бұл

00:02:25.173 --> 00:02:32.162
Оливия, ол Solutions Architect және біздің
басты кейіпкерлеріміздің инфрақұрылымының

00:02:32.186 --> 00:02:38.841
қазіргі жағдайын тыңдағаннан кейін ол
VPC дұрыс бапталуына,яғни инфрақұрылымды

00:02:38.865 --> 00:02:45.520
қорғау үшін желі және оның барлық
компоненттеріне ерекше назар аударуды ұсынды.

00:02:45.520 --> 00:02:49.559
Ол, сондай-ақ, қашықтан
қосылу және кейбір жұмыстарды

00:02:49.583 --> 00:02:54.480
орындау мүмкіндігі үшін Bastion
Host-ті орнатуға кеңес берді.

00:02:54.480 --> 00:03:00.080
Бүгінгі дәрісімізде Bastion Host және
басқа компоненттердің не екенін білеміз.

00:03:00.080 --> 00:03:08.120
Ал енді дәрісіміздің
екінші бөліміне көшеміз.

00:03:08.120 --> 00:03:13.880
Дәрісіміздің екінші бөлімінде VPC сервисі мен оның
құрамдас бөліктерін егжей-тегжейлі қарастырамыз.

00:03:13.880 --> 00:03:20.288
VPC дегеніміз не? VPC толығымен 
Virtual Private Cloud және

00:03:20.312 --> 00:03:26.720
ол AWS бұлтындағы логикалық
оқшауланған бөлікті ұсынады.

00:03:26.720 --> 00:03:33.461
Бұл үйде, жұмыста орнататын
жергілікті желіге мүмкіндігінше жақын

00:03:33.485 --> 00:03:40.120
және AWS оны AWS бұлтында
қашықтан баптауға мүмкіндік береді.

00:03:40.120 --> 00:03:46.308
Бізде CIDR блоктарын таңдау
мүмкіндігі бар, яғни жергілікті

00:03:46.332 --> 00:03:52.520
желі үшін қандай IP мекенжайлар
ауқымын пайдаланғымыз келеді.

00:03:52.520 --> 00:03:59.360
Сондай-ақ, VPC өлшемі аясында
subnet-тердің кез келген санын жасай аламыз.

00:03:59.360 --> 00:04:08.680
VPC ішінде қажетті ережелерді баптай аламыз,
осылайша трафик әр жолмен тасымалдана алады.

00:04:08.680 --> 00:04:13.883
Сондай-ақ, subnet деңгейінде
немесе жеке ресурстар деңгейінде

00:04:13.907 --> 00:04:20.240
қауіпсіздікті қамтамасыз ету үшін
барлық қажетті құрамдас бөліктер бар.

00:04:21.240 --> 00:04:25.573
AWS-пен жұмыс істеу мен жергілікті
жұмыс арасындағы айырмашылық

00:04:25.597 --> 00:04:29.720
мынада: аппараттық құралдармен
жұмыс істеудің қажеті жоқ.

00:04:29.720 --> 00:04:35.360
Яғни, сіз кабельді желіге қоспайсыз,
оларды дайындамайсыз және т.б.

00:04:35.360 --> 00:04:44.009
Бұл жұмыстың барлығы AWS дата-центрі жағында
орындалды, барлығы пайдалануға дайын және бизнес

00:04:44.033 --> 00:04:52.400
тапсырмаңызға байланысты бұлтта жергілікті
желіні қашықтан және жылдам орнатуға болады.

00:04:54.400 --> 00:04:58.840
VPC белгілі бір AWS
аймағында жасалады.

00:04:58.840 --> 00:05:04.520
Яғни, бірнеше AWS аймақтарында
жұмыс істейтін VPC жасай алмайсыз.

00:05:04.520 --> 00:05:14.880
Cross-region әрекеттесу қажет болса, әр аймақта
бөлек VPC жасалады және VPC-лерді бір-біріне қосасыз.

00:05:14.880 --> 00:05:18.860
Мұны қалай жасау керектігін келесі
сабақтарымызда қарастырамыз.

00:05:18.860 --> 00:05:24.166
Егер availability zone туралы айтатын
болсақ, онда барлық availability

00:05:24.190 --> 00:05:28.880
zone-лар сол жасалған аймақтағы
VPC үшін қолжетімді болады.

00:05:28.880 --> 00:05:36.753
Сіз жұмыс істейтін availability zone-лардың
барлығын немесе кейбірін көрсетесіз және

00:05:36.777 --> 00:05:45.600
сәйкесінше осы VPC ішіндегі ресурстар сол
немесе басқа availability zone-да жасалуы мүмкін.

00:05:45.600 --> 00:05:51.368
Көбінесе VPC құру кезінде кем
дегенде екі availability zone көрсетіледі,

00:05:51.392 --> 00:05:57.160
бұл AWS бұлтында highly available
инфрақұрылымды құруға мүмкіндік береді.

00:05:57.160 --> 00:06:03.840
Осылайша өзіңізді availability zone-дағы
ықтимал мәселелерден алдын ала қорғайсыз.

00:06:03.840 --> 00:06:11.301
Бір availability zone-да бірдеңе
болса, инфрақұрылымыңыздың

00:06:11.325 --> 00:06:19.560
басқа бөлігі екінші availability
zone-да жұмысын жалғастырады.

00:06:19.560 --> 00:06:25.000
VPC жасаған кезде CIDR
блогын көрсету керек.

00:06:25.000 --> 00:06:32.880
CIDR блогы - VPC ішінде жасалған ресурстар үшін
қолжетімді IP мекенжайларының ауқымы болып табылады.

00:06:32.880 --> 00:06:38.920
Classless Inter-domain routing дегенді білдіреді.
CIDR блогы келесі форматпен көрсетіледі.

00:06:38.920 --> 00:06:47.960
Бастапқы IP мекенжайы көрсетіледі және CIDR
блок өлшемі қиғаш сызық арқылы көрсетіледі.

00:06:47.960 --> 00:06:51.520
CIDR блогының өлшемі
0-ден 32-ге дейін болуы мүмкін.

00:06:51.520 --> 00:07:00.520
0 - теориялық мүмкін болатын ең үлкен CIDR блогы, 
ал 32 - бір IP мекенжайынан тұратын ең кішісі.

00:07:00.520 --> 00:07:10.440
Мысалдарды қарасаңыз, бірінші жолда барлық нөлдер
және IP мекенжайы, CIDR блоктың өлшемі 0 болады.

00:07:10.440 --> 00:07:20.440
Бұл іс жүзінде бүкіл Интернет және барлық теориялық
мүмкін болатын IPv4 мекенжайларына әсер етеді.

00:07:20.440 --> 00:07:29.983
Егер біз 32 өлшемді CIDR блогы туралы айтатын
болсақ, онда бізде бір IP мекенжайы бар және бастапқы

00:07:30.007 --> 00:07:39.160
мекенжай осы CIDR блогының ішіндегі мекенжай
болып табылады. Біздің жағдайда бұл 10.22.33.44.

00:07:39.160 --> 00:07:46.640
Басқа мысалды қарастырайық. Өте кең 
таралған жағдай - 24 өлшемді CIDR блоктары.

00:07:46.640 --> 00:07:55.240
Осы CIDR блогы үшін қол жетімді
256 дәйекті IPv4 мекенжайы бар.

00:07:55.240 --> 00:08:05.288
Біздің бастапқы IP мекенжайымыз
10.22.33.0 десек, яғни IP мекенжайының соңғы

00:08:05.312 --> 00:08:15.360
құрамдас бөлігі 0 екенін көресіз,
онда ең соңғысы 255, яғни 10.22.33.255.

00:08:15.360 --> 00:08:23.160
Осылайша, бұл CIDR блогында IP мекенжайы нөлден
басталатынын ескере отырып, дәл 256 IP мекенжайы бар.

00:08:23.160 --> 00:08:31.000
Оны белгілеуді жеңілдету үшін соңғы төртінші
компоненттің орнына * жұлдызшаны белгілейміз.

00:08:31.000 --> 00:08:39.640
Осылайша, 10.22.33.* осы CIDR блогында
256 IP мекенжайы бар екенін білдіреді.

00:08:39.640 --> 00:08:42.680
Тағы бір танымал
мысалды қарастырайық.

00:08:42.680 --> 00:08:52.560
Бұл 16 өлшемді CIDR блогы және бұл жағдайда
оның құрамында 65536 IP мекенжайы бар.

00:08:52.560 --> 00:09:04.600
Бұл келесідей есептеледі.

00:09:04.600 --> 00:09:16.800
CIDR блогының өлшемін 32-ден алып тастап,
оны екінің дәрежесіне дейін көтеруіміз керек.

00:09:16.800 --> 00:09:22.000
Біздің жағдайда 2 және
дәрежеде 16 болады.

00:09:22.000 --> 00:09:28.560
Ол 65 000 мекенжайды қамтиды және
қарапайымдылық үшін келесідей белгіленген.

00:09:28.560 --> 00:09:32.388
IP мекенжайының алғашқы
екі құрамдас бөлігі, ал қалған

00:09:32.412 --> 00:09:36.820
екеуі, үшінші және төртіншісі
жұлдызша ретінде көрсетіледі.

00:09:36.820 --> 00:09:42.719
Осылайша, IP мекенжайының
үшінші және төртінші құрамдастарының

00:09:42.743 --> 00:09:49.320
әрқайсысы нөлден 255-ке дейінгі
мәнді қабылдай алатынын түсінеміз.

00:09:49.320 --> 00:10:00.440
Егер AWS туралы айтатын болсақ, онда AWS
ішіндегі ең аз CIDR блок өлшемі 28 құрайды.

00:10:00.440 --> 00:10:14.160
28 - 16 IP мекенжайы. AWS жүйелі пайдалану
үшін 5 IP мекенжайын сақтайтынын ескеріңіз.

00:10:14.160 --> 00:10:21.428
Осылайша, 28 CIDR блогында теориялық
түрде 16 IP мекенжайы бар, ал AWS-те

00:10:21.452 --> 00:10:28.720
тағы 5 мекенжайды алып тастайсыз
және 11 IP мекенжайы қолжетімді болады.

00:10:28.720 --> 00:10:34.720
AWS ішіндегі ең үлкен мүмкін
болатын CIDR блогы - 16.

00:10:34.720 --> 00:10:40.400
Оның құрамында 65536 IP мекенжайы бар.
Бұл санды есте сақтаудың қажеті жоқ.

00:10:40.400 --> 00:10:47.948
Егер AWS жүйесінде қол жетімді IP
мекенжайларының нақты саны туралы

00:10:47.972 --> 00:10:55.520
айтатын болсақ, онда 5 IP мекенжайын
алып тастайсыз, ол 65531 болады.

00:10:55.520 --> 00:11:03.680
Белгілі бір CIDR блогында қанша IP
мекенжайы бар екенін есте сақтаудың қажеті жоқ.

00:11:03.680 --> 00:11:09.480
Ол үшін формуланы білу жеткілікті. Қайталап
айтайын, бұл туралы алдыңғы дәрістерде қарастырдық.

00:11:09.480 --> 00:11:21.948
Идея мынада, бір өлшемді аласыз, мысалы, 24
болсын, келесі формуланы қолданыңыз: 32-24 = 8-ге

00:11:21.972 --> 00:11:34.440
тең және алынған мәнді екінің дәрежесіне
дейін көтересіз. Екінің 8 дәрежесі. Ол 256-ға тең.

00:11:34.440 --> 00:11:38.088
Қажет болғанда, формуланы
білсеңіз, CIDR блоктарының кез

00:11:38.112 --> 00:11:41.760
келгенінде қанша IP мекенжайы
бар екенін есептей аласыз.

00:11:41.760 --> 00:11:46.080
Мен ең танымал CIDR блоктарының
кейбірін ғана есте сақтауды ұсынамын.

00:11:46.080 --> 00:11:55.168
Бүкіл Интернет - барлық нөлдер,
бір IP мекенжайы - қиғаш сызық 32

00:11:55.192 --> 00:12:04.280
және 16 IP мекенжайынан тұратын
28 өлшемді бірнеше CIDR блоктары.

00:12:04.280 --> 00:12:14.328
Содан кейін CIDR блогының өлшемі
24, яғни ол 256 IP мекенжайынан

00:12:14.352 --> 00:12:24.240
тұрады және ең үлкені /16, ол
65 мың IP мекенжайынан тұрады.

00:12:24.240 --> 00:12:30.800
VPC - AWS бұлтының ішіндегі кейбір
оқшауланған периметр екенін есте ұстаймыз.

00:12:30.800 --> 00:12:34.947
Subnets белгілі бір VPC-дің бөлігі
болып табылады және оларды

00:12:34.971 --> 00:12:39.880
контейнерлер немесе логикалық
топтар ретінде көбірек қарастыру керек.

00:12:39.880 --> 00:12:43.040
Осы топтардың арасында
routing policy баптауға болады.

00:12:43.040 --> 00:12:49.840
Routing policy дәрісіміздің
келесі бөлімінде қарастырамыз.

00:12:49.840 --> 00:12:55.840
Subnets жасағанда, VPC сияқты,
CIDR блогын көрсету керек.

00:12:55.840 --> 00:13:01.640
Subnet-тердің CIDR блоктары бір-бірімен
қабаттаспауы керек. Бұл VPC-ге де қатысты.

00:13:01.640 --> 00:13:08.280
VPC-дің CIDR блоктары AWS
аккаунтында бір-бірімен қабаттаспау керек.

00:13:08.280 --> 00:13:12.760
VPC бірнеше availability zone үстінде
жұмыс істейді, бірақ бір аймақтың аясында.

00:13:12.760 --> 00:13:19.840
Ал subnets белгілі бір availability zone-да жұмыс
істейді және оны жасау кезінде байланыстырылады.

00:13:19.840 --> 00:13:30.480
Availability zone-да subnet-тердің қажетті санын
жасауға болады. Мұнда ешқандай шектеулер жоқ.

00:13:30.480 --> 00:13:43.720
Жалғыз шектеу - VPC өлшемдерін,
сондай-ақ subnet-тердің өлшемдерін ескеру.

00:13:43.720 --> 00:13:50.668
Оң жақтағы мысалда келесі
CIDR блогы бар VPC бар екенін

00:13:50.692 --> 00:13:57.640
көруге болады. CIDR блок 
өлшемі 22 - 1024 IP мекенжайы.

00:13:57.640 --> 00:14:03.040
Әрі қарай, 4 subnet, 2 public
subnet және 2 private subnet бар.

00:14:03.040 --> 00:14:13.101
Бір public subnet және бір private subnet
әрбір availability zone-да орналасқан

00:14:13.125 --> 00:14:23.960
және әрбір subnet-те 24 өлшемді CIDR блогы бар.
24 - ол 256 IP мекенжайынан тұрады.

00:14:23.960 --> 00:14:36.440
AWS өзі үшін 5 IP мекенжайын сақтайтынын есте
ұстаймыз, сондықтан 251 IP мекенжайы қолжетімді.

00:14:36.440 --> 00:14:41.000
VPC орнатуға қатысты негізгі
best practice қарастырайық.

00:14:41.000 --> 00:14:47.168
Ең басында VPC-ге кемінде екі немесе
одан да көп availability zone қосу және

00:14:47.192 --> 00:14:53.360
қолданбаны бірнеше availability zone-да
жұмыс істейтіндей етіп құру ұсынылады.

00:14:53.360 --> 00:14:59.360
Осылайша қосымшаңыз басынан
бастап жоғары қолжетімді болады.

00:14:59.360 --> 00:15:05.002
Егер бір availability zone-дан бастасаңыз,
болашақта қосымшаңыз бірнеше

00:15:05.026 --> 00:15:10.669
availability zone-да жұмыс істеуі
керек деп шешкен кезде, сізде дайын

00:15:10.693 --> 00:15:16.048
қосымшаның қандай да бір түрі
болады, дайын жүктемелер болады және

00:15:16.072 --> 00:15:21.840
бар архитектураны өзгерту үшін
ұзағырақ және көп еңбекті қажет етеді.

00:15:21.840 --> 00:15:37.240
Бұл best practice нәтижесі - әртүрлі availability
zone- да бірдей өлшемдегі subnet жасау ұсынылады.

00:15:37.240 --> 00:15:43.998
Бұл қисынды нәрсе, бірақ үлкенірек
өлшемдегі subnet-тер негізгі availability

00:15:44.022 --> 00:15:50.600
zone-да, ал басқаларында кішірек
subnet-тер жасалатын жағдайлар болады.

00:15:50.600 --> 00:15:54.025
Болашақта бұл проблема
болса, availability zone

00:15:54.049 --> 00:15:58.146
қатысты мәселелер туындаса,
басқа availability zone-да

00:15:58.170 --> 00:16:02.001
сізде шағын subnets болады
және жүктемеңізге қызмет

00:16:02.025 --> 00:16:06.240
көрсету үшін IP мекенжайлары
жеткіліксіз болуы мүмкін.

00:16:06.240 --> 00:16:13.888
Егер ол біркелкі болса, белгілі бір
availability zone-ға байланбайсыз және

00:16:13.912 --> 00:16:21.560
негізгі жүктемелерді кез келген
availability zone-ға тасымалдай аласыз.

00:16:21.560 --> 00:16:31.880
Әрі қарай, келесі best practice VPC-дің CIDR
блогы аясында кейбір орын қалдыру ұсынылады.

00:16:31.880 --> 00:16:39.328
Яғни, VPC CIDR блогы және subnet CIDR
блогы ең басында бапталынатын міндетті

00:16:39.352 --> 00:16:46.800
параметр болып табылатынын және
одан әрі өзгертуге болмайтынын ескеріңіз.

00:16:46.800 --> 00:16:51.741
Subnet жағдайында бұл соншалықты
маңызды емес, өйткені осы subnet-ті

00:16:51.765 --> 00:16:56.188
жойып, үлкенірек өлшемді
жаңасын жасай аласыз, бірақ VPC-де

00:16:56.212 --> 00:17:01.045
бәрі әлдеқайда күрделі, өйткені
бұл жағдайда бүкіл инфрақұрылымды

00:17:01.069 --> 00:17:05.600
кішірек VPC-ден жаңа үлкен
VPC-ге тасымалдауға тура келеді.

00:17:05.600 --> 00:17:14.000
Бұл шын мәнінде үлкен мәселе, сондықтан ең
басында VPC өлшеміне үлкен резерв алу ұсынылады.

00:17:14.000 --> 00:17:22.040
Сондай-ақ, VPC өлшемдері үшін төлем жасамаймыз,
сондықтан үлкен резервті алуға мүмкіндік бар.

00:17:22.040 --> 00:17:31.160
Қанша резерв алу ұсынылады деп сұрасаңыз,
келесі көрсеткіштерден бастауды ұсынамын.

00:17:31.160 --> 00:17:38.694
Егер жаңадан стартап бастасаңыз, жүктеменің
қандай болатыны белгісіз, алғашқы 100, немесе

00:17:38.718 --> 00:17:46.080
1000 немесе 10 мың пайдаланушы үшін
жүктемені теориялық түрде есептеп көруге болады.

00:17:46.080 --> 00:17:52.400
Әрі қарай, бұл жүктемелерді шамамен есептеу
сізге қанша ресурстар қажет екенін көрсетеді.

00:17:52.400 --> 00:18:01.644
Енді елестетіп көріңізші, жүктемелердің есептелген
анықтамалық көлемі 1000 есе артады және бұл жағдайда

00:18:01.668 --> 00:18:10.640
сіздің инфрақұрылымыңыз не болады, бұл жүктемелерге
қызмет көрсету үшін қандай өлшем болуы керек.

00:18:10.640 --> 00:18:16.960
Осыған сүйене отырып, болашақта қайта жасаудың қажеті
болмас үшін VPC оңтайлы өлшемін бағалай аласыз.

00:18:16.960 --> 00:18:21.533
Егер басқа AWS аккаунтында,
мүмкін ескі VPC-де жүктемелер

00:18:21.557 --> 00:18:26.702
болса немесе жергілікті
инфрақұрылымнан бұлтқа көшіп жатсаңыз,

00:18:26.726 --> 00:18:31.579
онда бұл жағдайда белгілі бір
жүктемелер болуы мүмкін, олар

00:18:31.603 --> 00:18:36.960
тұрақты және компания дамыған
сайын жұмыс жүктемеңіз де артады.

00:18:36.960 --> 00:18:42.320
Бұл жағдайда 1000-ға көбейтудің
қажеті жоқ, бұл өте үлкен резерв.

00:18:42.320 --> 00:18:48.498
Яғни, 100 есе үлкен жүктемелерді
елестету жеткілікті және бұл жағдайда

00:18:48.522 --> 00:18:54.520
қай жерде қандай ресурстар
масштабтауды қажет ететінін түсінесіз.

00:18:54.520 --> 00:19:01.240
Бірақ кейбір ресурстар сол күйінде
қалуы мүмкін және көп масштабталмайды.

00:19:01.240 --> 00:19:05.588
Осыған сүйене отырып, инфрақұрылымның
өлшемі қандай болатынын, қанша

00:19:05.612 --> 00:19:09.960
ресурстар және сәйкесінше IP
мекенжайлары қажет болатынын түсінесіз.

00:19:09.960 --> 00:19:15.560
Осының негізінде, VPC үшін
оңтайлы CIDR блок өлшемін таңдайсыз.

00:19:15.560 --> 00:19:26.640
Және соңғы best practice, бұл да қисынды,
бірақ компаниялар әрқашан ескермейді.

00:19:26.640 --> 00:19:30.872
Көп жағдайда компания
бұлтқа көшуді бастайды, оның бір

00:19:30.896 --> 00:19:35.528
AWS аккаунты бар, содан кейін
басқа AWS аккаунты жасалады

00:19:35.552 --> 00:19:40.316
және басқа департамент те өзінің
жеке VPC, өз инфрақұрылымы

00:19:40.340 --> 00:19:44.280
бар басқа AWS аккаунтында
жұмыс істей бастайды.

00:19:44.280 --> 00:19:49.160
Әрине, бір сәтте осының бәрін біріктіру
мүмкін бе деген сұрақ туындайды.

00:19:49.160 --> 00:19:54.865
Сонымен, егер әртүрлі аккаунттардағы
VPC CIDR блоктары қиылысса,

00:19:54.889 --> 00:20:01.320
оларды бір-бірімен байланыстыра
алмайсыз, бұл іс жүзінде мүмкін емес.

00:20:01.320 --> 00:20:07.298
Сондықтан компаниядағы IT
архитектор немесе техникалық

00:20:07.322 --> 00:20:12.621
директор әрқашан осы
мәселелерді ескеруі керек

00:20:12.645 --> 00:20:17.879
және IP мекенжай
диапазоны, яғни VPC үшін CIDR

00:20:17.903 --> 00:20:23.720
блоктары қиылысулар
болмайтындай етіп шығарылады.

00:20:23.720 --> 00:20:28.591
Бұл жағдайда, болашақта бөлек AWS
аккаунттары болса да, содан кейін бәрін

00:20:28.615 --> 00:20:33.960
біріктіруді шешсеңіз де, бұл VPC-лерді
бір-біріне қосуда қиындықтар болмайды.

00:20:33.960 --> 00:20:41.646
Егер мұндай жағдай орын алса,
онда жалғыз шешім бар, VPC-мен

00:20:41.670 --> 00:20:50.400
қабаттаспайтын CIDR блогы бар
басқа VPC-ге көшіру болып табылады.

00:20:50.400 --> 00:21:02.168
Бұл командадан көп уақыт пен күш-жігерді қажет
етуі мүмкін, сондықтан осы нюанстарды біле отырып,

00:21:02.192 --> 00:21:13.960
ең басында дұрыс бағытта қозғалуға және болашақта
ықтимал проблемаларды болдырмауға мүмкіндік бар.

00:21:13.960 --> 00:21:19.768
Енді VPC deployment туралы
толығырақ сөйлесейік, яғни қолданбаға,

00:21:19.792 --> 00:21:25.600
компания көлеміне, командаға және т.б.
байланысты VPC баптау әдісі.

00:21:25.600 --> 00:21:31.568
Ең көне және дәстүрлі тәсіл - бір
AWS аккаунтын пайдалану және барлық

00:21:31.592 --> 00:21:37.560
жүктемелерімізді, бүкіл
инфрақұрылымымызды бір VPC-де орналастыру.

00:21:37.560 --> 00:21:46.040
Бұл тәсіл ұсынылмайды, бірақ шағын командалар
мен компаниялар үшін қолайлы болуы мүмкін.

00:21:46.040 --> 00:21:54.314
Неғұрлым жетілдірілген опция - Multiple VPCs, бір
AWS аккаунтында бөлек VPC жасағанда, жүктемелеріңіз

00:21:54.338 --> 00:22:02.280
бір-бірінен оқшауланады, бірақ соған қарамастан
бұл жүктемелер бір AWS аккаунтында орналасқан.

00:22:02.280 --> 00:22:06.110
Бұл тәсіл шағын командалар үшін де
қолайлы және болашақта бірнеше рет

00:22:06.134 --> 00:22:10.360
масштабтауға мүмкіндік береді, яғни
ол команданы ешбір жолмен шектемейді.

00:22:10.360 --> 00:22:17.341
Және ең жетілдірілген және ұсынылған
опция - Multiple accounts, егер қолданбаңыздың

00:22:17.365 --> 00:22:23.920
әрбір environment-і бөлек AWS аккаунтында
бір VPC-де орналастырылған болса.

00:22:23.920 --> 00:22:28.344
Бұл негізінен кез келген көлемдегі
компания үшін өте қолайлы,

00:22:28.368 --> 00:22:32.422
бірақ әсіресе ірі ұйымдар,
бірнеше командалар, бірнеше

00:22:32.446 --> 00:22:36.687
бөлімдер бар компаниялар үшін
ұсынылады және бұл жағдайда

00:22:36.711 --> 00:22:40.800
әрбір команда бір-бірінен
тәуелсіз жұмыс істей алады.

00:22:40.800 --> 00:22:49.140
Дегенмен, олардың барлығы өзара байланысты
болады және орталықтан басқаруға болады.

00:22:49.140 --> 00:22:55.079
Қазіргі уақытта AWS аккаунттарын
басқаруға көмектесетін көптеген реттелетін

00:22:55.103 --> 00:23:00.720
шешімдер, құралдар, сонымен
қатар көптеген жергілікті сервистер бар.

00:23:00.720 --> 00:23:05.960
Ең жарқын мысал - AWS
Organizations және AWS Control Tower.

00:23:05.960 --> 00:23:09.531
Бұл - белсенді дамып келе
жатқан және бірнеше AWS

00:23:09.555 --> 00:23:14.320
аккаунттарымен жұмысымызды
айтарлықтай жеңілдететін сервистер.

00:23:14.320 --> 00:23:18.360
Әр түрлі AWS аккаунттарында не болуы
мүмкін екендігі туралы мысал келтірейік.

00:23:18.360 --> 00:23:25.048
Сізде B2C қосымшасы бар екенін елестетіп
көріңіз, оны пайдаланушылар, жеке адамдар

00:23:25.072 --> 00:23:31.760
пайдаланады және бұл жағдайда әрбір AWS
аккаунтында жеке environment болуы мүмкін.

00:23:31.760 --> 00:23:38.888
Мысалы, елестетіп көрейік, біріншіде Dev
ортасы бар, екіншісінде тестілеу ортасы бар,

00:23:38.912 --> 00:23:46.040
үшіншіде Pre-Prod және соңғысында соңғы
жүктемелерге қызмет көрсететін Prod ортасы бар.

00:23:46.040 --> 00:23:49.405
Тағы бір мысал, егер B2B
компаниясы болсаңыз, онда бұл

00:23:49.429 --> 00:23:53.240
жағдайда серіктестеріңіз басқа
компаниялар болып табылады.

00:23:53.240 --> 00:24:02.400
Бұл компаниялар үшін әрқайсысында бір орта болатын
бірнеше AWS аккаунтын жасауға және бөлуге болады.

00:24:02.400 --> 00:24:12.120
Мысалы, сізде A компаниясы, ірі серіктес бар,
әр environment үшін 3 AWS аккаунтын бөлгенсіз.

00:24:12.120 --> 00:24:21.628
Мысалы, A компаниясы үшін тест ортасы
үшін бір аккаунт бар, екінші аккаунт үшін

00:24:21.652 --> 00:24:31.160
әзірлеу ортасын жүктейміз, ал үшіншісінде
осы компания үшін Prod ортасы болады.

00:24:31.160 --> 00:24:43.680
Бұл жағдайда әзірлеу ортасының жүктемесі Production
ортасының жүктемесіне ешқандай әсер етпейді.

00:24:43.680 --> 00:24:49.794
Осылайша, жүктемелеріңізді
бір-бірінен мүмкіндігінше оқшаулайсыз

00:24:49.818 --> 00:24:55.640
және бұл әртүрлі компаниялардың
жүктемелеріне тыйым салатын

00:24:55.664 --> 00:25:01.622
немесе ұсынатын немесе қоршаған
ортаға байланысты бұлт ішінде

00:25:01.646 --> 00:25:08.500
бөлінетін кейбір нормативтік
талаптарға сәйкес пайдалы болуы мүмкін.

00:25:08.500 --> 00:25:16.120
Біз әр сервистің әртүрлі шегі бар екенін 
білеміз. Олар soft және hard болады.

00:25:16.120 --> 00:25:20.800
Soft - арттыруға болатындары,
hard - арттыруға болмайтындары.

00:25:20.800 --> 00:25:24.748
Сіз әрқашан hard шектеулер
туралы есте ұстауыңыз керек,

00:25:24.772 --> 00:25:28.720
бірақ Amazon VPC ішіндегі
шектеудің нақты мысалы бар.

00:25:28.720 --> 00:25:32.720
Бұл емтиханда жиі кездеседі,
сондықтан оны есте сақтау ұсынылады.

00:25:32.720 --> 00:25:41.983
Бұл жұмыста да көмектеседі, бірақ әрқашан
сәйкес сервисті ашып, кез келген сервистің қандай

00:25:42.007 --> 00:25:50.960
шектеулері бар екенін көре аласыз, содан
кейін жұмыс барысында шешім қабылдай аласыз.

00:25:50.960 --> 00:26:01.680
Бұл қандай шектеу? Бұл әрбір аймақ үшін бір
AWS аккаунты ішінде 5 VPC-ден көп жасай алмайсыз.

00:26:01.680 --> 00:26:08.560
Бұл шектеу soft, сондықтан сұрау
жасасаңыз, бұл шектеу ұлғайтылуы мүмкін.

00:26:08.560 --> 00:26:13.633
Жақсы, дәрісіміздің екінші
бөлімінің соңына жеттік

00:26:13.657 --> 00:26:19.456
және VPC сервисі туралы
толығырақ сөйлестік, CIDR блогы

00:26:19.480 --> 00:26:25.228
деген не екенін айттық,
VPC, subnets құрамдас бөлігін

00:26:25.252 --> 00:26:31.000
қарастырдық, енді дәрісіміздің
үшінші бөліміне көшеміз.

00:26:31.000 --> 00:26:37.768
Біз дәрісіміздің үшінші бөлімін
бастаймыз және мұнда Интернетті VPC

00:26:37.792 --> 00:26:44.560
ішіндегі ресурстарымызға қосуға
байланысты нюанстарды қарастырамыз.

00:26:44.560 --> 00:26:48.928
Сонымен, біз VPC жасаймыз,
VPC ішінде subnets жасалады

00:26:48.952 --> 00:26:53.320
және public subnet, private
subnet деген екі түрі бар.

00:26:53.320 --> 00:26:59.344
Мұнда өте маңызды мәселе бар:
subnet құру кезінде біз еш жерде

00:26:59.368 --> 00:27:06.480
құсбелгі қоймаймыз, subnet-ті public
немесе private ететін қосқыш жоқ.

00:27:06.480 --> 00:27:13.492
Біз тек subnet атауында оның public немесе
private екенін көрсетеміз, бұл public деп көрсетсек,

00:27:13.516 --> 00:27:20.080
оны шын мәнінде жалпыға ортақ ету үшін
қосымша параметрлерді жасайтынымызды білдіреді.

00:27:20.080 --> 00:27:27.078
Public subnet - бұл subnet-тегі ресурстардың
Интернетке қол жеткізуі және керісінше де дұрыс,

00:27:27.102 --> 00:27:34.100
Интернеттен public subnet-тегі ресурстарға да қол
жеткізуге болады, яғни олармен тікелей байланысасыз.

00:27:34.100 --> 00:27:43.176
Private subnet десек, онда керісінше жағдай
орын алады: private subnet-те орналасқан ресурстар

00:27:43.200 --> 00:27:52.080
Интернетке тікелей кіре алмайды және бұл
ресурстарға Интернеттен қол жеткізу мүмкін емес.

00:27:52.080 --> 00:28:02.080
Енді subnet-ті public жасауға мүмкіндік
беретін негізгі қадамдарды қарастырайық.

00:28:02.080 --> 00:28:08.040
Ол үшін Internet gateway деп аталатын
Network компонентін пайдалану керек.

00:28:08.040 --> 00:28:14.280
Internet gateway бөлек ресурс ретінде
жасалады және VPC-мен байланысады.

00:28:14.280 --> 00:28:18.240
Internet gateway құру
- ең бірінші қадам.

00:28:18.240 --> 00:28:23.872
Бұл компонент managed,
сондықтан оны жасау жеткілікті, содан

00:28:23.896 --> 00:28:29.528
кейін көлденең масштабтау,
жоғары қолжетімділік және Internet

00:28:29.552 --> 00:28:35.793
gateway функционалдығын қамтамасыз
етумен байланысты барлық қосымша

00:28:35.817 --> 00:28:41.680
жұмыс AWS иығына түседі.
Ол үшін енді уайымдаудың қажеті жоқ.

00:28:41.680 --> 00:28:51.240
Subnet-ті жалпыға ортақ етуге мүмкіндік беретін
екінші қадам routing rules баптау болып табылады.

00:28:51.240 --> 00:28:56.395
Routing rules Route tables 
аясында жасалады. Route table

00:28:56.419 --> 00:29:01.480
- трафиктің VPC ішінде қалай
қозғалатынын сипаттайды.

00:29:01.480 --> 00:29:07.500
Ең басында VPC жасаған кезде
стандартты main route table жасалады.

00:29:07.500 --> 00:29:11.200
Custom route table жасап,
оны өзгерту ұсынылады.

00:29:11.200 --> 00:29:15.480
Сонымен қатар, әрбір subnet үшін
бөлек route table жасау ұсынылады.

00:29:15.480 --> 00:29:26.680
Бұл subnet үшін жеткілікті болатын ережелер
мен рұқсаттарды ғана шығаруға мүмкіндік береді.

00:29:26.680 --> 00:29:38.720
Сонымен, екінші қадамда custom route table жасаймыз
және осы custom route table-де routing rule жазамыз.

00:29:38.720 --> 00:29:45.340
Бұл routing rule-де destination ретінде
интернетті, яғни межелі орын ретінде көрсетеміз.

00:29:45.340 --> 00:29:49.480
Біздің жағдайда бұл барлық нөлдерден кейін
қиғаш сызық нөлден тұратын IP мекенжайы болады.

00:29:49.480 --> 00:29:57.160
Яғни, бұл Интернеттің CIDR блогының белгісі.
Ал target ретінде біз Internet gateway көрсетеміз.

00:29:57.160 --> 00:30:05.796
Осылайша, public subnet-те орналасқан
барлық ресурстар желі арқылы Интернеттен

00:30:05.820 --> 00:30:14.006
ресурсқа қол жеткізген кезде, біздің
route table-ге қарап, бұл трафиктің

00:30:14.030 --> 00:30:23.003
Internet gateway-ге жіберілгенін көреді,
осылайша Internet gateway осы трафикті

00:30:23.027 --> 00:30:32.000
алып, содан кейін оны Интернетке жібереді
және жауапты осы ресурсқа қайтарады.

00:30:32.000 --> 00:30:37.120
Қарастыратын келесі
компонент - Elastic IP address.

00:30:37.120 --> 00:30:45.480
Elastic IP address - VPC ресурстарымен
байланыстырылатын тұрақты жалпы IPv4 мекенжайы.

00:30:45.480 --> 00:30:51.475
Келесі жағдайды елестетіп көрейік, сізде
қосымша бар, public subnet-тe Web tier бар,

00:30:51.499 --> 00:30:58.000
оны жеке IP мекенжайы бар EC2 инстансы
өңдейді және оған Elastic IP мекенжайы тіркелген.

00:30:58.000 --> 00:31:05.960
Бұл статикалық IP мекенжайы арқылы
пайдаланушы қосымшаңызға кіреді.

00:31:05.960 --> 00:31:10.580
Әрі қарай, Web tier-де ақаулар
бар деп елестетіп көріңіз

00:31:10.604 --> 00:31:14.972
және шұғыл түрде басқа EC2
инстансын жасадыңыз және

00:31:14.996 --> 00:31:19.279
қолданба конфигурациясын
өзгертпеу, кодын өзгертпеу,

00:31:19.303 --> 00:31:24.008
пайдаланушыдан басқа IP
мекенжайына кіруді сұрамау үшін

00:31:24.032 --> 00:31:28.818
осы IP мекенжайын басқа EC2
инстансына тіркей аласыз және

00:31:28.842 --> 00:31:33.629
барлығы үшін, қолданба үшін
және сіздің пайдаланушыларыңыз

00:31:33.653 --> 00:31:37.471
үшін олар EC2 инстансының
сұрауларын өңдеудегі

00:31:37.495 --> 00:31:42.080
өзгерісті байқамай-ақ сәтті
жұмысын жалғастыра алады.

00:31:42.080 --> 00:31:52.240
Келесі Network
компоненті - NAT Gateway.

00:31:52.240 --> 00:31:58.496
Ол private subnet-тегі ресурстарға Интернеттен
тікелей қол жеткізу мүмкін болмайтындай,

00:31:58.520 --> 00:32:05.360
private subnet-тегі ресурстарға Интернет қатынасын
ұсынғымыз келген жағдайларда қолданылады.

00:32:05.360 --> 00:32:11.200
Бұл мүмкін және оны жүзеге асыру
үшін бірнеше қадамдарды орындау қажет.

00:32:11.200 --> 00:32:16.760
Ең бірінші істеу керек қадам - public
subnet-те Интернетке кіруді баптау.

00:32:16.760 --> 00:32:20.155
Мұны істеу үшін бірінші
қадам subnet құрамыз, содан

00:32:20.179 --> 00:32:24.120
кейін Internet Gateway жасап,
VPC-ге байланыстыру керек.

00:32:24.120 --> 00:32:30.394
Осыдан кейін public subnet үшін
жеке реттелетін routing table жасалады

00:32:30.418 --> 00:32:37.148
және осы subnet-пен байланыстырылған
route table-де routing rule жасалады

00:32:37.172 --> 00:32:43.766
және ережеде біз destination ретінде
Интернет, ал target ретінде Internet

00:32:43.790 --> 00:32:50.200
Gateway көрсетеміз. Яғни, Интернетке 
Internet Gateway арқылы кіреміз.

00:32:50.200 --> 00:32:55.434
Осы қадамдардың барлығын орындағаннан
кейін public subnet-тегі ресурстар үшін

00:32:55.458 --> 00:33:01.520
Интернетке қол жеткізе аламыз және ол тек
атымен ғана емес, шын мәнінде public болады.

00:33:01.520 --> 00:33:12.400
Енді екінші бөлік туралы айтатын болсақ, бұл
NAT Gateway құру, ол public subnet-те жасалады.

00:33:12.400 --> 00:33:18.473
Әрі қарай, private subnet-тен реттелетін
route table құрдық, онда routing rule

00:33:18.497 --> 00:33:25.360
жасалады, ол destination ретінде Интернетті,
ал target ретінде NAT Gateway көрсетеді.

00:33:25.360 --> 00:33:30.053
NAT Gateway private subnet-тегі
инстанстардан сұрауды алған

00:33:30.077 --> 00:33:34.688
бойда, ол өзінің subnet үшін
route table-ге қарайды, бұл

00:33:34.712 --> 00:33:39.364
сұрау одан әрі Internet
Gateway-ге жіберілу керек екенін

00:33:39.388 --> 00:33:44.040
көреді және сәйкесінше бұл
трафикті әрі қарай бағыттайды.

00:33:44.040 --> 00:33:49.623
Internet Gateway арқылы
Интернетке қол жеткіземіз, жауап

00:33:49.647 --> 00:33:55.128
Internet Gateway-ге оралады,
Internet Gateway оны NAT

00:33:55.152 --> 00:34:00.983
Gateway-ге жібереді, және
соңғы қадам NAT Gateway private

00:34:01.007 --> 00:34:07.360
subnet-те орналасқан инстансының
сұрауына жауапты қайтарады.

00:34:07.360 --> 00:34:12.598
Кішкене квиз өткізейік. Мұнда 
жүктемелердің төрт түрі үшін олар private

00:34:12.622 --> 00:34:17.560
немесе public subnet-те орналасуы
керек екенін анықтауымыз керек.

00:34:17.560 --> 00:34:23.760
Сіз бұл видеоны тоқтатып, біраз уақыт ойланып,
дайын болғаннан кейін жалғастыра аласыз.

00:34:23.760 --> 00:34:33.520
Жақсы, бәріне дұрыс жауап бердіңіз
деп ойлаймын, тексеріп көрейік.

00:34:33.520 --> 00:34:38.920
Data store instances ретінде
private subnet пайдалану ұсынылады.

00:34:38.920 --> 00:34:43.451
Бұл дұрыс, өйткені біздің Data store
instances-тарымызға Интернеттен

00:34:43.475 --> 00:34:48.480
қол жеткізудің қажеті жоқ, керісінше
олар барынша қорғалған болуы керек.

00:34:48.480 --> 00:34:52.640
Бұл жағдайда бұл инстанстарды
private subnet-те орналастырамыз.

00:34:52.640 --> 00:34:59.543
Әрі қарай, Batch-processing instances та backend
өңдеуге қатысты және бұл жағдайда Интернеттен

00:34:59.567 --> 00:35:05.800
бұл инстанстарға қол жеткізудің қажеті жоқ.
Бұл жағдайда private subnet көрсетеміз.

00:35:05.800 --> 00:35:10.708
Үшінші жағдайда жауаптың аты
бойынша Backend instances көре

00:35:10.732 --> 00:35:15.640
аласыз, олар backend-те және
private subnet-те орналасқан.

00:35:15.640 --> 00:35:20.664
Жалғыз жағдай - Web application
instances, олар архитектураға

00:35:20.688 --> 00:35:26.720
байланысты public subnet-те немесе
private subnet-те орналасуы мүмкін.

00:35:26.720 --> 00:35:30.992
Мен назарларыңызды жүктемелердің
көптеген түрлері үшін және

00:35:31.016 --> 00:35:35.288
ең күрделі жүктемелер үшін
private subnets қолданатынымызға

00:35:35.312 --> 00:35:39.184
аударғым келеді, бірақ
тек Web tier үшін немесе тіпті

00:35:39.208 --> 00:35:43.080
бұл жағдайда public subnets
пайдаланбауымыз мүмкін.

00:35:43.080 --> 00:35:51.101
Осыған байланысты subnets жасау кезінде
оның public немесе private болатынын алдын

00:35:51.125 --> 00:35:59.840
ала біле отырып, кішірек public subnets пен
үлкенірек private subnets жасау ұсынылады.

00:35:59.840 --> 00:36:15.240
Осылайша subnet-тердің әрқайсысы үшін қол
жетімді IP мекенжайларының ауқымын тауыспайсыз.

00:36:15.240 --> 00:36:22.840
Келесі негізгі VPC
компоненті - Bastion hosts.

00:36:22.840 --> 00:36:31.034
Bastion hosts кеңседегі немесе үйдегі
компьютердегі пайдаланушыларға бұлтта

00:36:31.058 --> 00:36:38.920
орналасқан инфрақұрылымға қосылуға
мүмкіндік беру үшін пайдаланылады.

00:36:38.920 --> 00:36:46.507
Бұл жағдайда public subnet-те Bastion
host құрылады, бұл 22 порт арқылы IP

00:36:46.531 --> 00:36:55.680
мекенжайларының белгілі бір диапазонына
SSH трафигі арқылы кіруге болатын EC2 инстанс.

00:36:55.680 --> 00:37:05.528
Егер жергілікті кеңседен қосылсаңыз, кеңсеңізде
Интернетке кіретін белгілі бір мекенжайлар пулы болуы

00:37:05.552 --> 00:37:15.400
мүмкін және 22 портқа қол жеткізе алатын осы Bastion
host үшін осы IP мекенжайларын көрсете аласыз.

00:37:15.400 --> 00:37:19.508
Барлық басқа порттар жабық 
болуы керек. Бұл жағдайда

00:37:19.532 --> 00:37:24.528
кеңседен осы bastion host-қа
қосылуға болады, содан кейін осы

00:37:24.552 --> 00:37:29.104
bastion host-тан public
subnet-те немесе private subnet-те

00:37:29.128 --> 00:37:33.680
болсын инстанстардың кез
келгеніне қол жеткізуге болады.

00:37:33.680 --> 00:37:38.130
Бұл жерде айта кететін
жайт, bastion host Интернеттен

00:37:38.154 --> 00:37:42.261
кіру нүктесі болып
табылады, ол сырттан келетін

00:37:42.285 --> 00:37:46.421
шабуылдарға ең сезімтал,
сондықтан қауіпсіздікті

00:37:46.445 --> 00:37:51.640
қамтамасыз ету үшін барлық
мүмкін әдістерді қолдану қажет.

00:37:51.640 --> 00:38:01.680
Біз security топтарын, network ACL және бар
барлық басқа құрамдастарды баптауымыз керек.

00:38:01.680 --> 00:38:06.400
Бүгінгі дәрісіміздің соңғы бөлімінде
қауіпсіздік туралы айтатын боламыз.

00:38:06.400 --> 00:38:16.640
Бұл бөлімде security топтары және network ACL
сияқты VPC компоненттеріне егжей-тегжейлі тоқталамыз.

00:38:16.640 --> 00:38:24.880
Бұл - VPC ішінде көп деңгейлі қауіпсіздікті
орнатуға көмектесетін екі негізгі компонент.

00:38:24.880 --> 00:38:29.930
Біз Security groups-тан бастаймыз.
Security groups - инстанс деңгейінде

00:38:29.954 --> 00:38:36.160
байланыстырылған firewall, яғни оны қай
инстансқа байланыстыру керектігін көрсетесіз.

00:38:36.160 --> 00:38:43.360
Бір инстансты бір уақытта тек бір security тобына 
тағайындауға болатындығын түсіну маңызды.

00:38:43.360 --> 00:38:48.480
Бір security тобын әртүрлі
инстанстар пайдалана алады.

00:38:48.480 --> 00:38:54.280
Security топтары stateful firewall болып
табылады, бұл күйдің есте қалатынын білдіреді.

00:38:54.280 --> 00:39:02.258
Басқаша айтқанда, inbound трафикке
рұқсат етілген трафик, қандай outbound

00:39:02.282 --> 00:39:11.480
трафикке рұқсат етілгеніне қарамастан,
бәрібір жауап жібереді. Керісінше де дұрыс.

00:39:11.480 --> 00:39:15.724
Егер бізде outbound traffic
рұқсат болса, онда қандай inbound

00:39:15.748 --> 00:39:20.560
rules көрсетілгеніне қарамастан,
біз бәрібір қайта жауабын аламыз.

00:39:20.560 --> 00:39:33.520
Егер трафик инстанс жағынан
басталса, онда басқаша болады.

00:39:33.520 --> 00:39:38.953
Егер outbound traffic-ке тыйым
салынса, бірақ inbound traffic рұқсат етілсе,

00:39:38.977 --> 00:39:44.120
онда бұл инстансқа тек сырттан қол
жеткізуге және жауап алуға болады.

00:39:44.120 --> 00:39:49.463
Бірақ инстанстың өзі рұқсат
етілген outbound трафигі

00:39:49.487 --> 00:39:55.880
болмағандықтан, ол сырттан
ешбір жерге қол жеткізе алмайды.

00:39:55.880 --> 00:40:02.408
Кастомдық security топтарын жасауға болады, subnets
жасау кезінде әдепкі security топтары бар және

00:40:02.432 --> 00:40:08.960
әдепкі бойынша барлық inbound трафикке тыйым салынады
және барлық outbound трафикке рұқсат етіледі.

00:40:08.960 --> 00:40:17.418
Шектеулі outbound трафикті қамтамасыз
ету қажет болса, әдепкі security

00:40:17.442 --> 00:40:25.532
тобындағы outbound rule-ды жоюға
болады немесе кастомдық security

00:40:25.556 --> 00:40:33.332
тобын жасау және арнайы осы
EC2 инстанстары үшін сәйкес келетін

00:40:33.356 --> 00:40:41.760
inbound және outbound rules бар
security топтарын жасау ұсынылады.

00:40:41.760 --> 00:40:47.068
Бір мысалды қарастырайық. Бізде
кастомдық security тобы бар, ол public subnet-тегі

00:40:47.092 --> 00:40:52.400
EC2 инстансына байланысты, бұл инстанстың
жеке және жалпыға ортақ IP мекенжайы бар.

00:40:52.400 --> 00:41:00.844
Subnet-те Internet gateway-ге дейін орнатылған
routing rule болғандықтан және Internet gateway

00:41:00.868 --> 00:41:09.040
біздің VPC-ге де байланысты болғандықтан,
бұл EC2 инстансы Интернетке қол жеткізе алады.

00:41:09.040 --> 00:41:15.280
Енді кастомдық security
тобымызда не жазылғанын көрейік.

00:41:15.280 --> 00:41:19.255
Көріп отырғаныңыздай,
outbound трафигі жоқ, бұл

00:41:19.279 --> 00:41:24.121
инстанстың Интернетке қол
жеткізе алмайтынын білдіреді,

00:41:24.145 --> 00:41:28.678
бірақ inbound rule тіркелген,
бұл 80 портындағы HTTP

00:41:28.702 --> 00:41:33.680
трафигі және кіру бүкіл
Интернеттен қамтамасыз етіледі.

00:41:33.680 --> 00:41:40.880
Осылайша, бұл инстансқа оның жалпыға ортақ
IP мекенжайы арқылы Интернеттен кіруге болады.

00:41:40.880 --> 00:41:48.231
Security тобы statefull firewall болғандықтан,
жауап сәтті қайтарылады, бірақ outbound

00:41:48.255 --> 00:41:55.520
трафик тіркелмегендіктен, EC2 инстансы
Интернетке сұрауды өзі бастауы мүмкін емес.

00:41:55.520 --> 00:42:08.800
Трафикке рұқсат етілген немесе жоқ екенін түсіну
үшін security тобындағы барлық rules тексеріледі.

00:42:08.800 --> 00:42:15.382
Мысалы, егер қандай да бір inbound трафик
келсе, онда inbound трафигіндегі барлық

00:42:15.406 --> 00:42:22.400
ережелер тексеріледі, рұқсат етілсе, трафик өтеді.
Бұл outbound трафикке де қатысты.

00:42:22.400 --> 00:42:29.560
Chaining security groups сияқты ұғым
бар, оның идеясы EC2 инстансының әрбір

00:42:29.584 --> 00:42:37.520
түрі үшін оның қай деңгейге жататынына
байланысты бөлек security топтарын жасау.

00:42:37.520 --> 00:42:45.214
Мысалы, inbound rule қамтитын Web
tier security бар, ол 80 және 443 порттары

00:42:45.238 --> 00:42:53.960
арқылы Интернеттен кіруге мүмкіндік береді,
бұл сәйкесінше HTTP және HTTPS трафигі.

00:42:53.960 --> 00:43:00.788
Әрі қарай, ол корпоративтік
ортаңыздағы IP мекенжайлар

00:43:00.812 --> 00:43:07.640
ауқымына 22 порт арқылы SSH
қатынасына мүмкіндік береді.

00:43:07.640 --> 00:43:15.520
Осылайша, жергілікті кеңседен Web tier-дегі
инстанстарға қол жеткізуге және қосылуға болады.

00:43:15.520 --> 00:43:21.920
Әрі қарай, Application деңгейінің
инстанстарға арналған жеке security тобы бар.

00:43:21.920 --> 00:43:27.608
Бұл жағдайда SSH арқылы
кіру үшін inbound rule көрсетесіз,

00:43:27.632 --> 00:43:33.320
бұл корпоративтік IP
мекенжайларының ауқымындағы 22-порт.

00:43:33.320 --> 00:43:38.508
Сонымен қатар, сіз 8000
портында HTTP трафигі үшін inbound

00:43:38.532 --> 00:43:43.720
rule тіркейсіз, ал Source
біздің Web tier болып табылады.

00:43:43.720 --> 00:43:50.600
Осының негізінде тек Web
tier-ден шығатын трафик Application

00:43:50.624 --> 00:43:56.920
tier EC2 инстанстарына қол
жеткізе алатынын көреміз.

00:43:56.920 --> 00:44:02.360
Дәл осындай логиканы пайдаланып,
Database tier үшін security тобы жасалады.

00:44:02.360 --> 00:44:11.368
Біз SSH арқылы қосылу үшін inbound rule жасаймыз,
сонымен қатар 3306 портында қосымша inbound rule

00:44:11.392 --> 00:44:20.400
жасаймыз, бұл MySQL дерекқорының стандартты порты
және source ретінде Application tier көрсетіңіз.

00:44:20.400 --> 00:44:26.109
Мұнда сәйкес security тобының Web tier-дегі
EC2 инстанстары Database tier деңгейіне

00:44:26.133 --> 00:44:32.400
тікелей қол жеткізе алмайтынын, бірақ тек
Application tier қол жеткізе алатынын көресіз.

00:44:32.400 --> 00:44:37.049
Тиісінше, Application tier
бар барлық EC2 инстанстары

00:44:37.073 --> 00:44:42.440
белгілі бір порттағы Database
деңгейіне қол жеткізе алады.

00:44:42.440 --> 00:44:49.988
VPC ішінде қауіпсіздіктің
қосымша деңгейін қамтамасыз етуге

00:44:50.012 --> 00:44:57.560
көмектесетін келесі құрамдас
Network ACL болып табылады.

00:44:57.560 --> 00:45:03.840
Network ACLs — Network Access Control Lists дегенді
білдіреді. Ол subnet деңгейінде жұмыс істейді.

00:45:03.840 --> 00:45:08.024
Әрбір subnet онымен байланыстырылған
тек бір Network ACL болуы

00:45:08.048 --> 00:45:12.920
мүмкін, ал бір Network ACL бірнеше
subnet-термен пайдаланылуы мүмкін.

00:45:12.920 --> 00:45:21.709
Егер VPC және subnet орнату кезінде Network
ACL параметрлерін көрсетпесеңіз, онда барлық

00:45:21.733 --> 00:45:30.420
кіріс және шығыс трафикке мүмкіндік
беретін әдепкі Network ACL subnet-ке бекітіледі.

00:45:30.420 --> 00:45:36.158
Айта кету керек, Network ACL
stateless firewall болып табылады,

00:45:36.182 --> 00:45:41.920
сондықтан ол күйді, яғни сұрау
қайдан келгенін есте сақтамайды.

00:45:41.920 --> 00:45:50.101
Бұл сіздің жауабыңыз алушыға
жетуі үшін outbound rules-те

00:45:50.125 --> 00:45:58.160
кіріс трафикке рұқсат
етілуі керек дегенді білдіреді.

00:45:58.160 --> 00:46:04.279
Керісінше, сіз сырттан
сұраған кезде, үшінші тарап

00:46:04.303 --> 00:46:11.923
ресурстарына қол жеткізу үшін
outbound трафикті ашқаныңыздан

00:46:11.947 --> 00:46:18.885
басқа, сол порт пен протоколда
inbound трафикті ашуыңыз

00:46:18.909 --> 00:46:25.460
керек және тек осы жағдайда
ғана жауап ала аласыз.

00:46:25.460 --> 00:46:31.978
Қажет болса, Custom Network ACLs
жасай аласыз, бұл жағдайда әдепкі бойынша,

00:46:32.002 --> 00:46:38.520
Custom Network ACL үшін барлық кіріс
және шығыс трафикке тыйым салынады.

00:46:38.520 --> 00:46:46.760
Қажет болса, сол немесе басқа портқа
рұқсат беретін ережелерді қосуға болады.

00:46:46.760 --> 00:46:53.040
Мұнда сіз жүзінші басымдығы
бар inbound трафик белгілі бір CIDR

00:46:53.064 --> 00:47:00.460
блогынан мүмкіндік беретін SSH
қосылымымен көрсетілген мысалды көресіз.

00:47:00.460 --> 00:47:06.920
Біздің жағдайда 32 өлшемді CIDR блогын көреміз,
бұл белгілі бір IP мекенжайы көрсетілгенін көрсетеді.

00:47:06.920 --> 00:47:14.120
Әрі қарай, соңында басымдық жұлдызшасын
көреміз, бұл ең соңында өңделетін rule.

00:47:14.120 --> 00:47:20.768
Security топтары барлық ережелерді тексеретінін,
егер ол inbound трафик болса, онда барлық inbound

00:47:20.792 --> 00:47:27.440
rules тексерілетінін, outbound трафик жағдайында
барлық outbound rules тексерілетінін бұрын айттық.

00:47:27.440 --> 00:47:33.092
Network ACL туралы айтатын
болсақ, ол барлық сәйкес

00:47:33.116 --> 00:47:39.788
ережелерді басымдылық ретімен
өткізеді және рұқсат беретін

00:47:39.812 --> 00:47:45.455
немесе жоққа шығаратын
ережелерді көрген кезде, ол

00:47:45.479 --> 00:47:52.160
онымен жалғастырады және
қалған ережелерді қарастырмайды.

00:47:52.160 --> 00:48:02.880
VPC ішіндегі бірнеше компоненттер арқылы 
өтетін әдеттегі трафикті қарастырайық.

00:48:02.880 --> 00:48:06.908
Біздің пайдаланушыларымыз
бар деп елестетіп көрейік, олар

00:48:06.932 --> 00:48:10.960
сәйкес IP мекенжайына немесе
домендік атқа сұраныс жасайды.

00:48:10.960 --> 00:48:17.640
Бұл сұрау Internet gateway-ке келеді, содан кейін
Internet gateway трафикті route table-ге жібереді.

00:48:17.640 --> 00:48:22.920
Route table бұл трафикке рұқсат бере
алатынымызды немесе болмайтынымызды анықтайды.

00:48:22.920 --> 00:48:32.000
Әрі қарай, бәрі жақсы болса, біз жалғастырамыз,
subnet-ке өтер алдында, Network ACL-ге барамыз.

00:48:32.000 --> 00:48:35.588
Барлық inbound rules
тексеріледі, егер бәрі жақсы болса,

00:48:35.612 --> 00:48:39.200
онда трафикке рұқсат етіледі
және біз subnet-ке жетеміз.

00:48:39.200 --> 00:48:45.508
Subnet ішінде бізде EC2 инстанстары бар.
EC2 инстансына дейін security топтары

00:48:45.532 --> 00:48:51.840
бар, сондықтан алдымен subnet-ке кірген
бойда сәйкес security тобын тексереміз.

00:48:51.840 --> 00:49:01.360
Inbound трафикке рұқсат етілсе, трафик өтеді
және біздің сұрауымыз EC2 инстансына жетеді.

00:49:01.360 --> 00:49:08.680
EC2 инстансы деңгейінде бұл сұрау өңделеді
және ол жауап бергенде келесі жағдай болады.

00:49:08.680 --> 00:49:16.640
Бұл жағдайда ол security тобына да жетеді. Security
тобының stateful firewall екенін есте ұстаймыз.

00:49:16.640 --> 00:49:23.480
Бұл дегеніміз, сұрау сырттан болғандықтан, 
outbound rules тексерілмейді.

00:49:23.480 --> 00:49:30.240
Егер сұрау бастапқыда EC2 инстансынан
келсе, outbound rules тексерілген болар еді.

00:49:30.240 --> 00:49:37.240
Ал inbound rules, тиісінше, өткізілмейді.
Бұл жағдайда outbound rules тексерілмейді.

00:49:37.240 --> 00:49:42.480
Содан кейін біз subnet деңгейіне жетеміз.
Subnet-тен біз Network ACL-ге жетеміз.

00:49:42.480 --> 00:49:47.400
Network ACL жағында outbound rules міндетті
түрде тексеріледі, себебі бұл stateless firewall.

00:49:47.400 --> 00:49:55.199
Егер бәрі жақсы болса, біз route table-ге
жетеміз, содан кейін route table трафикті

00:49:55.223 --> 00:50:02.640
Internet gateway арқылы бастапқы сұрауды
жіберген пайдаланушыларға жібереді.

00:50:02.640 --> 00:50:06.560
Бізде қауіпсіздіктің кем дегенде
екі деңгейі бар екенін көруге болады.

00:50:06.560 --> 00:50:13.480
Оның үстіне бізде бұл трафикке рұқсат етілетінін
немесе болмайтынын анықтайтын route table бар.

00:50:13.480 --> 00:50:17.928
Яғни, біздің бір VPC
ішіндегі қауіпсіздіктің бірнеше

00:50:17.952 --> 00:50:22.400
деңгейі, бұл best practice
және пайдалануға ұсынылады.

00:50:22.400 --> 00:50:34.680
Бұл слайдта public subnet-ті
құру туралы шағын қайталау бар.

00:50:34.680 --> 00:50:42.120
Бізге ең бірінші істеу керек нәрсе - Internet
gateway жасау және оны VPC-ге байланыстыру.

00:50:42.120 --> 00:50:48.560
Содан кейін route table бапталынады. Біз 
destination ретінде Интернетті көрсетуіміз керек.

00:50:48.560 --> 00:50:52.548
Интернеттің белгіленуі - барлық
нөлдер нөлдік қиғаш сызықтары бар

00:50:52.572 --> 00:50:56.560
IP мекенжайы және target
ретінде Internet gateway көрсетілген.

00:50:56.560 --> 00:51:00.607
Әрі қарай, EC2 инстансында
жалпыға ортақ IP мекенжайы немесе

00:51:00.631 --> 00:51:05.160
өзгермейтін elastic IP мекенжайы
бар екеніне назар аудару керек.

00:51:05.160 --> 00:51:09.368
EC2 инстансы беретін жалпы IP
мекенжайы динамикалық болып

00:51:09.392 --> 00:51:13.600
табылады және инстансты
қайта жасағанда өзгеруі мүмкін.

00:51:13.600 --> 00:51:21.428
Сондай-ақ, егер біз инстансты тоқтатып, содан
кейін оны қайта іске қоссақ, жалпыға ортақ IP

00:51:21.452 --> 00:51:29.280
мекенжайы да өзгеруі мүмкін және іске қосу
кезінде қол жетімді жалпы IP мекенжайы шығарылады.

00:51:29.280 --> 00:51:34.800
Бірақ инстансты қайта іске қосқанда жалпыға
ортақ IP мекенжайы сақталатынын есте ұстаған жөн.

00:51:34.800 --> 00:51:43.388
Және соңғы қадам - EC2 инстансы деңгейінде
security топтары осы трафикке, ал subnet-те

00:51:43.412 --> 00:51:52.000
Network ACL деңгейінде inbound және
outbound трафикке рұқсат беретініне көз жеткізу.

00:51:52.000 --> 00:51:58.360
Жақсы, осымен бүгінгі дәрісіміздің
төртінші бөлімі аяқталды.

00:51:58.360 --> 00:52:05.520
Бұл соңғы бөлім, осымен
бүгінгі дәрісті де аяқтаймыз.

00:52:05.520 --> 00:52:13.840
Біз VPC сервисін және осы VPC ішінде жасауға
болатын барлық құрамдастарды қарастырдық.

00:52:13.840 --> 00:52:24.507
Әрі қарай, Security тобының құрамдастарымен, Network
ACL және барлық best practice-терге сәйкес келетін,

00:52:24.531 --> 00:52:34.680
бұлтта қауіпсіз жергілікті желіні құруға көмектесетін
басқа да негізгі компоненттермен таныстық.

00:52:34.680 --> 00:52:43.959
Бұл слайдта қосымша дереккөздерді
көресіз, бұл кілт сөздерді іздеу жүйесіне

00:52:43.983 --> 00:52:52.760
енгізу жеткілікті және бірінші
сілтемеде қажетті материалды көресіз.

00:52:52.760 --> 00:52:58.720
Осымен бүгінгі дәрісіміз аяқталды. Назарларыңызға
рахмет. Келесі белсенділіктерде кездескенше.
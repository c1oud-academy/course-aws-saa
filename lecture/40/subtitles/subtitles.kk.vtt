WEBVTT

00:00:00.000 --> 00:00:05.000
Қайырлы күн, құрметті студенттер!
Сіздерді келесі дәрісте көргеніме қуаныштымын.

00:00:05.000 --> 00:00:09.000
Бүгінгі дәрісіміздің
тақырыбы – сақтау.

00:00:09.000 --> 00:00:14.000
Бұл тақырып өте ауқымды, сондықтан
біз оны екі апта бойы қарастырамыз.

00:00:14.000 --> 00:00:22.000
Бүгін бірінші бөлім болады. Ендеше, бастайық.
Бүгінгі дәрісімізде екі бөлім болмақ.

00:00:22.000 --> 00:00:27.000
Бірінші бөлімде біз семестр бойы
құратын архитектураны қарастырамыз.

00:00:27.000 --> 00:00:32.000
Жаңа AWS сервистерін өткен сайын, біз
бұл архитектураны толықтыратын  боламыз.

00:00:33.000 --> 00:00:38.000
Екінші бөлімде біз Amazon S3 сервисін
пайдалану жағдайларын (use case) талдаймыз.

00:00:39.000 --> 00:00:44.000
Сондай-ақ, осы аптада бөлек видео белсенділік 
ретінде сізге Демо қолжетімді болады.

00:00:44.000 --> 00:00:51.000
Бұл Демода біз Amazon S3 сервисіне арналған
Versioning функционалын қарастырамыз.

00:00:52.000 --> 00:00:54.000
Келесі кезекте бізде
зертханалық жұмыс болады.

00:00:54.000 --> 00:00:59.000
Естеріңізде болса, зертханалық жұмыстарға
арналған екі бөлек видео белсенділік болады.

00:00:59.000 --> 00:01:04.000
Бұл зертханалық жұмысқа шолу және
зертханалық жұмыстың талдауы.

00:01:04.000 --> 00:01:14.000
Зертханалық жұмыстың тақырыбы – статикалық веб-
сайтты құру және Amazon S3 сервисінде орналастыру.

00:01:14.000 --> 00:01:21.000
Біз бірінші бөлімді бастаймыз және AWS бұлтындағы
ең қарапайым архитектураны қарастырамыз.

00:01:21.000 --> 00:01:24.000
Біз бұл архитектураны семестр бойы
толықтырып, дамытатын боламыз.

00:01:24.000 --> 00:01:31.000
Нәтижесінде сіз осы архитектураны
диаграмма түрінде көретін боласыз.

00:01:32.000 --> 00:01:38.000
Осы аптада біз төменгі сол жақта орналасқан құрамдас
бөлікті белсендіреміз - бұл static website on S3.

00:01:38.000 --> 00:01:44.000
Amazon S3 сервисінде статикалық
веб-сайттарды орналастыру мүмкіндігі бар.

00:01:44.000 --> 00:01:53.000
Осылайша, іскерлік тапсырма аясында
біз бұл функцияны іске қосамыз.

00:01:53.000 --> 00:02:09.000
Біздің кафе үшін біз use case аясында
статикалық веб-сайт құрамыз.

00:02:09.000 --> 00:02:16.988
Ол Amazon S3 сервисінде орналастырылады.
AWS бұлтында архитектураны құру тапсырмасы

00:02:17.012 --> 00:02:25.000
абстрактілі тапсырма болып көрінбеуі үшін
біз оны бизнес-кейс аясында қарастырамыз.

00:02:25.000 --> 00:02:31.000
Біздің жағдайда бұл наубайханасы бар
шағын дәмхананың бизнесі болады.

00:02:31.000 --> 00:02:40.000
Бұл наубайхананың иелері - Фрэнк пен Марта.
Олар ерлі-зайыптылар, сонымен қатар зейнеткерлер.

00:02:40.000 --> 00:02:46.000
Фрэнк пен Мартаның София атты қызы бар. Ол
ата-анасына осы бизнесті жүргізуге көмектеседі.

00:02:46.000 --> 00:02:55.000
Сонымен қатар университетте IT технологияларды,
соның ішінде бұлтты технологияларды оқып жатыр.

00:02:55.000 --> 00:03:07.226
Нихил де IT саласында оқитын университет
студенті, осы кафеде толық емес жұмыс

00:03:07.250 --> 00:03:19.000
істейді. Кафе жақында ашылды.
Оның әлі маркетингтік даму стратегиясы жоқ.

00:03:19.000 --> 00:03:23.100
Сондықтан бұл дәмхана
туралы тек жергілікті тұрғындар,

00:03:23.124 --> 00:03:28.000
сонымен қатар осы шағын кәсіп
иелерінің таныстары ғана біледі.

00:03:28.000 --> 00:03:36.000
София ата-анасына веб-сайт жасау арқылы
келушілер санын көбейтуге тырысуды ұсынды.

00:03:36.000 --> 00:03:43.784
Бұл веб-сайтта олар мәзірді, жұмыс
уақытын, орналасқан жерін, осы кафенің

00:03:43.808 --> 00:03:53.000
мекенжайын және басқа мәліметтерді жариялай 
алады. Бұл идея Фрэнк пен Мартаға ұнады.

00:03:53.000 --> 00:03:59.625
Сондықтан осы аптада біз бұл
бизнес мәселесін шешуге көмектесетін

00:03:59.649 --> 00:04:07.000
бұлттық технологиялар мен AWS
сервистерінің мүмкіндіктерін зерттейміз.

00:04:07.000 --> 00:04:13.000
Осымен бірінші бөлімді аяқтап,
келесі бөлімге көшеміз.

00:04:13.000 --> 00:04:22.000
Біз дәрісіміздің екінші бөліміне жеттік және
Amazon S3 сервисінің use кейстерін талдаймыз.

00:04:22.000 --> 00:04:30.000
Amazon S3 - бұл Simple Storage Service,
объектіні сақтауды қамтамасыз ететін сервис.

00:04:30.000 --> 00:04:39.000
Бұл сервисте біз өте үлкен көлемдегі ақпаратты,
деректерді шексіз дерлік көлемде сақтай аламыз.

00:04:39.000 --> 00:04:46.657
Деректер объектілі түрде бакеттердің ішінде
сақталады (buckets). Біз объектілі сақтау туралы

00:04:46.681 --> 00:04:54.000
айтып жатқандықтан, бұл Amazon S3 ішіндегі
файлдарды өзгерте алмайтынымызды білдіреді.

00:04:54.000 --> 00:04:56.845
Егер файлды өзгерту қажет болса, 
біз оны жүктеп алуымыз керек

00:04:56.869 --> 00:05:00.000
немесе жергілікті көшірмені өзгертіп, 
қайта жүктеп алуымыз керек.

00:05:00.000 --> 00:05:05.000
Сондықтан Amazon S3 сервисі ішінде
келесі жаңа нұсқа пайда болады.

00:05:05.000 --> 00:05:15.026
Бакеттер - бұл біздің деректеріміз сақталатын
түбірлік папкалардың бір түрі. Бакет атауы

00:05:15.050 --> 00:05:26.000
жаһандық бірегей болуы керек, яғни әртүрлі
аймақтарда бірдей атаумен екі бакет жасай алмайсыз.

00:05:26.000 --> 00:05:29.835
Ол жаһандық деңгейде бірегей
болуы керек, бірақ соған қарамастан

00:05:29.859 --> 00:05:34.000
сіздің деректеріңіз S3 бакет ішінде, 
белгілі бір аймақта сақталады.

00:05:34.000 --> 00:05:38.736
Сондықтан, бакет құрған кезде сіз
жаһандық атауды көрсетесіз, бірақ

00:05:38.760 --> 00:05:44.000
оның жанында деректеріңіз нақты
сақталатын аймақты да көрсетуіңіз қажет.

00:05:44.000 --> 00:05:49.988
Егер S3 бакет файлдардың
өлшемі туралы айтатын болсақ,

00:05:50.012 --> 00:05:56.000
онда бір файл 0 байттан 5
терабайтқа дейін болуы мүмкін.

00:05:56.000 --> 00:06:05.000
Яғни, кез келген дерлік объект түрін Amazon
S3 сервисі ішіне оңай орналастыруға болады.

00:06:10.000 --> 00:06:16.000
S3 бакет ішіндегі әрбір объект
бес сипаттаманы қамтиды.

00:06:16.000 --> 00:06:25.000
Біріншісі - Key немесе басқаша айтқанда, осы файлға
апаратын жол, ол бүкіл толық жолды білдіреді.

00:06:25.000 --> 00:06:32.000
Amazon S3 өзі файлдың папка ішінде сақталуын
немесе S3 бакет түбірінде сақталуын ажыратпайды.

00:06:32.000 --> 00:06:38.532
Папкаларды құру және әртүрлі ішкі
папкаларды бакет ішіндегі барлық файлдарды

00:06:38.556 --> 00:06:45.000
ұйымдастыру мүмкіндігі пайдаланудың
қарапайымдылығы үшін арнайы жасалған.

00:06:45.000 --> 00:06:56.000
Amazon S3 өзі басқаша сақтайды және әрбір
файлдың мәні осы файлдың толық жолын құрайды.

00:06:56.000 --> 00:07:03.185
Келесі сипаттама - Version ID болып табылады,
яғни файлыңыз қайта жүктелген кезде ол

00:07:03.209 --> 00:07:11.000
жаңа Version ID-ге ие болады. Осылайша біз бір
файлдың әртүрлі нұсқаларын ажырата аламыз.

00:07:11.000 --> 00:07:21.000
Келесі компонент – Мән (Value), біздің жағдайда
бұл байт тізбегі, яғни біздің деректеріміздің өзі.

00:07:21.000 --> 00:07:27.739
Төртінші - тегтер деп аталатын Metadata. Тегтер
кілт – мән жұптары (key - value) болып табылады,

00:07:27.763 --> 00:07:35.000
олар жүйелік болуы мүмкін, сонымен қатар олар user
defined, яғни пайдаланушы анықтайтын болуы мүмкін.

00:07:35.000 --> 00:07:41.988
Ең соңғысы - Subresources, бұл
Amazon S3 сервисінің жұмысына

00:07:42.012 --> 00:07:49.000
арналған белгілі бір объектіге
тән кейбір қосымша ақпарат.

00:07:49.000 --> 00:07:57.000
Amazon S3 сервисінің негізгі
артықшылықтарын толығырақ қарастырайық.

00:07:57.000 --> 00:08:02.033
Біріншісі - сенімділік (durability).
Amazon S3 сервисінің

00:08:02.057 --> 00:08:07.000
сенімділігі 11 тоғызбен немесе
99,999999999% өлшенеді.

00:08:07.000 --> 00:08:15.000
Бұл өте жақсы көрсеткіштер, түсінікті
болу үшін мысал келтірейік.

00:08:15.000 --> 00:08:24.000
Егер біз бір бакетте 10 мың объект сақтасақ, онда 
бір жыл ішінде ең көбі бір объектіні жоғалтамыз.

00:08:24.000 --> 00:08:30.582
Келесі артықшылығы - availability,
ол төрт тоғызбен өлшенеді, яғни

00:08:30.606 --> 00:08:38.000
99,99% жағдайда біз файлдарымызға
кіріп, оларды жүктей аламыз деген сөз.

00:08:38.000 --> 00:08:46.183
Availability durability-ге қарағанда біршама
төмен, бұл қалыпты жағдай, себебі желіде

00:08:46.207 --> 00:08:54.000
кейбір мәселелер туындауы мүмкін, бірақ
ең бастысы деректер қауіпсіз сақталады.

00:08:54.000 --> 00:09:01.988
Объектіні жүктеу кезінде қиындықтар туындаса,
біз әрқашан екінші талпыныс жасай аламыз,

00:09:02.012 --> 00:09:10.000
ал екінші талпыныс көбінесе сәтті болады
және файл нәтижесінде жүктеледі.

00:09:10.000 --> 00:09:18.488
Тағы бір артықшылығы - біз Amazon S3 сервисі үшін
pay as you go төлеу үлгісін қолданып төлейміз, яғни

00:09:18.512 --> 00:09:27.000
біз осы сервисте тек 1 гигабайт деректерді сақтасақ,
онда біз ай сайын дәл соншалықты төлейміз.

00:09:27.000 --> 00:09:33.216
Егер екінші айда біз бакеттерді
тазалап, S3 бакетінде 0 гигабайт

00:09:33.240 --> 00:09:39.000
деректер сақталса, бір айдан
кейін біз ештеңе төлемейміз.

00:09:39.000 --> 00:09:46.067
Осылайша, бұл ыңғайлы және, мысалы, 100
гигабайт, 500 гигабайт немесе 1 терабайт кеңістікті

00:09:46.091 --> 00:09:53.000
пайдалансақ та, пайдаланбасақ та, сәйкес
пакетті сатып алуға бізді ешкім мәжбүрлемейді.

00:09:53.000 --> 00:09:59.000
Осылайша, оны Amazon S3
сервисінде сақтау үнемді болуы мүмкін.

00:09:59.000 --> 00:10:06.488
Біз бөлімнің негізгі бөлігіне жеттік және Amazon S3
сервисін пайдаланудың негізгі жағдайларын (use case)

00:10:06.512 --> 00:10:14.000
қарастырамыз. Ең бірінші және танымал - Amazon S3
сервисін медиа деректер қоймасы ретінде пайдалану.

00:10:14.000 --> 00:10:23.000
Бұл әртүрлі видео материалдар, аудио, суреттер,
мүмкін мәтіндік ақпарат және т.б. болуы мүмкін.

00:10:23.000 --> 00:10:32.000
Amazon S3 сервисі көмегімен пайдаланушыларға
тікелей жүктеу сілтемесін бере аласыз.

00:10:32.000 --> 00:10:37.289
Бұл жағдайда домен
стандартты түрде болады - бұл

00:10:37.313 --> 00:10:47.000
https://&lt;bucket-name&gt;.s3.amazonaws.com.
Әрі қарай объектіге апаратын жол көрсетіледі.

00:10:47.000 --> 00:10:56.231
Сондай-ақ, CDN арқылы медианы таратуға болады.
Біздің жағдайда, бұл - Amazon CloudFront. S3

00:10:56.255 --> 00:11:06.000
бакеттерінің және осы бакеттердің ішіндегі
объектілердің қауіпсіздігін толығырақ қарастырайық.

00:11:06.000 --> 00:11:12.000
Барлық бакеттер бастапқыда жеке
және қауіпсіз түрде сақталған болады.

00:11:12.000 --> 00:11:18.000
Біз объектілерге немесе бакеттерге рұқсат бергенде,
біз least privilege принципін ұстануымыз керек.

00:11:18.000 --> 00:11:28.000
Яғни, біз тек сол объектілерге және тапсырманы
орындауға қажетті көлемде ғана рұқсат береміз.

00:11:28.000 --> 00:11:37.000
Егер біз қолжетімділікті қамтамасыз ету туралы
айтатын болсақ, бізде кең ауқымды функциялар бар.

00:11:37.000 --> 00:11:42.000
Олардың әрқайсысын қарастырайық.
Ең біріншісі - бұл Block Public Access Feature.

00:11:42.000 --> 00:11:47.174
Идея мынада, егер біз S3 бакеттеріне
кез келген жалпы қолжетімділік

00:11:47.198 --> 00:11:53.000
жабық екеніне кепілдік бергіміз
келсе, онда осы құсбелгілерді қосу керек.

00:11:53.000 --> 00:12:02.000
Бұл ауыстырып-қосқыш және бакетті баптау
деңгейіндегі ұяшықтардың құсбелгісін тексеру қажет.

00:12:02.000 --> 00:12:09.988
Шектеулі болса да, кейбір жалпыға ортақ
қолжетімділікті қамтамасыз ету қажет болса,

00:12:10.012 --> 00:12:18.000
ең алдымен осы ұяшықтардың құсбелгісін
алып тастау керек. Келесі - бұл IAM Policies.

00:12:18.000 --> 00:12:27.000
Идея мынада: бізде policy-ді тіркейтін
рөлдер, пайдаланушылар және группалар бар.

00:12:27.000 --> 00:12:37.000
Policy-де біз осы policy тіркелген ұйымдардың қайда
және қалай қол жеткізе алатынын көрсетеміз.

00:12:37.000 --> 00:12:46.952
Нақтырақ айтқанда, біз кейбір
policy-ді User1-ге тағайындай аламыз

00:12:46.976 --> 00:12:58.000
және policy файлдарды Bucket1-ге
оқуға және жазуға болатынын көрсетеді.

00:12:58.000 --> 00:13:08.185
Келесі, бізде Bucket Policies бар.
Олар бакетке байланған және бакет деңгейінде кімге

00:13:08.209 --> 00:13:19.000
және қандай түрде рұқсат берілгенін анықтай аламыз.
Ал бұл policy осы бакетке байланады.

00:13:19.000 --> 00:13:26.488
Келесі - бұл Access Control Lists, 
қысқаша ACLs. Бұл ескі тәсіл, ол қазір

00:13:26.512 --> 00:13:34.000
кері үйлесімділік үшін де жұмыс
істейді, бірақ оны IAM Policies алмастырды.

00:13:34.000 --> 00:13:39.526
Сондықтан, IAM Policies
пайдалану ұсынылады, бірақ ACLs

00:13:39.550 --> 00:13:46.000
пайдалану сіз үшін маңызды
болса, оны қосып, пайдалана аласыз.

00:13:46.000 --> 00:13:53.754
Келесі - бұл S3 Access Points. Идея мынада: 
әрбір қосымшаңыз үшін S3 Bucket ішіндегі

00:13:53.778 --> 00:14:02.000
объектілерге құқықтардың және қол жеткізудің
белгілі бір жинағын қамтамасыз ете аласыз.

00:14:02.000 --> 00:14:11.558
Басқа функционал - бұл Presigned URLs. Идея 
мынада: белгілі бір әрекеттер, объектілер үшін

00:14:11.582 --> 00:14:22.000
белгілі бір URL мекенжайын, яғни шектеулі уақытқа
қол жетімді болатын мекенжайды жасауға болады.

00:14:22.000 --> 00:14:26.245
Объектіні біреуге жіберу керек деп
елестетіп көрейік және сіз бір сағат

00:14:26.269 --> 00:14:31.000
ішінде қол жетімді болатын алдын ала
белгіленген URL мекенжайын жасай аласыз.

00:14:31.000 --> 00:14:39.000
URL мекенжайын ашқанда, объект жүктеле бастайды.
Сондай-ақ Presigned URL арқылы жасауға да болады.

00:14:39.000 --> 00:14:47.497
Және бөлек сервис - AWS Trusted Advisor
- бұл біздің бакеттерге қолжетімділікті

00:14:47.521 --> 00:14:57.000
автоматты түрде тексеруге мүмкіндік беретін
тегін сервис. Яғни, пайдалануға ұсынылады.

00:14:57.000 --> 00:15:04.000
Біздің бакеттердің үш күйін және осы
бакеттерге қол жеткізу деңгейлерін қарастырайық.

00:15:04.000 --> 00:15:08.785
Ең біріншісі Default - бұл кезде біздің
бакет қорғалған және жеке болады

00:15:08.809 --> 00:15:14.000
және тек Owner, яғни осы бакетті
жасаушы ғана осы бакетке қол жеткізе алады.

00:15:14.000 --> 00:15:22.000
Әдепкі бойынша, ол AWS аккаунты ішінде басқа
пайдаланушыларға ашық түрде рұқсат бере алады.

00:15:22.000 --> 00:15:26.000
Басқалардың барлығына бұл
бакетке кіруге тыйым салынады.

00:15:26.000 --> 00:15:32.293
Әрі қарай, екінші жағдай - біз бакетке
Public access ашқанда және Интернеттегі кез

00:15:32.317 --> 00:15:39.000
келген пайдаланушы біздің бакетке және
бакет ішіндегі объектілерге қол жеткізе алады.

00:15:39.000 --> 00:15:44.969
Үшінші нұсқа - неғұрлым шынайы
нұсқа, бұл біздің бакет жалпыға ортақ

00:15:44.993 --> 00:15:51.675
қолжетімділік мүмкіндігіне ие болған
кезде, бірақ ол басқарылатын, белгілі

00:15:51.699 --> 00:15:57.973
бір шарттарға немесе белгілі бір
қолданбаларға негізделген белгілі бір

00:15:57.997 --> 00:16:05.000
пайдаланушыларға ғана рұқсат берілген,
ал қалғандары үшін ол тыйым салынған.

00:16:05.000 --> 00:16:11.000
Енді S3 бакеттерінің ішіндегі объектілерді
шифрлау мәселелерін қарастырайық.

00:16:11.000 --> 00:16:16.000
Деректер файлын шифрлау
үшін бізге Secret Key қажет.

00:16:16.000 --> 00:16:26.000
Secret Key файлды оқылмайтын байттардың
кейбір тізбегіне айналдырады.

00:16:26.000 --> 00:16:36.000
Құпия кілт болса ғана шифрланған файлдың
шифрын ашуға және ондағы деректерді оқуға болады.

00:16:36.000 --> 00:16:46.000
Екі тәсіл бар - бұл Server-side encryption
(SSE), және Client-side encryption (CSE).

00:16:46.000 --> 00:16:55.000
Оның айырмашылығы, Server-side encryption кезінде
шифрлау Amazon S3 сервисінің жағында орын алады.

00:16:55.000 --> 00:16:59.277
Яғни, сіз файлды шифрланбаған түрде
 тасымалдайсыз. Amazon S3 сервисі бұл

00:16:59.301 --> 00:17:04.000
файлды қабылдайды, файлды шифрлайды, содан 
кейін оны қатты дискілерге жазады. Әрі қарай,

00:17:04.000 --> 00:17:14.640
сіз бұл файлды сұрағанда, сол әрекет орындалады,
тек кері тәртіпте, Amazon S3 шифрланған файлды

00:17:14.664 --> 00:17:25.000
қатты дискілерден оқиды, кейін оны кілтпен шифрын
ашады және файлды сізге шифрланбаған түрде береді.

00:17:25.000 --> 00:17:32.317
Client Signed Encryption шифрлау
десек, біз өзіміз шифрлау кілттерімізді

00:17:32.341 --> 00:17:41.000
басшылыққа аламыз және файлды Amazon S3
сервисіне жібермес бұрын шифрлауымыз керек.

00:17:41.000 --> 00:17:44.988
Яғни, Amazon S3 шифрлауды өз
жағында орындамайды, бірақ оны

00:17:45.012 --> 00:17:49.000
бастапқы түрінде қатты дискіге
жазады, өйткені ол шифрланған.

00:17:49.000 --> 00:17:54.641
Егер оқу қажет болса, онда
Amazon S3 шифрланған файлымызды

00:17:54.665 --> 00:18:01.000
қатты дискілерден шығарып алып,
оны сол түрінде қайта жібереді.

00:18:01.000 --> 00:18:06.088
Ал өз тарапымыздан шифрды
шешу процесін AWS бұлтында

00:18:06.112 --> 00:18:12.000
емес, басқа жерде сақталған
кілтпен ұйымдастыруымыз керек.

00:18:12.000 --> 00:18:18.132
Қай опцияны таңдау бизнес мәселесіне 
байланысты. Ең бастысы, S3 Bucket

00:18:18.156 --> 00:18:25.000
ішіндегі объектілерді шифрлаудың
қандай опциялары бар екенін білуіңіз керек.

00:18:25.000 --> 00:18:33.000
Amazon S3 сервисінің келесі кең таралған use
case - статикалық веб-сайттарды орналастыру.

00:18:33.000 --> 00:18:37.780
Бұл - Bucket параметрлерінде
белсендіруге болатын функция.

00:18:37.804 --> 00:18:44.390
Іске қосу кезінде index.html файлын, сонымен
қатар error.html файлын көрсету керек, яғни

00:18:44.414 --> 00:18:51.000
қандай да бір қателік туындаған жағдайда ол
сіз көрсеткен парақшаға қайта бағытталады.

00:18:51.000 --> 00:18:59.000
Оны іске қосқаннан кейін веб-сайтыңыз бірден
белгілі бір URL мекенжайында қолжетімді болады.

00:18:59.000 --> 00:19:09.049
Слайдтан URL үлгілерін көруге болады.
Сондай-ақ, пайдаланушы доменін S3 веб-сайтына

00:19:09.073 --> 00:19:19.000
байланыстыруға болады. Ол үшін Amazon
S3-ті Amazon Route 53-пен біріктіру керек.

00:19:19.000 --> 00:19:25.220
Мұнда Amazon S3 сайтында веб-сайтты
орналастырудың айқын артықшылықтарын көре аласыз.

00:19:25.244 --> 00:19:31.791
Бұл веб-серверіңізді орнатудың, бағдарламалық
жасақтаманы конфигурациялаудың және сонымен

00:19:31.815 --> 00:19:38.196
қатар, веб-серверіңіздің ауқымдылығы мен жоғары
қолжетімділігіне жауап берудің қажеті жоқ дегенді

00:19:38.220 --> 00:19:45.000
білдіреді. Барлық осы әрекеттер Amazon S3 сервисінің
бағасына кіреді және бұл AWS жағында жасалынады.

00:19:45.000 --> 00:19:51.284
Осылайша, сіз өзіңіз орналастыратын
веб-сервер жағдайында сұраныс артқан кезде

00:19:51.308 --> 00:19:58.000
сервер жүктемеге төтеп бере алмайтын
және жұмысын тоқтататын жағдай болуы мүмкін.

00:19:58.000 --> 00:20:04.488
Веб-сервер жұмысын тоқтатқаннан кейін
веб-сайтыңыз қолжетімсіз болады. Мұндай мәселелер

00:20:04.512 --> 00:20:11.000
Amazon S3 сервисінде болуы мүмкін емес,
өйткені ол қол жетімді және жоғары масштабталған.

00:20:11.000 --> 00:20:16.026
Тағы бір мәселе, веб-сервер
жағдайында сіз IT ресурстың толық

00:20:16.050 --> 00:20:22.000
бірлігін сатып алып, жүктеменің
қандай болатынына қарамастан төлейсіз.

00:20:22.000 --> 00:20:28.553
Егер сіздің сайтыңыз соншалықты танымал болмаса,
сіздің сайтыңызға сұраулар болған-болмағанына

00:20:28.577 --> 00:20:34.000
қарамастан, сіз осы веб-серверді
пайдалану үшін белгіленген соманы төлейсіз.

00:20:34.000 --> 00:20:39.988
Amazon S3 сервисі жағдайында мұндай
төлемдерді жасаудың қажеті жоқ. Сіз тек

00:20:40.012 --> 00:20:46.000
Amazon S3 сервисінде орналастырылған
медиа файлдардың өлшемі үшін төлейсіз.

00:20:46.000 --> 00:20:52.458
Бұл өте аз сомалар және тұтастай
алғанда бұл шешім экономикалық

00:20:52.482 --> 00:20:58.000
тұрғыдан ғана емес, техникалық 
жағынан да тиімдірек. Тағы бір

00:20:58.000 --> 00:21:08.000
маңызды жайт, static websites дегенде қарапайым
статикалық веб-сайттарды ойлайтын шығарсыз.

00:21:08.000 --> 00:21:14.000
Шын мәнінде, динамикалық веб-сайттарды да
Amazon S3 сервисінде орналастыруға болады.

00:21:14.000 --> 00:21:21.000
Бұл JavaScript өзі статикалық болып табылатын
JS файлдарын жасайтындығына байланысты.

00:21:21.000 --> 00:21:28.000
Оларға Amazon S3 сайтындағы статикалық веб-сайт
 хостингі аясында қызмет көрсетуге болады.

00:21:28.000 --> 00:21:32.000
Дегенмен, осы JS файлдарында жұмыс
істейтін код динамикалық болып табылады.

00:21:32.000 --> 00:21:36.000
Қандай сұраныс келетініне байланысты
ол өз тәртібін өзгерте алады.

00:21:36.000 --> 00:21:45.000
Осылайша біз Amazon S3 сервисінде динамикалық
веб-сайттарды орналастыра аламыз.

00:21:45.000 --> 00:21:50.000
Amazon S3 сервисінің келесі қызықты
функционалдығы - Versioning.

00:21:50.000 --> 00:21:56.488
Versioning - бұл функцияны қосқан
кезде, ол осы S3 bucket-іне бұрын

00:21:56.512 --> 00:22:03.000
жүктеп салынған барлық нұсқаларды
белгілі бір кілт арқылы сақтайды.

00:22:03.000 --> 00:22:06.488
Кілт, есіңізде болса,
файлыңыздың барлық сақтау жолын,

00:22:06.512 --> 00:22:10.000
оның ішінде ол орналасқан
барлық папкаларды білдіреді.

00:22:10.000 --> 00:22:17.185
Осылайша, versioning қосулы тұрған
кезде, S3 bucket-тен файлдарды жойсаңыз

00:22:17.209 --> 00:22:24.000
да, әрқашан кері қайтып, сол файлды
жылдам қалпына келтіруге болады.

00:22:24.000 --> 00:22:33.462
Сонымен қатар, егер сіз бір файлдың
бірнеше нұсқасымен жұмыс жасасаңыз, versioning

00:22:33.486 --> 00:22:44.000
пайдалану арқылы тапсырмаңыздың негізінде
қалаған кез келген нұсқаға оңай оралуға болады.

00:22:44.000 --> 00:22:49.000
Versioning-ке қатысты S3 bucket 
үш күйде болуы мүмкін.

00:22:49.000 --> 00:22:53.488
Бірінші күйі - бұл Default, versioning өшірулі
болған кезде (Versioning not enabled).

00:22:53.512 --> 00:22:58.000
Егер сізге versioning қажет болса,
оны бөлек белсендіру керек.

00:22:58.000 --> 00:23:01.988
Келесі, екінші күйі - бұл versioning қосулы
болған кезде (Versioning-enabled).

00:23:02.012 --> 00:23:06.000
Және үшінші күйі - бұл versioning тоқтатылған
кезде (Versioning-suspended).

00:23:06.000 --> 00:23:14.563
Үшінші нұсқа бар, себебі versioning-ты өшіру
мүмкін емес, оны қосқаннан кейін оны тек уақытша

00:23:14.587 --> 00:23:23.988
тоқтатуға болады. Осылайша, versioning қосулы болған
кезде жасалған барлық файл нұсқалары сақталады.

00:23:24.012 --> 00:23:33.000
Versioning кідірту сәтінде жаңа жүктеп алынған
файлдар жаңа нұсқаларды жасамайды.

00:23:33.000 --> 00:23:45.000
Жаңа нұсқаларды сақтауды жалғастыру
үшін versioning-ты қайта қосу керек.

00:23:45.000 --> 00:23:49.785
Amazon S3 сервисін қолдайтын
келесі функция CORS (Cross-Origin

00:23:49.809 --> 00:23:54.988
Resource Sharing) болып табылады.
Идеясы - CORS орнату арқылы сіз

00:23:55.012 --> 00:23:59.555
басқа сайтқа веб-сайтыңыздың
бөліктерін пайдалануға немесе

00:23:59.579 --> 00:24:05.000
веб-сайтыңыздың медиа файлдарына
тікелей кіруге рұқсат бере аласыз.

00:24:05.000 --> 00:24:12.607
CORS тіркелмеген болса, браузерлер әдепкі бойынша
мұндай әрекеттерге тыйым салады, атап айтқанда,

00:24:12.631 --> 00:24:20.000
бір веб-сайтта олар басқа веб-сайттың бөліктерін
пайдалана алмайды немесе оған кіре алмайды.

00:24:20.000 --> 00:24:23.000
Қауіпсіздік мақсатында
бұған рұқсат етілмейді.

00:24:23.000 --> 00:24:30.151
Егер сізге осындай әрекеттерді орындау қажет
болса, онда сіз CORS-ті бөлінген ресурстарға

00:24:30.175 --> 00:24:37.000
таңдап тіркей аласыз және басқа веб-сайттар
сіздің ресурстарыңызды пайдалана алады.

00:24:37.000 --> 00:24:43.249
Amazon S3 сервисін пайдаланудың келесі
қызықты нұсқасы ауқымды есептеулер

00:24:43.273 --> 00:24:49.000
мен аналитиканың бөлігі ретінде
деректерді сақтау болып табылады.

00:24:49.000 --> 00:24:55.120
Бұл жағдайда объектілі сақтау өте
қолайлы, өйткені мұндай есептеуге арналған

00:24:55.144 --> 00:25:02.000
деректер бір рет жазылады және бірнеше
рет оқылады: әдетте бұл деректер өзгермейді.

00:25:02.000 --> 00:25:06.713
Бұл қандай деректер? Бұл төлем 
транзакциялары туралы деректер,

00:25:06.737 --> 00:25:13.000
пайдаланушылардың парақшаларына кіру
туралы ақпарат, әртүрлі журналдар және т.б.

00:25:13.000 --> 00:25:17.270
Осылайша, бұл деректер Amazon S3
сервисіне бір рет жазылады.

00:25:17.294 --> 00:25:22.000
Amazon S3 сервисі шикі деректер көзі
ретінде де пайдаланылуы мүмкін.

00:25:22.000 --> 00:25:27.488
Әрі қарай, сіз слайдта spot instances
іске қосудың мысалын немесе осы

00:25:27.512 --> 00:25:33.000
есептеулерді орындайтын EMR
Cluster-дің қандай да бір түрін көресіз.

00:25:33.000 --> 00:25:43.000
Есептеулер аяқталғаннан кейін өзгертілген деректер
өңделген пішінде сақталатын S3 bucket-ке түседі.

00:25:43.000 --> 00:25:51.546
Содан кейін әртүрлі аналитикалық
жүйелерді қосуға болады: Amazon QuickSight

00:25:51.570 --> 00:26:00.000
сервисі бар, ол бізге деректерімізді
визуализациялауға мүмкіндік береді.

00:26:00.000 --> 00:26:05.026
Amazon S3 сервисінің келесі
қызықты қолданылуы - әртүрлі

00:26:05.050 --> 00:26:10.076
сақтық көшірмелерді, нормативтік
талаптарға сәйкес белгілі

00:26:10.100 --> 00:26:14.408
бір уақыт ішінде сақтау
қажет маңызды деректердің

00:26:14.432 --> 00:26:20.000
мұрағаттарын немесе ішкі
корпоративтік құжаттарыңызды сақтау.

00:26:20.000 --> 00:26:26.031
Бұл деректердің көзі тек AWS деңгейіндегі
инфрақұрылымыңыз ғана емес, сонымен қатар бұл

00:26:26.055 --> 00:26:33.000
деректерді жергілікті дата-центрден Amazon S3
сервисіне тікелей тасымалдауға және сақтауға болады.

00:26:33.000 --> 00:26:39.982
Amazon S3 сервисінде деректерді сақтау
өте сенімді нұсқа екенін есте ұстаймыз, өйткені

00:26:40.006 --> 00:26:46.988
ол 11 тоғыз сенімділікті қамтамасыз етеді.
Егер қандай да бір себептермен сізге одан

00:26:47.012 --> 00:26:53.994
да жоғары сенімділік қажет болса, басқа
аймақта екінші бакет жасап, бірінші бакетте

00:26:54.018 --> 00:27:01.000
Cross-Region Replication теңшеген кезде
Cross-Region Replication (CRR) функциясы бар.

00:27:01.000 --> 00:27:06.620
Осылайша, деректер бірінші
бакетке енген кезде, ол бұл деректерді

00:27:06.644 --> 00:27:12.000
басқа аймақта орналасқан
бакетте автоматты түрде қайталайды.

00:27:12.000 --> 00:27:18.787
Бұл деректеріңізді сақтау сенімділігін одан әрі
арттырады, бірақ бұл жағдайда деректеріңізді

00:27:18.811 --> 00:27:25.000
сақтауға арналған осы қарапайым инфрақұрылымды
қолдау үшін қосымша шығындар қажет.

00:27:25.000 --> 00:27:32.245
Сіз көлемдерді ескере отырып,
алдын ала есептеуіңіз керек, кем дегенде

00:27:32.269 --> 00:27:39.199
шамамен қандай көлемде деректерді
сақтайсыз, олар қандай мерзімде

00:27:39.223 --> 00:27:45.832
сақталады және маңызды деректерді
сақтауға арналған басқа опция

00:27:45.856 --> 00:27:53.000
қажет болған жағдайда қанша
ақша төлеуге тура келетінін есептеңіз.

00:27:53.000 --> 00:27:57.988
Consistency model-ге қатысты
бір-екі тармаққа тоқталайық.

00:27:58.012 --> 00:28:03.000
Идеясы Amazon S3 сервисіне қатысты
өзгерістердің қалай қолданылатынында.

00:28:03.000 --> 00:28:07.674
Біз объектілер туралы айтатын
болсақ, онда барлық аймақтардағы

00:28:07.698 --> 00:28:11.988
барлық объектілер strongly
consistent болып келеді.

00:28:12.012 --> 00:28:16.533
Бұл бар объектілер және жаңа
объектілерге енгізілген өзгертулер

00:28:16.557 --> 00:28:21.000
олар жазылғаннан кейін
бірден күшіне енетінін білдіреді.

00:28:21.000 --> 00:28:27.993
Қарапайым сөзбен айтқанда, біз PUT операциясын
сәтті орындағаннан кейін, яғни S3 бакетіне

00:28:28.017 --> 00:28:34.851
объект жазамыз, егер осыдан кейін бірден
объектіні оқитын болсақ немесе бакеттегі бар

00:28:34.875 --> 00:28:42.425
объектілердің тізімін сұрайтын GET немесе LIST
операциясын орындасақ, онда бұл жақында жазылған

00:28:42.449 --> 00:28:50.000
объект бірден осы тізімде пайда болады немесе
осы объектінің жаңартылған мазмұны қайтарылады.

00:28:50.000 --> 00:29:00.000
Осылайша GET, LIST және PUT операциялары
үшін read-after-write consistency қамтамасыз етіледі.

00:29:00.000 --> 00:29:06.684
Бакет конфигурациялары туралы айтатын
болсақ, олар eventually consistent болып

00:29:06.708 --> 00:29:14.000
келеді, яғни жаңа параметрлер бірден емес,
қысқа уақыт кезеңінен кейін қолданылады.

00:29:14.000 --> 00:29:20.988
Мысалы: егер біз бакетті жойып,
содан кейін бірден бакеттердің

00:29:21.012 --> 00:29:28.000
тізімін сұрасақ, жойылған бакет
осы тізімде пайда болуы мүмкін.

00:29:28.000 --> 00:29:37.988
Бірнеше секундтан кейін бакеттердің тізімін сұрасақ,
онда бұл жағдайда жойылған бакет енді тізімде

00:29:38.012 --> 00:29:48.000
болмайды. Amazon S3 сервисінде бакеттермен және
объектілермен жұмыс істегенде осындай нюанстар бар.

00:29:48.000 --> 00:29:52.280
Сонымен, біз екінші бөлімнің
соңына жеттік және Amazon

00:29:52.304 --> 00:29:56.988
S3 сервисіне қатысты ең негізгі
тармақтарды қарастырайық.

00:29:57.012 --> 00:30:06.000
Бірінші және ең маңызды нәрсе - бакет атаулары
барлық AWS аймақтарында жаһандық болуы керек.

00:30:06.000 --> 00:30:09.823
Біз деректерді сақтау үшін
белгілі бір аймақты таңдаймыз және

00:30:09.847 --> 00:30:13.671
барлық деректер осы аймақта сақталады.
Келесі нәрсе - барлық

00:30:13.695 --> 00:30:18.030
бакеттердің әдепкі бойынша жеке
болуы: жалпыға ортақ қолжетімділікті

00:30:18.054 --> 00:30:22.000
қамтамасыз ету үшін сізге
қосымша әрекеттерді орындау қажет.

00:30:22.000 --> 00:30:30.988
Қоғамдық немесе AWS аккаунтыңыздағы объектілер
болсын, бакетке кіруді қамтамасыз ету үшін сізде

00:30:31.012 --> 00:30:40.000
әртүрлі опциялар бар. Бұл IAM policy, Bucket
policy, Access control Lists және т.б. болуы мүмкін.

00:30:40.000 --> 00:30:47.147
Strongly Consistency үлгісі барлық
жаңа және бар объектілер үшін

00:30:47.171 --> 00:30:55.000
жұмыс істейді, объектілерде
жасалған өзгертулер бірден күшіне енеді.

00:30:55.000 --> 00:31:02.488
Amazon S3 сервисі ішіндегі бір
файлдың максималды өлшемі - 5 терабайт,

00:31:02.512 --> 00:31:10.000
бұл барлық дерлік сақтау тапсырмалары
мен бар файлдар үшін жеткілікті.

00:31:10.000 --> 00:31:17.535
Біз, сондай-ақ, Amazon S3 сервисінің 4
танымал пайдалану жағдайын қарастырдық.

00:31:17.559 --> 00:31:25.000
Бұл осы use кейстермен ғана шектелмейді:
көптеген әртүрлі басқа да use кейстер бар.

00:31:25.000 --> 00:31:30.988
Ең бастысы, сіз бұл сервисті
архитектураның қай жерлерінде

00:31:31.012 --> 00:31:37.000
сәтті қолдануға болатыны туралы
жалпы түсінікке ие болдыңыз.

00:31:37.000 --> 00:31:43.000
Осымен біз AWS бұлтында сақтау тақырыбына
арналған дәрістің бірінші бөлімінің соңына келдік.

00:31:43.000 --> 00:31:49.000
Сіз Amazon S3 сервисін тереңірек
түсіндіңіз деп үміттенемін.

00:31:49.000 --> 00:31:55.071
Сондай-ақ, біздің алдағы белсенділіктерімізде
Amazon S3 сервисіне арналған

00:31:55.095 --> 00:32:01.000
Демо және зертханалық жұмыс болады.
Осымен бүгінгі сессиямыз аяқталды.

00:32:01.000 --> 00:32:06.000
Назарларыңызға рахмет.
Келесі белсенділіктерімізде кездескенше.
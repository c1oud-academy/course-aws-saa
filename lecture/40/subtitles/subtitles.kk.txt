Қайырлы күн, құрметті студенттер!
Барлықтарыңызды келесі дәрісте көргеніме қуаныштымын.
Бүгінгі дәрісіміздің тақырыбы – сақтау.
Бұл тақырып өте ауқымды, сондықтан біз оны екі апта бойы қарастырамыз.
Бүгін бірінші бөлім болады.
Ендеше, бастайық.
Бүгінгі дәрісімізде екі бөлім болмақ.
Бірінші бөлімде біз семестр бойы құратын архитектураны қарастырамыз.
Жаңа AWS сервистерін өткен сайын, біз бұл архитектураны толықтыратын  боламыз.
Екінші бөлімде біз Amazon S3 сервисін пайдалану жағдайларын (use case) талдаймыз.
Сондай-ақ, осы аптада бөлек видео белсенділік ретінде сізге Демо қолжетімді болады.
Бұл Демода біз Amazon S3 сервисіне арналған Versioning функционалын қарастырамыз.
Келесі кезекте бізде зертханалық жұмыс болады.
Естеріңізде болса, зертханалық жұмыстарға арналған екі бөлек видео белсенділік болады.
Бұл зертханалық жұмысқа шолу және зертханалық жұмыстың талдауы.
Зертханалық жұмыстың тақырыбы – статикалық веб-сайтты құру және оны Amazon S3 сервисінде орналастыру.
Біз бірінші бөлімді бастаймыз және AWS бұлтындағы ең қарапайым архитектураны қарастырамыз.
Біз бұл архитектураны семестр бойы толықтырып, дамытатын боламыз.
Нәтижесінде сіз осы архитектураны диаграмма түрінде көретін боласыз. 
Осы апта аясында біз төменгі сол жақта орналасқан құрамдас бөлікті белсендіреміз - бұл static website on S3.
Amazon S3 сервисінде статикалық веб-сайттарды орналастыру мүмкіндігі бар.
Осылайша, іскерлік тапсырма аясында біз бұл функцияны іске қосамыз.
Біздің кафе үшін біз use case аясында статикалық веб-сайт құрамыз.
Ол Amazon S3 сервисінде орналастырылады.
AWS бұлтында архитектураны құру тапсырмасы абстрактілі тапсырма болып көрінбеуі үшін біз оны бизнес-кейс аясында қарастырамыз.
Біздің жағдайда бұл наубайханасы бар шағын дәмхананың бизнесі болады.
Бұл наубайхананың иелері - Фрэнк пен Марта.
Олар ерлі-зайыптылар, сонымен қатар зейнеткерлер.
Фрэнк пен Мартаның София атты қызы бар.
Ол ата-анасына осы шағын бизнесті жүргізуге көмектеседі.
Сонымен қатар университетте IT технологияларды, соның ішінде бұлтты технологияларды оқып жатыр.
Нихил де IT саласында оқитын университет студенті, осы кафеде толық емес жұмыс істейді.
Кафе жақында ашылды.
Оның әлі маркетингтік даму стратегиясы жоқ.
Сондықтан бұл дәмхана туралы тек жергілікті тұрғындар, сонымен қатар осы шағын кәсіп иелерінің таныстары ғана біледі.
София ата-анасына веб-сайт жасау арқылы келушілер санын көбейтуге тырысуды ұсынды.
Бұл веб-сайтта олар мәзірді, жұмыс уақытын, орналасқан жерін, осы кафенің мекенжайын және басқа мәліметтерді жариялай алады.
Бұл идея Фрэнк пен Мартаға ұнады. 
Сондықтан осы аптада біз бұл бизнес мәселесін шешуге көмектесетін бұлттық технологиялар мен AWS сервистерінің мүмкіндіктерін зерттейміз.
Осымен бірінші бөлімді аяқтап, келесі бөлімге көшеміз.
Біз дәрісіміздің екінші бөліміне жеттік және Amazon S3 сервисінің use кейстерін талдаймыз.
Amazon S3 - бұл Simple Storage Service, объектіні сақтауды қамтамасыз ететін сервис.
Бұл сервисте біз өте үлкен көлемдегі ақпаратты, деректерді  шексіз дерлік көлемде сақтай аламыз.
Деректер объектілі түрде бакеттердің ішінде сақталады (buckets).
Біз объектілі сақтау туралы айтып жатқандықтан, бұл Amazon S3 ішіндегі файлдарды өзгерте алмайтынымызды білдіреді.
Егер файлды өзгерту қажет болса, біз оны жүктеп алуымыз керек немесе жергілікті көшірмені өзгертіп, қайта жүктеп алуымыз керек.
Сондықтан Amazon S3 сервисі ішінде келесі жаңа нұсқа пайда болады.
Бакеттер - бұл біздің деректеріміз сақталатын түбірлік папкалардың бір түрі.
Бакет атауы жаһандық бірегей болуы керек, яғни әртүрлі аймақтарда бірдей атаумен екі бакет жасай алмайсыз.
Ол жаһандық деңгейде бірегей болуы керек, бірақ соған қарамастан сіздің деректеріңіз S3 бакет ішінде, белгілі бір аймақта сақталады.
Сондықтан, бакет құрған кезде сіз жаһандық атауды көрсетесіз, бірақ оның жанында деректеріңіз нақты сақталатын аймақты да көрсетуіңіз қажет.
Егер S3 бакет файлдардың өлшемі туралы айтатын болсақ, онда бір файл 0 байттан 5 терабайтқа дейін болуы мүмкін.
Яғни, кез келген дерлік объект түрін Amazon S3 сервисі ішіне оңай орналастыруға болады.
S3 бакет ішіндегі әрбір объект бес сипаттаманы қамтиды.
Біріншісі - Key немесе басқаша айтқанда, осы файлға апаратын жол, ол бүкіл толық жолды білдіреді.
Amazon S3 өзі файлдың папка ішінде сақталуын немесе S3 бакет түбірінде сақталуын ажыратпайды.
Папкаларды құру және әртүрлі ішкі папкаларды бакет ішіндегі барлық файлдарды ұйымдастыру мүмкіндігі пайдаланудың қарапайымдылығы үшін арнайы жасалған.
Amazon S3 өзі басқаша сақтайды және әрбір файлдың мәні осы файлдың толық жолын құрайды.
Келесі сипаттама - Version ID болып табылады, яғни файлыңыз қайта жүктелген кезде ол жаңа Version ID-ге ие болады.
Осылайша біз бір файлдың әртүрлі нұсқаларын ажырата аламыз.
Келесі компонент – Мән (Value), біздің жағдайда бұл байт тізбегі, яғни біздің деректеріміздің өзі.
Төртінші - тегтер деп аталатын Metadata.
Тегтер кілт – мән жұптары (key - value) болып табылады, олар жүйелік болуы мүмкін, сонымен қатар олар user defined, яғни пайдаланушы анықтайтын болуы мүмкін.
Ең соңғысы - Subresources, бұл Amazon S3 сервисінің жұмысына арналған белгілі бір объектіге тән кейбір қосымша ақпарат.
Amazon S3 сервисінің негізгі артықшылықтарын толығырақ қарастырайық.
Біріншісі - сенімділік (durability).
Amazon S3 сервисінің сенімділігі 11 тоғызбен немесе 99,999999999% өлшенеді.
Бұл өте жақсы көрсеткіштер, түсінікті болу үшін мысал келтірейік.
Егер біз бір бакетте 10 мың объект сақтасақ, онда бір жыл ішінде ең көбі бір объектіні жоғалтамыз.
Келесі артықшылығы - availability, ол төрт тоғызбен өлшенеді, яғни 99,99% жағдайда біз файлдарымызға кіріп, оларды жүктей аламыз деген сөз.
Availability durability-ге қарағанда біршама төмен, бұл қалыпты жағдай, себебі желіде кейбір мәселелер туындауы мүмкін, бірақ ең бастысы деректер қауіпсіз сақталады.
Объектіні жүктеу кезінде қиындықтар туындаса, біз әрқашан екінші талпыныс жасай аламыз, ал екінші талпыныс көбінесе сәтті болады және файл нәтижесінде жүктеледі.
Тағы бір артықшылығы - біз Amazon S3 сервисі үшін pay as you go төлеу үлгісін қолданып төлейміз, яғни біз осы сервисте тек 1 гигабайт деректерді сақтасақ, онда біз ай сайын дәл соншалықты төлейміз.
Егер екінші айда біз бакеттерді тазалап, S3 бакетінде 0 гигабайт деректер сақталса, бір айдан кейін біз ештеңе төлемейміз.
Осылайша, бұл ыңғайлы және, мысалы, 100 гигабайт, 500 гигабайт немесе 1 терабайт кеңістікті пайдалансақ та, пайдаланбасақ та, сәйкес пакетті сатып алуға бізді ешкім мәжбүрлемейді.
Осылайша, оны Amazon S3 сервисінде сақтау үнемді болуы мүмкін.
Біз ағымдағы бөлімнің негізгі бөлігіне жеттік және Amazon S3 сервисін пайдаланудың негізгі жағдайларын (use case) қарастырамыз.
Ең бірінші және ең танымал - Amazon S3 сервисін медиа деректер қоймасы ретінде пайдалану.
Бұл әртүрлі видео материалдар, аудио, суреттер, мүмкін мәтіндік ақпарат және т.б. болуы мүмкін.
Amazon S3 сервисі көмегімен пайдаланушыларға тікелей жүктеу сілтемесін бере аласыз.
Бұл жағдайда домен стандартты түрде болады - бұл https://<bucket-name>.s3.amazonaws.com.
Әрі қарай объектіге апаратын жол көрсетіледі.
Сондай-ақ, CDN арқылы медианы таратуға болады.
Біздің жағдайда, бұл - Amazon CloudFront.
S3 бакеттерінің және осы бакеттердің ішіндегі объектілердің қауіпсіздігін толығырақ қарастырайық.
Барлық бакеттер бастапқыда жеке және қауіпсіз түрде сақталған болады.
Біз объектілерге немесе бакеттерге рұқсат бергенде, біз least privilege принципін ұстануымыз керек.
Яғни, біз тек сол объектілерге және тапсырманы орындауға қажетті көлемде ғана рұқсат береміз.
Егер біз қолжетімділікті қамтамасыз ету туралы айтатын болсақ, бізде кең ауқымды функциялар бар.
Олардың әрқайсысын қарастырайық.
Ең біріншісі - бұл Block Public Access Feature.
Идея мынада, егер біз S3 бакеттеріне кез келген жалпы қолжетімділік жабық екеніне кепілдік бергіміз келсе, онда осы құсбелгілерді қосу керек.
Бұл ауыстырып-қосқыштың бір түрі және бакетті баптау деңгейіндегі ұяшықтардың құсбелгісін тексеру қажет.
Шектеулі болса да, кейбір жалпыға ортақ қолжетімділікті қамтамасыз ету қажет болса, ең алдымен осы ұяшықтардың құсбелгісін алып тастау керек.
Келесі - бұл IAM Policies.
Идея мынада: бізде policy-ді тіркейтін рөлдер, пайдаланушылар және группалар бар.
Policy-де біз осы policy тіркелген ұйымдардың қайда және қалай қол жеткізе алатынын көрсетеміз.
Нақтырақ айтқанда, біз кейбір policy-ді User1-ге тағайындай аламыз және policy файлдарды Bucket1-ге оқуға және жазуға болатынын көрсетеді.
Келесі, бізде Bucket Policies бар.
Олар бакетке байланған және бакет деңгейінде кімге және қандай түрде рұқсат берілгенін анықтай аламыз.
Ал бұл policy осы бакетке байланады.
Келесі - бұл Access Control Lists, қысқаша ACLs.
Бұл ескі тәсіл, ол қазір кері үйлесімділік үшін де жұмыс істейді, бірақ оны IAM Policies алмастырды.
Сондықтан, IAM Policies пайдалану ұсынылады, бірақ ACLs пайдалану сіз үшін маңызды болса, оны қосып, пайдалана аласыз.
Келесі - бұл S3 Access Points.
Идея мынада: әрбір қосымшаңыз үшін S3 Bucket ішіндегі объектілерге құқықтардың және қол жеткізудің белгілі бір жинағын қамтамасыз ете аласыз.
Басқа функционал - бұл Presigned URLs.
Идея мынада: белгілі бір әрекеттер, объектілер үшін белгілі бір URL мекенжайын, яғни шектеулі уақытқа қол жетімді болатын мекенжайды жасауға болады.
Объектіні біреуге жіберу керек деп елестетіп көрейік және сіз бір сағат ішінде қол жетімді болатын алдын ала белгіленген URL мекенжайын жасай аласыз.
Осы URL мекенжайын ашқанда, объект жүктеле бастайды.
Сонымен қатар Presigned URL арқылы жасауға да болады.
Және бөлек сервис - AWS Trusted Advisor - бұл біздің бакеттерге қолжетімділікті автоматты түрде тексеруге мүмкіндік беретін тегін сервис.
Яғни, пайдалануға ұсынылады.
Біздің бакеттердің үш күйін және осы бакеттерге қол жеткізу деңгейлерін қарастырайық.
Ең біріншісі Default - бұл кезде біздің бакет қорғалған және жеке болады және тек Owner, яғни осы бакетті жасаушы ғана осы бакетке қол жеткізе алады.
Әдепкі бойынша, ол AWS аккаунты ішінде басқа пайдаланушыларға ашық түрде рұқсат бере алады.
Басқалардың барлығына бұл бакетке кіруге тыйым салынады.
Әрі қарай, екінші жағдай - біз бакетке Public access ашқанда және Интернеттегі кез келген пайдаланушы біздің бакетке және бакет ішіндегі объектілерге қол жеткізе алады.
Үшінші нұсқа - неғұрлым шынайы нұсқа, бұл біздің бакет жалпыға ортақ қолжетімділік мүмкіндігіне ие болған кезде, бірақ ол басқарылатын, белгілі бір шарттарға немесе белгілі бір қолданбаларға негізделген белгілі бір пайдаланушыларға ғана рұқсат берілген, ал қалғандары үшін ол тыйым салынған.
Енді S3 бакеттерінің ішіндегі объектілерді шифрлау мәселелерін қарастырайық.
Деректер файлын шифрлау үшін бізге Secret Key қажет.
Secret Key файлды оқылмайтын байттардың кейбір тізбегіне айналдырады.
Құпия кілт болса ғана шифрланған файлдың шифрын ашуға және ондағы деректерді оқуға болады.
Екі тәсіл бар - бұл Server-side encryption (SSE), және Client-side encryption (CSE).
Оның айырмашылығы, Server-side encryption кезінде шифрлау Amazon S3 сервисінің жағында орын алады.
Яғни, сіз файлды шифрланбаған түрде тасымалдайсыз.
Amazon S3 сервисі бұл файлды қабылдайды, файлды шифрлайды, содан кейін оны қатты дискілерге жазады.
Әрі қарай, сіз бұл файлды сұраған кезде, сол әрекет орындалады, тек кері тәртіпте болады, Amazon S3 шифрланған файлды қатты дискілерден оқиды, содан кейін оны кілтпен шифрын ашады және файлды сізге шифрланбаған түрде береді.
Client Signed Encryption шифрлау десек, біз өзіміз шифрлау кілттерімізді басшылыққа аламыз және файлды Amazon S3 сервисіне жібермес бұрын шифрлауымыз керек.
Яғни, Amazon S3 шифрлауды өз жағында орындамайды, бірақ оны бастапқы түрінде қатты дискіге жазады, өйткені ол шифрланған.
Егер оқу қажет болса, онда Amazon S3 шифрланған файлымызды қатты дискілерден шығарып алып, оны сол түрінде қайта жібереді.
Ал өз тарапымыздан шифрды шешу процесін AWS бұлтында емес, басқа жерде сақталған кілтпен ұйымдастыруымыз керек.
Қай опцияны таңдау бизнес мәселесіне байланысты.
Ең бастысы, S3 Bucket ішіндегі объектілерді шифрлаудың қандай опциялары бар екенін білуіңіз керек.
Amazon S3 сервисінің келесі кең таралған use case - статикалық веб-сайттарды орналастыру болып табылады.
Бұл - Bucket параметрлерінде белсендіруге болатын функция.
Іске қосу кезінде index.html файлын, сонымен қатар error.html файлын көрсету керек, яғни қандай да бір қателік туындаған жағдайда ол сіз көрсеткен парақшаға қайта бағытталады.
Оны іске қосқаннан кейін веб-сайтыңыз бірден белгілі бір URL мекенжайында қолжетімді болады.
Слайдтан URL үлгілерін көруге болады.
Сондай-ақ, пайдаланушы доменін S3 веб-сайтына байланыстыруға болады.
Ол үшін Amazon S3-ті Amazon Route 53-пен біріктіру керек.
Мұнда сіз Amazon S3 сайтында веб-сайтты орналастырудың айқын артықшылықтарын бірден көре аласыз.
Бұл өзіңіздің веб-серверіңізді орнатудың, бағдарламалық жасақтаманы конфигурациялаудың және сонымен қатар, веб-серверіңіздің ауқымдылығы мен жоғары қолжетімділігіне жауап берудің қажеті жоқ дегенді білдіреді.
Барлық осы әрекеттер Amazon S3 сервисінің бағасына кіреді және бұл AWS жағында жасалынады.
Осылайша, сіз өзіңіз орналастыратын веб-сервер жағдайында сұраныс артқан кезде сервер жүктемеге төтеп бере алмайтын және жұмысын тоқтататын жағдай болуы мүмкін.
Веб-сервер жұмысын тоқтатқаннан кейін веб-сайтыңыз қолжетімсіз болады.
Мұндай мәселелер Amazon S3 сервисінде болуы мүмкін емес, өйткені ол қол жетімді және жоғары масштабталған.
Тағы бір мәселе, веб-сервер жағдайында сіз IT ресурстың толық бірлігін сатып алып, жүктеменің қандай болатынына қарамастан төлейсіз.
Егер сіздің сайтыңыз соншалықты танымал болмаса, сіздің сайтыңызға сұраулар болған-болмағанына қарамастан, сіз осы веб-серверді пайдалану үшін белгіленген соманы төлейсіз.
Amazon S3 сервисі жағдайында мұндай төлемдерді жасаудың қажеті жоқ.
Сіз тек Amazon S3 сервисінде орналастырылған медиа файлдардың өлшемі үшін төлейсіз.
Бұл өте аз сомалар және тұтастай алғанда бұл шешім экономикалық тұрғыдан ғана емес, техникалық жағынан да тиімдірек.
Тағы бір маңызды жайт, static websites дегенде қарапайым статикалық веб-сайттарды ойлайтын шығарсыз.
Шын мәнінде, динамикалық веб-сайттарды да Amazon S3 сервисінде орналастыруға болады.
Бұл JavaScript өзі статикалық болып табылатын JS файлдарын жасайтындығына байланысты.
Оларға Amazon S3 сайтындағы статикалық веб-сайт хостингі аясында қызмет көрсетуге болады.
Дегенмен, осы JS файлдарында жұмыс істейтін код динамикалық болып табылады.
Қандай сұраныс келетініне байланысты ол өз тәртібін өзгерте алады.
Осылайша біз Amazon S3 сервисінде динамикалық веб-сайттарды орналастыра аламыз.
Amazon S3 сервисінің келесі қызықты функционалдығы - Versioning.
Versioning - бұл функцияны қосқан кезде, ол осы S3 bucket-іне бұрын жүктеп салынған барлық нұсқаларды белгілі бір кілт арқылы сақтайды.
Кілт, есіңізде болса, файлыңыздың барлық сақтау жолын, оның ішінде ол орналасқан барлық папкаларды білдіреді.
Осылайша, versioning қосулы тұрған кезде, S3 bucket-тен файлдарды жойсаңыз да, әрқашан кері қайтып, сол файлды жылдам қалпына келтіруге болады.
Сонымен қатар, егер сіз бір файлдың бірнеше нұсқасымен жұмыс жасасаңыз, versioning пайдалану арқылы тапсырмаңыздың негізінде қалаған кез келген нұсқаға оңай оралуға болады.
Versioning-ке қатысты S3 bucket үш күйде болуы мүмкін.
Бірінші күйі - бұл Default, versioning өшірулі болған кезде (Versioning not enabled).
Егер сізге versioning қажет болса, оны бөлек белсендіру керек.
Келесі, екінші күйі - бұл versioning қосулы болған кезде (Versioning-enabled).
Және үшінші күйі - бұл versioning тоқтатылған кезде (Versioning-suspended).
Үшінші нұсқа бар, себебі versioning-ты өшіру мүмкін емес, оны қосқаннан кейін оны тек уақытша тоқтатуға болады.
Осылайша, versioning қосулы болған кезде жасалған барлық файл нұсқалары сақталады.
Versioning кідірту сәтінде жаңа жүктеп алынған файлдар жаңа нұсқаларды жасамайды.
Жаңа нұсқаларды сақтауды жалғастыру үшін versioning-ты қайта қосу керек.
Amazon S3 сервисін қолдайтын келесі функция CORS (Cross-Origin Resource Sharing) болып табылады.
Идеясы - CORS орнату арқылы сіз басқа сайтқа веб-сайтыңыздың бөліктерін пайдалануға немесе веб-сайтыңыздың медиа файлдарына тікелей кіруге рұқсат бере аласыз.
CORS тіркелмеген болса, браузерлер әдепкі бойынша мұндай әрекеттерге тыйым салады, атап айтқанда, бір веб-сайтта олар басқа веб-сайттың бөліктерін пайдалана алмайды немесе оған кіре алмайды.
Қауіпсіздік мақсатында бұған рұқсат етілмейді.
Егер сізге осындай әрекеттерді орындау қажет болса, онда сіз CORS-ті бөлінген ресурстарға таңдап тіркей аласыз және басқа веб-сайттар сіздің ресурстарыңызды пайдалана алады.
Amazon S3 сервисін пайдаланудың келесі қызықты нұсқасы ауқымды есептеулер мен аналитиканың бөлігі ретінде деректерді сақтау болып табылады.
Бұл жағдайда объектілі сақтау өте қолайлы, өйткені мұндай есептеуге арналған деректер бір рет жазылады және бірнеше рет оқылады: әдетте бұл деректер өзгермейді.
Бұл қандай деректер? 
Бұл төлем транзакциялары туралы деректер, пайдаланушылардың парақшаларына кіру туралы ақпарат, әртүрлі журналдар және т.б.
Осылайша, бұл деректер Amazon S3 сервисіне бір рет жазылады.
Amazon S3 сервисі шикі деректер көзі ретінде де пайдаланылуы мүмкін.
Әрі қарай, сіз слайдта spot instances іске қосудың мысалын немесе осы есептеулерді орындайтын EMR Cluster-дің қандай да бір түрін көресіз.
Есептеулер аяқталғаннан кейін өзгертілген деректер өңделген пішінде сақталатын келесі S3 bucket-ке түседі.
Содан кейін әртүрлі аналитикалық жүйелерді қосуға болады: Amazon QuickSight сервисі бар, ол бізге деректерімізді визуализациялауға мүмкіндік береді.
Amazon S3 сервисінің келесі қызықты қолданылуы - әртүрлі сақтық көшірмелерді, нормативтік талаптарға сәйкес белгілі бір уақыт ішінде сақтау қажет маңызды деректердің мұрағаттарын немесе ішкі корпоративтік құжаттарыңызды сақтау.
Бұл деректердің көзі тек AWS деңгейіндегі инфрақұрылымыңыз ғана емес, сонымен қатар бұл деректерді жергілікті дата-центрден Amazon S3 сервисіне тікелей тасымалдауға және сақтауға болады.
Amazon S3 сервисінде деректерді сақтау өте сенімді нұсқа екенін есте ұстаймыз, өйткені ол 11 тоғыз сенімділікті қамтамасыз етеді.
Егер қандай да бір себептермен сізге одан да жоғары сенімділік қажет болса, басқа аймақта екінші бакет жасап, бірінші бакетте Cross-Region Replication теңшеген кезде Cross-Region Replication (CRR) функциясы бар.
Осылайша, деректер бірінші бакетке енген кезде, ол бұл деректерді басқа аймақта орналасқан бакетте автоматты түрде қайталайды.
Бұл деректеріңізді сақтау сенімділігін одан әрі арттырады, бірақ бұл жағдайда деректеріңізді сақтауға арналған осы қарапайым инфрақұрылымды қолдау үшін қосымша шығындар қажет.
Сіз көлемдерді ескере отырып, алдын ала есептеуіңіз керек, кем дегенде шамамен қандай көлемде деректерді сақтайсыз, олар қандай мерзімде сақталады және маңызды деректерді сақтауға арналған басқа опция қажет болған жағдайда қанша ақша төлеуге тура келетінін есептеңіз.
Consistency model-ге қатысты бір-екі тармаққа тоқталайық.
Идеясы Amazon S3 сервисіне қатысты өзгерістердің қалай қолданылатынында.
Біз объектілер туралы айтатын болсақ, онда барлық аймақтардағы барлық объектілер strongly consistent болып келеді.
Бұл бар объектілер және жаңа объектілерге енгізілген өзгертулер олар жазылғаннан кейін бірден күшіне енетінін білдіреді.
Қарапайым сөзбен айтқанда, біз PUT операциясын сәтті орындағаннан кейін, яғни S3 бакетіне объект жазамыз, егер осыдан кейін бірден объектіні оқитын болсақ немесе бакеттегі бар объектілердің тізімін сұрайтын GET немесе LIST операциясын орындасақ, онда бұл жақында жазылған объект бірден осы тізімде пайда болады немесе осы объектінің жаңартылған мазмұны қайтарылады.
Осылайша GET, LIST және PUT операциялары үшін read-after-write consistency қамтамасыз етіледі.
Бакет конфигурациялары туралы айтатын болсақ, олар eventually consistent болып келеді, яғни жаңа параметрлер бірден емес, қысқа уақыт кезеңінен кейін қолданылады.
Мысалы: егер біз бакетті жойып, содан кейін бірден бакеттердің тізімін сұрасақ, жойылған бакет осы тізімде пайда болуы мүмкін.
Бірнеше секундтан кейін біз тағы да бар бакеттердің тізімін сұрасақ, онда бұл жағдайда жойылған бакет енді бұл тізімде болмайды.
Amazon S3 сервисінде бакеттермен және объектілермен жұмыс істегенде осындай нюанстар бар.
Сонымен, біз екінші бөлімнің соңына жеттік және Amazon S3 сервисіне қатысты ең негізгі тармақтарды қарастырайық.
Бірінші және ең маңызды нәрсе - бакет атаулары барлық AWS аймақтарында жаһандық болуы керек.
Біз деректерді сақтау үшін белгілі бір аймақты таңдаймыз және барлық деректер осы аймақта сақталады.
Келесі нәрсе - барлық бакеттердің әдепкі бойынша жеке болуы: жалпыға ортақ қолжетімділікті қамтамасыз ету үшін сізге қосымша әрекеттерді орындау қажет.
Қоғамдық немесе AWS аккаунтыңыздағы объектілер болсын, бакетке кіруді қамтамасыз ету үшін сізде әртүрлі опциялар бар.
Бұл IAM policy, Bucket policy, Access control Lists және т.б. болуы мүмкін.
Strongly Consistency үлгісі барлық жаңа және бар объектілер үшін жұмыс істейді, объектілерде жасалған өзгертулер бірден күшіне енеді.
Amazon S3 сервисі ішіндегі бір файлдың максималды өлшемі - 5 терабайт, бұл барлық дерлік сақтау тапсырмалары мен бар файлдар үшін жеткілікті.
Біз, сондай-ақ, Amazon S3 сервисінің 4 танымал пайдалану жағдайын қарастырдық.
Бұл осы use кейстермен ғана шектелмейді: көптеген әртүрлі басқа да use кейстер бар.
Ең бастысы, сіз бұл сервисті архитектураның қай жерлерінде сәтті қолдануға болатыны туралы жалпы түсінікке ие болдыңыз.
Осымен біз AWS бұлтында сақтау тақырыбына арналған дәрістің бірінші бөлімінің соңына келдік.
Сіз Amazon S3 сервисін тереңірек түсіндіңіз деп үміттенемін.
Сондай-ақ, біздің алдағы белсенділіктерімізде Amazon S3 сервисіне арналған Демо және зертханалық жұмыс болады.
Осымен бүгінгі сессиямыз аяқталды.
Назарларыңызға рахмет.
Келесі белсенділіктерімізде кездескенше.

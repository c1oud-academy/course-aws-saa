WEBVTT

00:00:00.000 --> 00:00:04.600
Қайырлы күн, құрметті студенттер!
Сізді келесі дәрісте көргеніме қуаныштымын.

00:00:04.600 --> 00:00:07.400
Бүгінгі дәрісіміздің тақырыбы
- Connecting networks.

00:00:07.400 --> 00:00:14.920
Алдында VPC неден тұратыны және оның қандай
компоненттері бар екендігі туралы айтқан болатынбыз.

00:00:14.920 --> 00:00:23.052
Енді бір деңгейге көтеріліп, AWS бұлтындағы
желілерді, сондай-ақ AWS бұлтындағы

00:00:23.076 --> 00:00:31.000
желіні бұлттан тыс жергілікті желімен
қалай қосуға болатынын қарастырамыз.

00:00:31.000 --> 00:00:38.000
Ендеше, бастайық. Бүгінгі дәрісімізде 
6 тақырыпты қарастырамыз.

00:00:38.000 --> 00:00:43.200
Бірінші тақырып зертханалық жұмысымызға қатысты
және қандай компоненттер қосылатынын көрейік.

00:00:43.200 --> 00:00:46.491
Келесі, екінші және
үшінші бөлімдерде жергілікті

00:00:46.515 --> 00:00:51.000
инфрақұрылымды AWS бұлтына
қалай қосу керектігін қарастырамыз.

00:00:51.000 --> 00:00:56.288
Әрі қарай, төртінші және бесінші
бөлімдерде VPC-лерді AWS

00:00:56.312 --> 00:01:01.600
бұлтында бір-біріне қалай
қосуға болатынын қарастырамыз.

00:01:01.600 --> 00:01:07.400
Ең соңында, VPC-мен біріктірілген
қосымша сервистерді қарастырамыз.

00:01:07.400 --> 00:01:12.288
Дәрісіміздің бірінші бөлімін
бастаймыз және зертханалық

00:01:12.312 --> 00:01:17.200
жұмыстың аясында қандай
міндеттер тұрғанын қарастырамыз.

00:01:17.200 --> 00:01:22.848
Бизнес-кейсімізге сәйкес, кафе жаппай
сатылым жариялады. Егер сатып алушы 10

00:01:22.872 --> 00:01:29.200
немесе одан да көп бірдей зат сатып
алса, онда сыйлық ретінде бір десерт беріледі.

00:01:29.200 --> 00:01:36.000
Бірақ сатып алушылардың процесін бақылау
үшін кейбір жеке ақпаратты сақтау керек.

00:01:36.000 --> 00:01:39.400
Бұл - электрондық пошта мекенжайы 
мен несие картаның нөмірі.

00:01:39.400 --> 00:01:47.073
София және басқа басты кейіпкерлер
орналасқан нақты елде деректерді сақтауға қатысты

00:01:47.097 --> 00:01:54.400
кейбір шектеулерге байланысты кафе бұл
ақпаратты AWS бұлтында сақтай алмайды.

00:01:54.400 --> 00:02:02.388
Сондықтан, пайдаланушы деректерін сақтайтын
 жергілікті дерекқорды құру туралы шешім

00:02:02.412 --> 00:02:10.400
қабылданды, бірақ транзакциялық деректер
мен бүкіл инфрақұрылым AWS бұлтында қалады.

00:02:10.400 --> 00:02:16.482
Бұл деректер қажет болған кезде AWS
бұлтынан жергілікті инфрақұрылымға, атап

00:02:16.506 --> 00:02:23.400
айтқанда бізге қажет дерекқорға тікелей
сұраныс келіп, қажетті деректерді шығарады.

00:02:23.400 --> 00:02:28.400
Тағы VPC-ге қатысты
бір мәселені айта кетейін.

00:02:28.400 --> 00:02:36.400
Бізде Dev ортасы, сондай-ақ Prod ортасы бар екенін
 есте ұстаймыз. Екеуі де бір VPC-де орналасқан.

00:02:36.400 --> 00:02:42.561
София Оливиямен кеңескеннен
кейін, оларды ажырату керек деп шешеді.

00:02:42.585 --> 00:02:49.400
Яғни, Dev ортасы бөлек оқшауланған
VPC-де, ал Prod ортасы басқа VPC-де.

00:02:49.400 --> 00:02:55.888
Бірақ, соған қарамастан, Оливия Софияға
оларды бір-бірімен қосымша байланыстыруға кеңес

00:02:55.912 --> 00:03:02.400
береді, осылайша Dev ортасынан Prod ортасындағы
 ресурстарға қол жеткізе алатын болады.

00:03:02.400 --> 00:03:10.888
Көріп отырғаныңыздай, зертханамыздың аясында
AWS бұлтындағы бірнеше VPC-мен жұмыс істейміз,

00:03:10.912 --> 00:03:19.400
AWS бұлтындағы және жергілікті инфрақұрылымдағы
VPC-лерді қосуға қатысты тапсырманы орындаймыз.

00:03:19.400 --> 00:03:30.400
Дәрісіміздің екінші бөліміне жеттік. Мұнда AWS
Site-to-Site VPN сервисін толығырақ қарастырамыз.

00:03:30.400 --> 00:03:37.388
Бұл сервистің идеясы - VPN арнасын IPSec 
протоколын қолданып, Интернет арқылы

00:03:37.412 --> 00:03:44.400
өткізу және AWS бұлтындағы VPC-ні
бұлтта орналаспаған жергілікті желімен қосу.

00:03:44.400 --> 00:03:50.400
Бұл сервис үшін төлем әрбір қосылым
үшін сағат сайын жүзеге асырылады.

00:03:50.400 --> 00:03:56.400
Бұл сервисте екі routing опциясы қолжетімді.
Бұл - Dynamic routing және Static routing.

00:03:56.400 --> 00:04:01.388
Dynamic routing пайдаланған
кезде құрылғылардың Border Gateway

00:04:01.412 --> 00:04:06.400
Protocol, яғни BGP протоколын
қолдауы міндетті болып табылады.

00:04:06.400 --> 00:04:12.400
Егер бұл протоколға қолдау көрсетілмесе,
екінші опция қалады, бұл - Static routing.

00:04:12.400 --> 00:04:17.388
Dynamic routing пен Static
routing айырмашылығы неде?

00:04:17.412 --> 00:04:22.400
Dynamic Routing қосылым күйін
тексеру үшін жергілікті қолдауға ие.

00:04:22.400 --> 00:04:29.400
Және резервтік арнаға сенімді
қосқышты орната аласыз.

00:04:29.400 --> 00:04:35.400
Static routing-ке жергілікті түрде қолдау
көрсетілмейді, бірақ оны баптауға болады.

00:04:35.400 --> 00:04:43.400
Жергілікті желі AWS
бұлтына қалай қосылады?

00:04:43.400 --> 00:04:52.400
AWS жағында Virtual Private gateway ресурсы және
жергілікті желі жағында Customer gateway жасалады.

00:04:52.400 --> 00:04:59.400
Ол сәйкес жабдыққа бекітілген және олардың
 арасында VPN қосылымы бапталынады.

00:04:59.400 --> 00:05:07.400
Сондай-ақ, бір Virtual Private gateway-ге бірнеше
Customer gateway қосуға болатынын атап өткен жөн.

00:05:07.400 --> 00:05:15.400
Осылайша, on-premise network жағында
жоғары қолжетімділікті қамтамасыз етесіз.

00:05:15.400 --> 00:05:23.400
Осымен бүгінгі дәрісіміздің екінші бөлімін 
аяқтаймыз. Негізгі ойларды қарастырайық.

00:05:23.400 --> 00:05:31.388
Біріншісі, Интернет арқылы VPN қосылымын
жасау арқылы жергілікті желіні AWS бұлт

00:05:31.412 --> 00:05:39.400
жағындағы VPC арқылы қосуға мүмкіндік
беретін AWS Site-to-Site VPN сервисі бар.

00:05:39.400 --> 00:05:43.964
AWS Site-to-Site VPN құрылғыңыз
қолдайтын протоколдарға

00:05:43.988 --> 00:05:49.400
байланысты екі routing опциясын
қолдайды: Static және Dynamic.

00:05:49.400 --> 00:05:57.888
Үшіншісі, on-premise жағында бірнеше
Customer gateway пайдалануға болады және

00:05:57.912 --> 00:06:06.400
осы қосылымдардың барлығын бір
Virtual Private gateway-ге бағыттауға болады.

00:06:06.400 --> 00:06:19.400
Дәрісіміздің үшінші бөліміне жеттік, AWS Direct
Connect сервисін қарастырамыз. Қысқаша AWS DX.

00:06:19.400 --> 00:06:23.388
Бұл сервистің идеясы да сондай,
ол AWS бұлтымен жергілікті

00:06:23.412 --> 00:06:27.400
желіні қосуға көмектеседі,
бірақ ол мұны басқаша жасайды.

00:06:27.400 --> 00:06:37.400
AWS Site-to-Site VPN сервисі туралы айтқан кезде,
біз VPN арнасын интернет қосылымы арқылы жібердік.

00:06:37.400 --> 00:06:46.400
Ал егер интернет байланысыңыз сенімсіз немесе әлсіз
 болса, VPN осы шектеулер аясында жұмыс істейді.

00:06:46.400 --> 00:06:53.400
Интернет болмаса, бұлтқа
дейінгі VPN қосылымы жоғалады.

00:06:53.400 --> 00:06:59.400
Direct Connect туралы айтатын болсақ,
мұнда мүлдем басқа байланыс болады.

00:06:59.400 --> 00:07:10.400
Біз жаһандық AWS желісі және бүкіл әлемге
таралған AWS серіктестері бар екенін білеміз.

00:07:10.400 --> 00:07:19.826
Және жаһандық AWS инфрақұрылымымен
Direct Connect орнатқанда, олар үлкен мүмкіндіктер

00:07:19.850 --> 00:07:30.400
беретін Интернетке қатынаусыз өздерінің дата-
центрлерін тікелей қосылыммен қамтамасыз етеді.

00:07:30.400 --> 00:07:37.900
Яғни, бұл қосылым жаһандық AWS
инфрақұрылымы мен серіктестің дата-центрлерінде

00:07:37.924 --> 00:07:46.400
орналасқан ресурстар бір жергілікті желідегідей
байланыса алатындығына сәйкес келеді.

00:07:46.400 --> 00:07:52.388
Және бұл сыйымдылығы жоғары
арна жасауға мүмкіндік береді.

00:07:52.412 --> 00:07:58.400
Екі нұсқа ұсынылады. Бұл секундына 
1 Гбит және секундына 10 Гбит.

00:07:58.400 --> 00:08:06.400
Сондай-ақ, Direct Connect арқылы қосылғанда
Интернет қажет емес, яғни Интернетке тәуелсізбіз.

00:08:06.400 --> 00:08:11.400
Интернет өшіп қалса, AWS
бұлтымен байланысыңыз сақталады.

00:08:11.400 --> 00:08:18.311
Осылайша, әртүрлі пайдалану
жағдайлары үшін Direct Connect-ті

00:08:18.335 --> 00:08:26.400
пайдалану AWS Site-to-Site VPN-ге
қарағанда қолайлырақ болуы мүмкін.

00:08:26.400 --> 00:08:31.618
Тағы бір маңызды жайт, Direct
Connect сервисі жеке төленеді

00:08:31.642 --> 00:08:37.400
және AWS Site-to-Site VPN-нен
бірнеше есе қымбат болуы мүмкін.

00:08:37.400 --> 00:08:42.888
Сондықтан барлық артықшылықтары
мен кемшіліктерін талдағаннан кейін

00:08:42.912 --> 00:08:48.400
ғана AWS Direct Connect сервисіне
ауысу туралы шешім қабылдау қажет.

00:08:48.400 --> 00:08:55.442
Қандай танымал қолдану жағдайлары бар?
Біріншісі - гибридті инфрақұрылымдар, яғни сіздің

00:08:55.466 --> 00:09:03.400
инфрақұрылымыңыздың бір бөлігі жергілікті жерде,
ал екінші бөлігі AWS бұлтында орналасқан кезде.

00:09:03.400 --> 00:09:08.150
Бұлтқа немесе жергілікті
дата-центріне қайта көшуді

00:09:08.174 --> 00:09:13.400
жоспарламайсыз, осы режимде
жұмысыңызды жалғастырасыз.

00:09:13.400 --> 00:09:19.429
Бұл жағдайда бұлт пен жергілікті инфрақұрылым
арасында тасымалданатын ақпараттың

00:09:19.453 --> 00:09:26.400
айтарлықтай үлкен көлемі болуы мүмкін, сондықтан
 Direct Connect жақсы шешім болуы мүмкін.

00:09:26.400 --> 00:09:34.458
Басқа опция ақпараттың үлкен көлемі
тасымалданған кезде, ал қалған екі опция

00:09:34.482 --> 00:09:43.400
бизнес тапсырмаңызға байланысты тұрақты
байланысты қамтамасыз ету қажет болғанда.

00:09:43.400 --> 00:09:48.681
Сондай-ақ, кейбір құпия жеке
деректерді Интернет арқылы

00:09:48.705 --> 00:09:53.888
тасымалдауға кедергі
келтірмейтін кейбір нормативтік

00:09:53.912 --> 00:09:59.144
талаптар бар. Бұл жағдайда 
Direct Connect арқылы біз

00:09:59.168 --> 00:10:04.400
желіге кірмейміз және осы
реттеу талаптарын бұзбаймыз.

00:10:04.400 --> 00:10:09.388
Осы диаграмманы мысал ретінде
пайдалана отырып, енді AWS Direct Connect

00:10:09.412 --> 00:10:14.400
сервисі арқылы жергілікті инфрақұрылымды
AWS бұлтына қосуды қарастырайық.

00:10:14.400 --> 00:10:22.871
Ортасында DX endpoint ресурсы орналасқан
кейбір DX location көруге болады. Бұл DX endpoint

00:10:22.895 --> 00:10:31.366
бір жағынан жаһандық AWS инфрақұрылымына
тікелей қосылады, екінші жағынан оған жергілікті

00:10:31.390 --> 00:10:40.142
дата-центрден DX endpoint-қа дейін жеке және
жалпыға ортақ екі арна арқылы қосылу керек.

00:10:40.166 --> 00:10:49.400
Оны жасағаннан кейін DX endpoint арқылы кез келген
AWS аймағындағы кез келген VPC-ге қосыла аласыз.

00:10:49.400 --> 00:10:55.388
Неліктен? DX endpoint жаһандық AWS
инфрақұрылымына тікелей қосылатындықтан

00:10:55.412 --> 00:11:01.400
және барлық VPC-лер сонда
орналасқандықтан, бұл мүмкіндік пайда болады.

00:11:01.400 --> 00:11:07.388
Сондай-ақ, DX endpoint арқылы
Интернетке кіру кезінде осы кеңейтілген арна

00:11:07.412 --> 00:11:13.400
арқылы Amazon S3 сияқты жалпыға ортақ
AWS сервистеріне қол жеткізуге болады.

00:11:13.400 --> 00:11:18.790
Неліктен бұл опция қызықты
 болуы мүмкін? Бұл дата-центрден

00:11:18.814 --> 00:11:24.961
Интернетке қосылу арнасының
шағын болуына байланысты.

00:11:24.985 --> 00:11:31.278
Яғни, егер сіздің арнаңыз кішкентай болса,
онда DX endpoint арқылы бұл арнаны

00:11:31.302 --> 00:11:37.400
кеңейтіп, көбірек ақпаратты
жоғары жылдамдықпен жібере аласыз.

00:11:37.400 --> 00:11:42.753
Енді жергілікті дата-центр мен
AWS бұлты арасындағы қолжетімділігі

00:11:42.777 --> 00:11:47.882
жоғары қосылымды жүзеге асырудың
келесі мысалын қарастырайық.

00:11:47.906 --> 00:11:53.011
Бұл жағдайда AWS серіктесі
арқылы AWS Direct Connect сервисін

00:11:53.035 --> 00:11:58.140
пайдалана отырып, жергілікті
дата-центрін AWS бұлтына негізгі

00:11:58.164 --> 00:12:03.539
арна ретінде қостық және сақтық
көшірме ретінде AWS Site-to-Site

00:12:03.563 --> 00:12:08.937
VPN сервисін қолдандық және VPN
қосылымын интернет арқылы қостық.

00:12:08.961 --> 00:12:13.872
Мұнда Direct Connect жағдайында
екі арна опциясы бар екенін

00:12:13.896 --> 00:12:19.400
еске салғым келеді. Бұл секундына
 1 Гбит және секундына 10 Гбит.

00:12:19.400 --> 00:12:25.916
VPN арқылы қосылым десек,
ол максималды 1,25 Гбит/с дейін

00:12:25.940 --> 00:12:33.038
жетуі мүмкін, сіздің интернет
қосылымыңызға байланысты.

00:12:33.062 --> 00:12:40.219
Егер арнаның өзі соншалықты кең
болмаса, онда сіз оны осы арнадан

00:12:40.243 --> 00:12:47.400
жылдам жібере алмайсыз.
Бұл VPN қосылымының негізгі шектеуі.

00:12:47.400 --> 00:12:52.777
Басқа жағдайда, сіз халықаралық
компания екеніңізді елестетіп көрейік, сізде

00:12:52.801 --> 00:12:58.178
қосымшаның бір бөлігі орнатылатын
бірнеше дата-центр бар. Қолданбаңыздың басқа

00:12:58.202 --> 00:13:03.789
бөлігі AWS бұлтында орналасқан және
қолданбаңыздың дұрыс жұмыс істеуі үшін бұлт

00:13:03.813 --> 00:13:09.400
пен жергілікті дата-центр арасында тұрақты
байланыстарды қамтамасыз ету қажет.

00:13:09.400 --> 00:13:14.252
Бұл жағдайда әрбір дата-центріне
AWS Direct Connect арқылы AWS

00:13:14.276 --> 00:13:19.048
бұлтына қосылымды баптау ұсынылады.
Осылайша, дата-центрдің

00:13:19.072 --> 00:13:23.724
бірі істен шықса, сізде
жеткілікті кең арна, AWS бұлтына

00:13:23.748 --> 00:13:28.400
тікелей қосылым болады және
қолданба жұмысын жалғастырады.

00:13:28.400 --> 00:13:36.101
Бүгінгі дәрісіміздің үшінші бөлімін де аяқтадық.
Ең маңызды сәттерді еске түсірейік. Біріншісі,

00:13:36.125 --> 00:13:44.400
AWS Direct Connect жаһандық AWS инфрақұрылымына
тікелей қосылу үшін ашық стандарттарды пайдаланады.

00:13:44.400 --> 00:13:49.169
AWS Direct Connect арқылы
қосылу кезінде сізде кез келген

00:13:49.193 --> 00:13:54.388
AWS аймағында орналасқан кез
келген VPC, кез келген қоғамдық

00:13:54.412 --> 00:13:59.095
AWS сервисіне тікелей
қол жеткізу мүмкіндігі бар.

00:13:59.119 --> 00:14:04.400
Себебі барлық AWS ресурстары бір
жаһандық инфрақұрылымда орналасқан.

00:14:04.400 --> 00:14:12.604
Сондықтан, оған бір рет қосылсаңыз, барлық
ресурстарға қол жеткізе аласыз. Сондай-ақ, жергілікті

00:14:12.628 --> 00:14:20.400
дата-центрден AWS бұлтына жоғары қолжетімді
қосылымды орнатудың екі мысалын қарастырдық.

00:14:20.400 --> 00:14:23.893
Бірінші жағдайда Direct Connect
және VPN қосылымы сақтық

00:14:23.917 --> 00:14:27.984
көшірме ретінде пайдаланылады,
ал екінші жағдайда дата-центрдің

00:14:28.008 --> 00:14:31.463
әрқайсысы үшін Direct
Connect пайдалану ұсынылады.

00:14:31.487 --> 00:14:35.400
Бұл қолданбаларыңыздың жоғары
қолжетімділігін қамтамасыз етеді.

00:14:35.400 --> 00:14:40.291
Бірақ бұл жерде Direct
Connect сервисі AWS Site-to-Site

00:14:40.315 --> 00:14:45.115
VPN-ге қарағанда бірнеше
есе қымбатқа түсетінін еске

00:14:45.139 --> 00:14:50.258
салғым келеді, сондықтан
сіз талдап, егер осы сервиске

00:14:50.282 --> 00:14:55.400
қанағаттансаңыз, оны қосылу
үшін пайдалануыңызға болады.

00:14:55.400 --> 00:15:01.477
Біз дәрісіміздің төртінші бөліміне жеттік
және мұнда VPC Peering функциясын

00:15:01.501 --> 00:15:08.400
пайдаланып бұлттағы VPC және AWS-ті
бір-біріне қосуды егжей-тегжейлі қарастырамыз.

00:15:08.400 --> 00:15:18.434
Бір жағдайды елестетіп көрейік, сізде қолданба
бар, ол дамып жатыр және сіздің барлық орталарыңыз

00:15:18.458 --> 00:15:28.388
бір VPC ішінде болған. Бірақ қолданбаңыз дамыған
сайын көбірек ресурстар жасалады, көбірек AWS

00:15:28.412 --> 00:15:38.760
шектеулері болады, сондықтан әртүрлі жұмыс
жүктемелерін оқшаулау және басқару тұрғысынан

00:15:38.784 --> 00:15:48.400
логикалық шешім ретінде сіз әртүрлі VPC жасайсыз
және әр ортаға арнайы VPC байланыстырасыз.

00:15:48.400 --> 00:15:55.400
Яғни, бір VPC-де Dev ортасы, басқа VPC-де сынақ
ортасы, ал соңғысында негізгі Production орта болады.

00:15:55.400 --> 00:16:02.468
Бірақ әртүрлі факторларға
байланысты белгілі бір тапсырмаларды

00:16:02.492 --> 00:16:08.400
орындау үшін бір ортадан
екіншісіне қосылу керек.

00:16:08.400 --> 00:16:13.388
Және бұл жағдайда VPC Peering
функциясы бізге көмекке келеді,

00:16:13.412 --> 00:16:18.400
бұл бір VPC-ді басқа VPC-ге
тікелей қосуға мүмкіндік береді.

00:16:18.400 --> 00:16:23.400
Бұл жағдайда VPN қосылымдары
жасалмайды, gateway жасаудың қажеті жоқ.

00:16:23.400 --> 00:16:31.591
Неліктен? Өйткені VPC екеуі де жаһандық
AWS инфрақұрылымында орналасқан және сіз бір

00:16:31.615 --> 00:16:40.400
корпоративтік желідегі екі жергілікті желіні
жергілікті желі арқылы бір-біріне қосасыз.

00:16:40.400 --> 00:16:47.388
Және бұл жағдайда Интернетке қосылым жоқ, сіз
сол жаһандық желіде қаласыз, және қосылымның

00:16:47.412 --> 00:16:54.400
өзі де үлкенірек арнаға ие, сіз көбірек деректерді
жоғары жылдамдықпен тасымалдай аласыз.

00:16:54.400 --> 00:17:01.571
Осылайша, осы қосылым арқылы сіз
жеке IP мекенжайларының кеңістігінде

00:17:01.595 --> 00:17:09.400
қаласыз және жалпыға ортақ IP
мекенжайларымен жұмыс істеудің қажеті жоқ.

00:17:09.400 --> 00:17:18.400
VPC Peering арқылы екі VPC қалай қосылғанын
көру үшін осы диаграмманың мысалын қарастырайық.

00:17:18.400 --> 00:17:26.929
Ең бірінші - Peering Connection жасау, қандай да бір
ресурс. Ол қалай құрылады? AWS Management Console

00:17:26.953 --> 00:17:35.400
жағында Peering connection жасайсыз және Peering
қызметіне қосылу сұрауын жасайтын VPC көрсетесіз.

00:17:35.400 --> 00:17:43.532
Екінші VPC ретінде қосқыңыз келетін VPC көрсетіңіз.
VPC Peering көмегімен бір аймақта ғана емес, сонымен

00:17:43.556 --> 00:17:51.400
қатар әртүрлі аймақтарда орналасқан әртүрлі VPC-лерді
бір-біріне қосуға болатынын атап өткім келеді.

00:17:51.400 --> 00:17:55.957
Сонымен қатар, VPC-ді бір-біріне
тек бір AWS аккаунтында ғана емес,

00:17:55.981 --> 00:18:00.400
сонымен қатар басқа AWS
аккаунтындағы VPC-ге де қосуға болады.

00:18:00.400 --> 00:18:09.400
Ең маңыздысы, Peering connection жасалғанда,
сәйкес VPC-ге қосылуға шақыру жіберіледі.

00:18:09.400 --> 00:18:16.400
Егер ол бір AWS аккаунтында болса, шақыруды
сол AWS Management Console-де көресіз.

00:18:16.400 --> 00:18:22.400
Оны қабылдағаннан кейін, Peering connection
жасалады және екі VPC бір-біріне қосылады.

00:18:22.400 --> 00:18:28.582
Екінші VPC басқа AWS аккаунтында
орналасса, сізде осы аккаунтқа кіру рұқсаты болуы

00:18:28.606 --> 00:18:35.400
керек немесе осы AWS аккаунтының иесі шақыруды
 қабылдайтыны туралы келісім болуы керек.

00:18:35.400 --> 00:18:46.400
Мұны істегеннен кейін, бірнеше қосымша
қадамдар қалады. Бұл - Route tables.

00:18:46.400 --> 00:18:58.400
Бір жағдайды елестетіп көрейік, бізде VPC A бар
және оның 10.1.0.0 CIDR блогы бар және өлшемі 16.

00:18:58.400 --> 00:19:09.400
Тағы бір жағдай, бізде VPC B бар және оның CIDR
блогы 10.2.0.0 және өлшемі 16. Бұл 65000 мекенжай.

00:19:09.400 --> 00:19:15.746
VPC A жүйесінен VPC B
ресурстарын көре алу үшін VPC A-мен

00:19:15.770 --> 00:19:21.888
байланысты Route Table-де
қосымша routing rule тіркеу

00:19:21.912 --> 00:19:28.144
керек, мұнда Destination
ретінде VPC B CIDR блогын және

00:19:28.168 --> 00:19:34.400
Target ретінде Peering
Connection Resource көрсетесіз.

00:19:34.400 --> 00:19:42.400
Яғни, осы Peering Connection Resource арқылы
VPC B CIDR блогындағы ресурстарға өтесіз.

00:19:42.400 --> 00:19:47.400
Тура солай, бірақ керісінше,
VPC B жағынан жасайсыз.

00:19:47.400 --> 00:19:56.888
Онда Route Table үшін қосымша Routing
rule тіркейсіз, мұнда Destination ретінде VPC A

00:19:56.912 --> 00:20:06.400
CIDR блогынжәне Target ретінде сол Peering
Connection Resource, яғни PCX-1 көрсетесіз.

00:20:06.400 --> 00:20:12.400
Бірнеше VPC бір-біріне қосқанда,
есте сақтау керек кейбір шектеулер бар.

00:20:12.400 --> 00:20:18.400
Біз жеке IP мекенжайлары
кеңістігінде жұмыс істейміз.

00:20:18.400 --> 00:20:28.400
Екіншісі, біз әртүрлі аймақтарда және әртүрлі AWS
аккаунтарында орналасқан VPC-ларды қоса аламыз.

00:20:28.400 --> 00:20:35.400
Тағы бір өте маңызды мәселе - VPC CIDR
блоктары бір-біріменқиылыспауы керек.

00:20:35.400 --> 00:20:42.400
Егер олар қиылысса, олардың арасында
VPC Peering теңшеу мүмкін болмайды.

00:20:42.400 --> 00:20:47.400
Бірнеше VPC арасында тек
бір Peering Resource жасай аласыз.

00:20:47.400 --> 00:20:51.181
Яғни, біріншімен ақаулық туындаған
жағдайда трафик сақтық көшірме

00:20:51.205 --> 00:20:55.400
арқылы өтетіндей етіп, сақтық Peering
Resource жасау мүмкін болмайды.

00:20:55.400 --> 00:21:03.993
Шындығында, бұл қажет емес, өйткені Peering
Connection Resource AWS жаһандық инфрақұрылымының

00:21:04.017 --> 00:21:13.400
жағында жасалған, оның ішінде жоғары қолжетімділік
бар, оны ештеңемен қосымша өтеудің қажеті жоқ.

00:21:13.400 --> 00:21:20.388
Есте сақтау керек соңғы мәселе
- VPC Peering арқылы бірнеше

00:21:20.412 --> 00:21:27.400
VPC қосу кезінде ешқандай
транзитивтік эффект жасалмайды.

00:21:27.400 --> 00:21:32.400
Яғни, сізде VPC A, VPC B
және VPC C бар деп елестетіңіз.

00:21:32.400 --> 00:21:37.400
Әрі қарай, VPC A және VPC B арасында
VPC Peering жасағаныңызды елестетіңіз.

00:21:37.400 --> 00:21:43.400
Содан кейін, VPC B және VPC C арасында 
VPC Peering қосылымын жасадық.

00:21:43.400 --> 00:21:50.396
Бұл VPC A-дан VPC C-де орналасқан
ресурстарға қол жеткізе алатыныңызды

00:21:50.420 --> 00:21:56.400
білдірмейді. Яғни, бұл жерде 
транзитивті эффекті болмайды.

00:21:56.400 --> 00:22:05.388
VPC A-дан VPC C-дағы ресурстарға, және керісінше,
 қол жеткізу қажет болса, бұрын тізімдеген

00:22:05.412 --> 00:22:14.400
барлық шектеулерді ескере отырып, осы екі VPC 
арасында жаңа Peering Connection жасау керек.

00:22:14.400 --> 00:22:21.888
Бірнеше VPC-мен жұмыс істегенде,
екі VPC арасында қажеттілік

00:22:21.912 --> 00:22:29.400
бар жерлерде ғана қосылым
жасау керек екенін есте ұстаған жөн.

00:22:29.400 --> 00:22:39.456
Барлық VPC-лерді бір-біріне
қосуға ұмтылсақ, Peering connection

00:22:39.480 --> 00:22:48.400
саны көп болып кетеді және
оны басқару қиынға соғады.

00:22:48.400 --> 00:22:57.400
Тағы бір мәселе, біз архитектураны оңай
масштабталатындай етіп құруымыз керек.

00:22:57.400 --> 00:23:02.429
VPC саны өсіп келе жатса және
соған қарамастан оларды біріктіру

00:23:02.453 --> 00:23:07.400
қажет болған жағдайда, басқа
арнайы жасалған сервистер бар.

00:23:07.400 --> 00:23:15.400
Олар туралы келесі бөлімдерде айтатын 
боламыз. Енді бір мысалды қарастырайық.

00:23:15.400 --> 00:23:23.400
Біз бірнеше аймақтарда жұмыс істегенде, біздің
негізгі инфрақұрылымымыз А аймағында орналасқан.

00:23:23.400 --> 00:23:28.400
Әрі қарай, инфрақұрылымның бір бөлігі бар,
В аймағында орналасқан DR деп елестетейік.

00:23:28.400 --> 00:23:38.400
Ал негізгі аймақта бізде бірнеше түрлі VPC бар.
VPC-лердің бірінде бізде Shared resources бар.

00:23:38.400 --> 00:23:44.420
Бұл кез келген нәрсе болуы мүмкін, қолданбалы
модуль немесе ол, мысалы, корпоративтік желідегі

00:23:44.444 --> 00:23:50.400
барлық пайдаланушылар тіркелгілері үшін
ақпаратты сақтайтын Active Directory болуы мүмкін.

00:23:50.400 --> 00:24:01.400
Және бұл жағдайда, бұл көптеген VPC қосылуы
қажет VPC. Бұл диаграммада мысалды көресіз.

00:24:01.400 --> 00:24:07.078
Internal application-ге қызмет
көрсететін VPC-леріміздің

00:24:07.102 --> 00:24:13.400
VPC Peering арқылы ортақ
VPC-ге тікелей қосылғанын көреміз.

00:24:13.400 --> 00:24:20.400
Бұл VPC-ге қосылудың қажеті
жоқ жағдайлар үшін ол бапталмаған.

00:24:20.400 --> 00:24:32.400
VPN қосылымы жергілікті дата-центрден shared
VPC-ге VPN веб-сайты арқылы бапталғанын көресіз.

00:24:32.400 --> 00:24:40.400
Осымен дәрісіміздің төртінші бөлімін аяқтадық.
Тоқтап, ең маңызды сәттерді еске түсірейік.

00:24:40.400 --> 00:24:48.400
VPC Peering – бұл екі бөлек VPC бір-біріне тікелей
 қосуға мүмкіндік беретін ресурс, функционал.

00:24:48.400 --> 00:24:55.400
Бұл VPC әртүрлі аймақтарда және әртүрлі
AWS аккаунтарында орналасуы мүмкін.

00:24:55.400 --> 00:25:00.058
VPC Peering құру кезінде
сұрауды жіберетін VPC Peering

00:25:00.082 --> 00:25:04.388
Connection жасайды және
осы шақыруды қабылдайтын

00:25:04.412 --> 00:25:08.534
VPC екінші бөлігі осы
шақыруды қабылдауы керек,

00:25:08.558 --> 00:25:13.400
содан кейін Peering Connection
ресурсы іске қосылады.

00:25:13.400 --> 00:25:17.888
Әрі қарай, екі VPC арасындағы
ресурстар ақпарат алмасуы үшін

00:25:17.912 --> 00:25:22.400
route table және мүмкін security
топтарын баптауымыз керек.

00:25:22.400 --> 00:25:27.400
Peering Connection жасау
кезінде белгілі шектеулер бар.

00:25:27.400 --> 00:25:34.080
Біз жеке IP мекенжайлары кеңістігінде жұмыс
істейміз, яғни жалпыға ортақ IP мекенжайлары

00:25:34.104 --> 00:25:41.400
пайдаланылмайды, өйткені біз жаһандық AWS
инфрақұрылымында қаламыз және Интернетке кірмейміз.

00:25:41.400 --> 00:25:49.400
Тағы бір мәселе, бірнеше VPC арасында қосылымды жасау
кезінде CIDR блоктары бір-бірімен қиылыспауы керек.

00:25:49.400 --> 00:25:52.400
Егер олар қиылысса, онда Peering
connection баптау мүмкін емес.

00:25:52.400 --> 00:25:59.059
Сондықтан, бұл туралы алдын ала
ойлану керек және ұйым ішінде кез келген

00:25:59.083 --> 00:26:06.400
VPC жасағанда, оларды CIDR блоктары
бастапқыда қиылыспайтындай етіп жасаңыз.

00:26:06.400 --> 00:26:11.400
Олар болашақта байланыспаса да,
біз мұны алдын ала біле алмаймыз.

00:26:11.400 --> 00:26:20.400
VPC-ді барлық ресурстарымен бірге басқа VPC-ге
ауыстырғаннан гөрі басында ескеру әлдеқайда арзан.

00:26:20.400 --> 00:26:23.400
Бұл компания үшін айтарлықтай
уақыт пен шығындарды талап етеді.

00:26:26.400 --> 00:26:31.888
Екі VPC арасында бірнеше Peering
connection баптау мүмкін емес, бірақ бұл тіпті

00:26:31.912 --> 00:26:37.400
қажет емес, өйткені Жоғары қолжетімділік
Peering connection ішінде бұрыннан бар.

00:26:37.400 --> 00:26:44.400
Емтиханда сұрақ түрінде жиі келетін
соңғы мәселе - транзитивті эффектісі.

00:26:44.400 --> 00:26:48.888
Егер біз VPC A-ді VPC B-мен, содан
кейін VPC B-ді VPC C-мен қоссақ,

00:26:48.912 --> 00:26:53.400
онда VPC A және VPC C арасында
ешқандай байланыс пайда болмайды.

00:26:53.400 --> 00:27:00.400
Егер оларды бір-біріне қосу қажет болса, осы екі
VPC арасында нақты Peering Connection жасау керек.

00:27:03.400 --> 00:27:11.400
Біз дәрісіміздің бесінші бөліміне жеттік, AWS Transit
Gateway сервисіне туралы толығырақ тоқталамыз.

00:27:11.400 --> 00:27:18.400
Бізде бірнеше VPC бар жағдайды
елестетіп көрейік және біз әрбір VPC үшін

00:27:18.424 --> 00:27:27.400
инфрақұрылымымыздағы кез келген басқа VPC-ге
 қосылу мүмкіндігін қамтамасыз етуіміз керек.

00:27:27.400 --> 00:27:36.291
VPC Peering проблемасы мынада: VPC саны
артқан сайын және барлық VPC арасында толық

00:27:36.315 --> 00:27:46.400
қосылымды қамтамасыз ету қажеттілігімен
VPC Peering саны өте тез өседі. Бірге санап көрейік.

00:27:46.400 --> 00:27:50.400
Бізде екі VPC бар және оларды
біріктіру керек деп елестетіп көрейік.

00:27:50.400 --> 00:27:55.386
Бұл жағдайда біз бір Peering 
connection жасаймыз. Әрі қарай, егер VPC

00:27:55.410 --> 00:28:00.983
санын біреуге көбейтсек және ол үшке
тең болса, бұл жағдайда үш VPC Peering

00:28:01.007 --> 00:28:06.729
connection жасау қажет, яғни бірінші
мен екінші, екінші және үшінші, сондай-ақ

00:28:06.753 --> 00:28:12.400
үшінші мен бірінші арасында, өйткені
транзитивтілікке қолдау көрсетілмейді.

00:28:12.400 --> 00:28:18.888
Егер біз төрт VPC туралы айтатын
болсақ, онда бұл жағдайда барлық

00:28:18.912 --> 00:28:25.400
VPC-лерді бір-біріне қосу үшін 6
Peering connection қажет болады.

00:28:25.400 --> 00:28:39.400
Егер бес VPC болса, онда бұл жағдайда
бізге 15 Peering connection қажет болады.

00:28:39.400 --> 00:28:44.400
Сіз VPC Peering қажетті саны қаншалықты
 жылдам өсіп жатқанын көресіз.

00:28:44.400 --> 00:29:01.400
Бұл нақты істі басқаруды жеңілдету үшін арнайы
шешім әзірленді. Бұл - AWS Transit Gateway сервисі.

00:29:01.400 --> 00:29:08.487
Идея мынада: VPC немесе жергілікті
дата-центрден VPN қосылымы

00:29:08.511 --> 00:29:14.888
немесе Direct Connect Gateway
түрінде қосылым болсын,

00:29:14.912 --> 00:29:21.644
содан кейін AWS Transit
Gateway желісіне қосылған кезде,

00:29:21.668 --> 00:29:28.400
барлық бар қосылымдар жаңа
қосылымдарға қолжетімді болады.

00:29:28.400 --> 00:29:38.438
Мысалда алты түрлі қосылымды көресіз және
бізге 15-тен астам Peering connection жасаудың

00:29:38.462 --> 00:29:48.400
қажеті болмады, бірақ AWS Transit Gateway-ге
әрбір VPC үшін бір қосылым жасау жеткілікті.

00:29:48.400 --> 00:30:00.400
Осылайша, әрбір VPC осы Transit gateway-дегі
кез келген басқа қосылымдарға қосыла алды.

00:30:00.400 --> 00:30:03.400
Енді бұл сервистің не екендігі
туралы толығырақ сөйлесейік.

00:30:03.400 --> 00:30:17.400
AWS Transit Gateway — көптеген желілік
қосылымдарды біріктіруді жеңілдететін желілік сервис.

00:30:17.400 --> 00:30:23.388
Ол орталық хаб ретінде жұмыс
істейді және оған қосылатын барлық

00:30:23.412 --> 00:30:29.400
қосылымдар барлық басқа қосылған
ресурстарға қолжеткізе алады.

00:30:29.400 --> 00:30:40.400
Бір AWS Transit Gateway-ге 5000-ға дейін 
әртүрлі қосылымдарды қосуға болады.

00:30:40.400 --> 00:30:47.388
Transit Gateway үшін, сондай-ақ AWS
Site-to-Site VPN сервисі үшін белгілі

00:30:47.412 --> 00:30:54.400
бір шектеулер, кемшіліктер мен
артықшылықтар бар екенін атап өткім келеді.

00:30:54.400 --> 00:30:56.400
Олар, сондай-ақ, бағасы
бойынша ерекшеленеді.

00:30:56.400 --> 00:31:03.377
Сондықтан, сіздің бизнес-кейсіңізге
байланысты, сіз осы тармақтардың барлығын, атап

00:31:03.401 --> 00:31:11.400
айтқанда, архитектураға қатысты аспектілерді,
сондай-ақ, төлем мәселелерін ескеруіңіз керек.

00:31:11.400 --> 00:31:15.988
Transit Gateway сіз үшін тиімді
шешім емес екені белгілі болуы мүмкін,

00:31:16.012 --> 00:31:20.400
ондай жағдайда VPC Peering
Connection сервисінде қалуыңыз керек.

00:31:20.400 --> 00:31:25.292
Немесе керісінше жағдайда,
VPC Peering connection сізге

00:31:25.316 --> 00:31:30.933
сәйкес келмейді, өйткені
қосылымдар саны өсіп келеді және бұл

00:31:30.957 --> 00:31:36.899
тиімсіз және Transit Gateway осы
қосылымдардың барлығын басқаруды

00:31:36.923 --> 00:31:42.400
жеңілдетіп қана қоймай, сонымен
қатар үнемді болуы мүмкін.

00:31:42.400 --> 00:31:50.400
AWS Transit Gateway қалай бапталынатынын
жақсырақ түсіну үшін келесі мысалды қарастырайық.

00:31:50.400 --> 00:31:53.400
Бізде келесі CIDR
блоктары бар 3 VPC бар.

00:31:53.400 --> 00:32:01.400
Олардың барлығын Peering connection қолданбай,
 Transit gateway арқылы қосуымыз керек.

00:32:01.400 --> 00:32:05.400
Бірінші кезекте AWS Transit
Gateway ресурсын жасау керек.

00:32:05.400 --> 00:32:12.400
Әрі қарай, әрбір VPC жағында ENI,
яғни Elastic Network Interface баптау керек.

00:32:12.400 --> 00:32:17.400
Осы ресурс арқылы VPC-ге
қосылу жүзеге асырылады.

00:32:17.400 --> 00:32:24.888
Біз оны route table-ге қосамыз, яғни
әрбір VPC бапталған әдепкі route table-ге ие,

00:32:24.912 --> 00:32:32.400
ол белгілі бір VPC ішіндегі барлық ресурстар
арасындағы трафикке мүмкіндік береді.

00:32:32.400 --> 00:32:37.400
Енді Route Table әрқайсысына
өзгертулер енгізуіміз керек.

00:32:37.400 --> 00:32:43.368
Үшінші VPC мысалында, Destination
ретінде барлық үш VPC CIDR блоктарын

00:32:43.392 --> 00:32:50.400
қамтитынCIDRблогын және Target ретінде
Transit gateway көрсеткенімізді көреміз.

00:32:50.400 --> 00:32:58.400
Келесі қадам Transit gateway жағында
route table баптау болып табылады.

00:32:58.400 --> 00:33:05.337
Және бұл жерде әрбір VPC үшін
Destination ретінде сәйкес VPC-дің

00:33:05.361 --> 00:33:13.400
Target Elastic Network Interface
бар route көрсететінімізді көрсетеміз.

00:33:13.400 --> 00:33:20.388
Содан кейін трафик Transit Gateway-ге жеткенде,
 Transit Gateway Route Table-дегі ережеге

00:33:20.412 --> 00:33:27.400
негізделген трафик қайда бағытталғанын
және қандай Target пайдалану керектігін қарайды.

00:33:27.400 --> 00:33:35.176
VPC 3-тен бірінші VPC CIDR блогындағы
ресурстарға қол жеткізіп жатырмыз деп

00:33:35.200 --> 00:33:42.975
елестетіп көрейік, онда ол IP мекенжайын
қарайды және үшінші VPC-дің жағында

00:33:42.999 --> 00:33:51.188
route көреді, ол Target ретінде Transit
Gateway қолданады және осы CIDR блогына

00:33:51.212 --> 00:33:59.400
қатынайды дегенді білдіреді. Осыдан кейін 
трафик Transit Gateway жағына өтеді.

00:33:59.400 --> 00:34:04.888
Transit Gateway сонымен қатар
өзінің Route Table қарайды және біз

00:34:04.912 --> 00:34:10.400
қатынасатын IP мекенжайы
бірінші VPC-ге тиесілі екенін көреді.

00:34:10.400 --> 00:34:16.777
Ал трафикті бірінші VPC-ге
бағыттау үшін біз сәйкес Elastic Network

00:34:16.801 --> 00:34:22.888
Interface пайдалануымыз керек
және сәйкесінше бұл трафикті осы

00:34:22.912 --> 00:34:28.748
ресурсқа бағыттауымыз керек.
Осыдан кейін бұл трафикті VPC 1

00:34:28.772 --> 00:34:35.400
жағында көруге болады, яғни
қосылым іс жүзінде қамтамасыз етіледі.

00:34:35.400 --> 00:34:42.400
Енді келесі жағдайды қарастырайық. Бізде 
жергілікті дата-центрден VPN connection бар.

00:34:42.400 --> 00:34:51.198
Бірінші нұсқа - VPC бір-бірімен
қиылыспайтындай әрбір VPC-ден жергілікті

00:34:51.222 --> 00:34:59.400
дата-центрдегі ресурстарға
оқшауланған қосылымды қамтамасыз ету.

00:34:59.400 --> 00:35:08.388
Бұл жағдайда бізге Transit Gateway-де Route Table-
ді өзгерту керек және Destination ретінде бүкіл

00:35:08.412 --> 00:35:17.400
Интернеттің немесе белгілі бір CIDR блогының
белгіленуі және бұл трафикті VPN-ге бағыттау керек.

00:35:17.400 --> 00:35:24.183
Осылайша, трафик ретінде
бірінші VPC-дің IP мекенжайын

00:35:24.207 --> 00:35:32.400
көрсетсеңіз де, ол route rule-ге
сәйкес оны VPN-ге бағыттайды.

00:35:32.400 --> 00:35:39.400
Әртүрлі VPC-де орналасқан ресурстар
бір-бірімен трафикті алмастыра алмайды.

00:35:39.400 --> 00:35:45.400
Бірақ сонымен бірге олар VPN арқылы трафикті
 жергілікті дата-центрлерге жібере алады.

00:35:45.400 --> 00:35:54.452
Келесі жағдай - AWS ішінде қалған,
бірақ басқа VPC-ге өтетін, және басқа

00:35:54.476 --> 00:36:03.400
трафик VPN-ге бағытталуы үшін
барлық трафикті сақтау қажет болғанда.

00:36:03.400 --> 00:36:08.888
Бұл жағдайда біз Transit gateway-де
Route table-ді өзгерте аламыз

00:36:08.912 --> 00:36:14.400
немесе алдыңғы routes көрсетілетін
басқа Route Table қоса аламыз.

00:36:14.400 --> 00:36:22.231
Осылайша, біз үшінші VPC-ден, мысалы,
екінші VPC-дегі ресурстарға қол жеткізгіміз

00:36:22.255 --> 00:36:29.400
келгенде, екінші route table-ге
сәйкес, біз трафикті сәтті бағыттаймыз.

00:36:29.400 --> 00:36:33.944
Әрі қарай, егер біз трафигімізді
VPC-ге емес, басқа IP мекенжайына

00:36:33.968 --> 00:36:39.563
бағыттағымыз келсе, ол екінші route
table-ге қатысты ережелерге сәйкес келмейді

00:36:39.587 --> 00:36:44.088
және бірінші route table-ді
қарастырады, бұл трафикті VPN жағына

00:36:44.112 --> 00:36:49.400
бағыттау керек екенін көреді және
сәйкесінше бұл трафик сол жерге барады.

00:36:53.400 --> 00:37:01.400
AWS Transit Gateway қалай баптау керектігін
есте сақтау үшін шағын тапсырма орындайық.

00:37:01.400 --> 00:37:09.400
Осы тапсырманың аясында бізге қиылыспайтын
бірегей CIDR блогы бар 5 түрлі VPC беріледі.

00:37:09.400 --> 00:37:13.888
Бізде сондай-ақ Transit Gateway
бар және біз барлық VPC-лерді

00:37:13.912 --> 00:37:18.400
AWS Transit Gateway арқылы
бір-біріне толығымен қосуымыз керек.

00:37:18.400 --> 00:37:23.388
Әрбір VPC-дің Route Table деңгейінде
қандай әрекеттерді орындау керек және

00:37:23.412 --> 00:37:28.400
Transit Gateway Route table деңгейінде
қандай әрекеттерді орындау қажет?

00:37:28.400 --> 00:37:32.400
Сіз бұл видеоны тоқтатып,
өзіңіз жауап беруге тырысыңыз.

00:37:37.400 --> 00:37:43.400
Жақсы, дұрыс жауап бере алдыңыз деп
ойлаймын, енді не істеу керек екенін тексерейік.

00:37:43.400 --> 00:37:49.400
Ең алдымен, әрбір VPC
деңгейінде бізге бір route қосу керек.

00:37:49.400 --> 00:37:55.230
Бұл route Destination ретінде CIDR блогын қамтиды,
бұл CIDR блогы барлық бар VPC құрылғыларының

00:37:55.254 --> 00:38:00.400
CIDR блоктарын қамтуы керек және Target
ретінде Transit Gateway көрсетілуі керек.

00:38:00.400 --> 00:38:07.035
Осылайша, біз Route Table жағында
әдепкі бірінші route осы VPC CIDR

00:38:07.059 --> 00:38:14.400
блогын қамтитынын және Target
ретінде local көрсететінін есте ұстаймыз.

00:38:14.400 --> 00:38:23.582
Бұл трафик жіберілетін IP мекенжайы белгілі
бір VPC-нің CIDR блогына жататын болса, онда ол

00:38:23.606 --> 00:38:33.400
жергілікті трафик ретінде танылады және сәйкесінше
сол VPC-де орналасқан ресурсқа бағытталады.

00:38:33.400 --> 00:38:39.400
Яғни, бұл VPC ішіндегі барлық ресурстарға
бір-бірімен байланысуға мүмкіндік беретін route.

00:38:39.400 --> 00:38:46.352
Енді біз қосқан келесі route, ол
барлық басқа CIDR блоктарын

00:38:46.376 --> 00:38:52.620
қамтиды және егер бізде
белгілі бір VPC CIDR блогына

00:38:52.644 --> 00:38:59.647
жатпайтын, бірақ сыртқа шығатын
IP мекенжайына сұрау болса,

00:38:59.671 --> 00:39:07.400
онда бұл жағдайда оның жалпы
CIDR блогына жататынын тексереміз.

00:39:07.400 --> 00:39:13.400
Олай болса, трафик Transit Gateway-ге өтеді. Мұндай
өзгерістер әрбір VPC деңгейінде жасалуы керек.

00:39:13.400 --> 00:39:18.031
Енді біз Transit Gateway
туралы айтатын болсақ, мұнда

00:39:18.055 --> 00:39:23.400
route table-ге 5 route, әрбір
VPC үшін 1 route қосу керек.

00:39:23.400 --> 00:39:28.888
Бұл route келесі параметрлерді қамтиды.
Destination ретінде VPC CIDR блогын

00:39:28.912 --> 00:39:34.400
көрсетеміз, ал Target ретінде сол
VPC Elastic Network Interface көрсетеміз.

00:39:34.400 --> 00:39:39.078
Яғни, егер Transit Gateway-де
белгілі бір IP мекенжайына

00:39:39.102 --> 00:39:44.632
бағытталған трафикті алсақ, ол
оның барлық route-тарын тексереді

00:39:44.656 --> 00:39:49.710
және егер бұл IP мекенжай
Destination-дағы CIDR блоктарының

00:39:49.734 --> 00:39:55.400
біріне жататын болса, онда ол
трафикті осы Target-ке бағыттайды.

00:39:55.400 --> 00:40:07.400
Осылайша, біз Transit Gateway арқылы барлық
VPC арасындағы байланысты баптай алдық.

00:40:07.400 --> 00:40:11.450
Осымен бесінші бөлім
аяқталды және мұнда AWS Transit

00:40:11.474 --> 00:40:16.400
Gateway сервисіне қатысты
негізгі ойларды атап өтуге болады.

00:40:16.400 --> 00:40:20.888
AWS Transit Gateway VPC
Peering connection бірдей рөл

00:40:20.912 --> 00:40:25.400
атқарады, бірақ оның орталық
хаб болуымен ерекшеленеді.

00:40:25.400 --> 00:40:30.250
Peering connection жағдайында
біз екі VPC-ді бір-біріне тікелей

00:40:30.274 --> 00:40:34.967
қосамыз, ал Transit Gateway
жағдайында бізге VPC-ні Transit

00:40:34.991 --> 00:40:39.482
Gateway-ге қосу жеткілікті
және ол осы Transit Gateway-ге

00:40:39.506 --> 00:40:44.400
қосылған барлық қолданыстағы
қосылымдарға қол жеткізе алады.

00:40:44.400 --> 00:40:54.400
Сіздің бизнес жағдайыңызға немесе мәселеңізге
байланысты сізге қайсысы тиімді екенін шешу керек.

00:40:54.400 --> 00:40:59.882
Немесе VPC арасында қосылымдар
саны аз болған жағдайда VPC Peering

00:40:59.906 --> 00:41:05.050
connection пайдаланыңыз, ал
керісінше жағдайда, VPC саны көп

00:41:05.074 --> 00:41:10.725
болса және әрбір VPC әрбір басқа
VPC-ге қосылуы қажет болса, онда

00:41:10.749 --> 00:41:16.400
бұл жағдайда сізге қолайлы шешім
AWS Transit Gateway болуы мүмкін.

00:41:16.400 --> 00:41:24.888
Біз дәрісіміздің алтыншы және соңғы бөліміне
жеттік және мұнда VPC ресурстарына басқа

00:41:24.912 --> 00:41:33.400
AWS сервистеріне қол жеткізуге мүмкіндік
беретін ресурстар туралы айтатын боламыз.

00:41:33.400 --> 00:41:38.400
Мұны жүзеге асыру үшін VPC
Endpoints пайдалану ұсынылады.

00:41:38.400 --> 00:41:47.131
Бұл - VPC ресурстарына желіге қосылмай
және жаһандық AWS инфрақұрылымында

00:41:47.155 --> 00:41:55.400
қалмай AWS сервистеріне тікелей
қосылуға мүмкіндік беретін ресурс.

00:41:55.400 --> 00:42:03.400
Осылайша, бізге Internet Gateway, VPN қосылымы,
NAT Gateway және т.б. баптаудың қажеті жоқ.

00:42:03.400 --> 00:42:10.400
VPC Endpoints
қосудың екі нұсқасы бар.

00:42:10.400 --> 00:42:17.437
Біріншісі - Interface Endpoint, бізге жеке IP
мекенжайы бөлінген кезде және осы жеке IP

00:42:17.461 --> 00:42:25.400
мекенжайы арқылы AWS Private Link функциясын
пайдалана отырып, біз басқа сервистерге қосыламыз.

00:42:25.400 --> 00:42:28.888
Барлық сервистер қолжетімді емес.
Бұл сервистердің мысалдары Amazon

00:42:28.912 --> 00:42:32.400
CloudWatch, Amazon EC2 және
Elastic Cloud Balancing болып табылады.

00:42:32.400 --> 00:42:37.983
Екінші опция - Gateway Endpoint.
Бұл жағдайда белгілі бір трафикті AWS

00:42:38.007 --> 00:42:44.400
қолдайтын сервистерге бағыттау үшін
route table жағында өзгерістер енгізіледі.

00:42:44.400 --> 00:42:49.400
Мысалдары Amazon S3 және
DynamoDB болып табылады.

00:42:49.400 --> 00:42:56.400
Енді Interface Endpoint параметрін
баптауға болатын мысалдарды қарастырайық.

00:42:56.400 --> 00:43:01.573
Ең алдымен, біз қандай сервиспен
жұмыс істейтінімізді және бұл сервиске

00:43:01.597 --> 00:43:06.400
Interface Endpoint арқылы қолдау
көрсетілетінін шешуіміз керек.

00:43:06.400 --> 00:43:10.888
Қолдау көрсетілсе, біз VPC
туралы шешім қабылдауымыз керек,

00:43:10.912 --> 00:43:15.400
ресурстардың осы сервиске
қосылатын subnet анықтауымыз керек.

00:43:15.400 --> 00:43:20.400
Төртінші қадамда жеке DNS әдепкі
бойынша белсендіруге болатынын көресіз.

00:43:20.400 --> 00:43:22.400
Мұның не үшін қажет
екенін сәл кейінірек айтамын.

00:43:22.400 --> 00:43:32.400
Соңғы қадам - Network Interface
үшін қажетті security groups баптау.

00:43:32.400 --> 00:43:41.400
Енді мұның бәрі өзара әрекеттесетін
мысалдарды қарастырайық.

00:43:41.400 --> 00:43:48.888
Біз VPC-ден белгілі бір сервиске
қосылымды орнатқан кезде, ол Amazon Kinesis

00:43:48.912 --> 00:43:56.400
Data Streams болсын, біз оған default
DNS hostname арқылы қол жеткізе аламыз.

00:43:56.400 --> 00:44:03.888
Бұл сервистің URL мекенжайы, ол арқылы осы
сервиске қол жеткізе аламыз, бірақ мәселе мынада, бұл

00:44:03.912 --> 00:44:11.400
кіру Internet gateway арқылы, Интернет арқылы өтеді
және сіз қосымша параметрмен қажетін көрсетесіз.

00:44:11.400 --> 00:44:19.400
Кейбір жүктемелер үшін бұл мүмкін емес. Басқа нұсқа
Endpoint Specific DNS hostname пайдалануға болады.

00:44:19.400 --> 00:44:27.400
Бұл Interface Endpoint-ке кейбір
DNS hostname тағайындалған кезде.

00:44:27.400 --> 00:44:33.400
Басқаша айтқанда, бұл URL мекенжайына сұраныс
бойынша трафик сізге қажет сервиске бағытталады.

00:44:33.400 --> 00:44:42.400
Бұл жағдайда Private DNS қосылмаған. Егер біз бұл
сервиске қол жеткізгіміз келсе, бізде екі нұсқа бар.

00:44:42.400 --> 00:44:46.481
Default DNS hostname арқылы қол
жеткізілсе, трафик Internet gateway

00:44:46.505 --> 00:44:50.400
арқылы өтеді және Интернет
арқылы біздің сервисімізге жетеді.

00:44:50.400 --> 00:44:58.388
Немесе Amazon Kinesis Data Stream
қосылымымен Interface Endpoint ішінде жасалған

00:44:58.412 --> 00:45:06.400
қолданбаларымыздың жағында ерекше
бірегей URL мекенжайын нақты көрсетуіміз керек.

00:45:06.400 --> 00:45:13.480
Бұл URL мекенжайына сұрау ғаламдық AWS
инфрақұрылымында орын алады, Интернетке

00:45:13.504 --> 00:45:20.400
өтпейді және VPC ішіндегі ресурстар
нақты сервиске тікелей қол жеткізеді.

00:45:20.400 --> 00:45:28.882
Енді тағы бір жағдай бар, біз Private DNS
іске қосқан кезде, бұл жағдайда трафикті

00:45:28.906 --> 00:45:37.388
Интернет арқылы, Internet gateway арқылы
әдепкі DNS hostname-ге бағыттаудың қажеті

00:45:37.412 --> 00:45:45.998
жоқ және бұл әдепкі DNS hostname да белсенді
болып қалады, бірақ осы URL мекенжайына

00:45:46.022 --> 00:45:54.400
сұрау арқылы біз трафикті Interface Gateway
арқылы қажетті сервиске бағыттаймыз.

00:45:54.400 --> 00:46:04.400
Басқаша айтқанда, біз әрбір сервис үшін әдепкі
DNS hostname білеміз, ол өзгермейді, ол стандартты.

00:46:04.400 --> 00:46:13.295
Сонымен, оны пайдаланғымыз келсе, бұл өте
ыңғайлы, Private DNS опциясын қоса аламыз және

00:46:13.319 --> 00:46:21.888
VPC ішіндегі қолданбаларымыз үшін Endpoint
Specific DNS hostname көрсетудің қажеті жоқ,

00:46:21.912 --> 00:46:30.725
бірақ белгілі бір сервистің жалпыға қолжетімді URL
мекенжайын, ғаламдық AWS инфрақұрылымында

00:46:30.749 --> 00:46:39.400
Интернетке қосылусыз Interface Endpoint арқылы
өтетінін біле отырып, тікелей қол жеткізе аласыз.

00:46:39.400 --> 00:46:46.388
Жақсы, осылайша біз дәрісіміздің
алтыншы бөлімінің соңына жеттік, бізде

00:46:46.412 --> 00:46:53.400
VPC ресурстарының AWS сервистеріне
қосылу мүмкіндігі бар екенін көрдік.

00:46:53.400 --> 00:47:01.400
Екі нұсқа бар. Бірінші нұсқа -Interface Gateway
арқылы, ал екіншісі - Gateway Endpoint арқылы.

00:47:01.400 --> 00:47:09.272
Екі жағдайда да, сізге қандай сервис қажет екеніне
байланысты белгілі бір AWS сервистеріне қолдау

00:47:09.296 --> 00:47:13.836
көрсетіледі және қолдау
көрсетілетін сервистер тізімін

00:47:13.860 --> 00:47:18.400
қарап, қай опцияны қолдану
керектігін түсінуге болады.

00:47:21.400 --> 00:47:31.400
Осымен дәрісімізді аяқтаймыз. Біз networking-ке
қатысты маңызды мәселелерді талқыладық.

00:47:31.400 --> 00:47:37.094
Жергілікті инфрақұрылымды AWS
бұлттарымен қалай қосуға болатынын, бұл

00:47:37.118 --> 00:47:43.400
үшін қандай мүмкіндіктер бар екенін,
кем дегенде екі нұсқаны қарастырдық.

00:47:43.400 --> 00:47:50.400
Біз сондай-ақ AWS бұлтында VPC, бірнеше
VPC бір-біріне қосу опциясын қарастырдық.

00:47:50.400 --> 00:47:53.400
Сіздің жағдайыңызға
байланысты да бірнеше нұсқа бар.

00:47:53.400 --> 00:48:01.936
Және соңғы нұсқа, біз сондай-ақ сервисті VPC
ішінде орналастыру мүмкін емес, бірақ VPC-ден

00:48:01.960 --> 00:48:10.400
VPC Endpoint арқылы осы сервистермен
қауіпсіз жұмыс істей алатын жағдайды қарастырдық.

00:48:13.400 --> 00:48:20.400
Бұл слайдта сіз Интернеттегі қосымша ресурстарға
қол жеткізуге көмектесетін кілт сөздерді көре аласыз.

00:48:20.400 --> 00:48:25.793
Көбінесе олар AWS құжаттамасын
немесе YouTube видео

00:48:25.817 --> 00:48:32.400
хостинг сайтында орналасқан
re:Invent жазбаларын жүргізеді.

00:48:34.400 --> 00:48:42.400
Осымен бүгінгі дәрісіміз аяқталды. Назарларыңызға
рахмет, келесі белсенділіктерде кездескенше.